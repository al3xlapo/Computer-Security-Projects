
;; Function compress32 (compress32, funcdef_no=11, decl_uid=3211, cgraph_uid=11, symbol_order=19)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (reg/v/f:DI 357 [ datablock ])

   after canon_rtx address: (reg/v/f:DI 357 [ datablock ])

   after cselib_expand address: (reg:DI 1 dx [ datablock ])

   after canon_rtx address: (reg:DI 1 dx [ datablock ])
  varying cselib base=2:2 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 357 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8])
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -64 [0xffffffffffffffc0]))
  gid=0 offset=-64 
 processing const base store gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=65
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 4 [0x4]))
  varying cselib base=2:2 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8])
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -60 [0xffffffffffffffc4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -60 [0xffffffffffffffc4]))
  gid=0 offset=-60 
 processing const base store gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=68
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 8 [0x8]))
  varying cselib base=2:2 offset = 8
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8])
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -56 [0xffffffffffffffc8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -56 [0xffffffffffffffc8]))
  gid=0 offset=-56 
 processing const base store gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=71
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 12 [0xc]))
  varying cselib base=2:2 offset = 12
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8])
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -52 [0xffffffffffffffcc]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -52 [0xffffffffffffffcc]))
  gid=0 offset=-52 
 processing const base store gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=74
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 16 [0x10]))
  varying cselib base=2:2 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8])
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -48 [0xffffffffffffffd0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -48 [0xffffffffffffffd0]))
  gid=0 offset=-48 
 processing const base store gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=77
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 20 [0x14]))
  varying cselib base=2:2 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8])
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -44 [0xffffffffffffffd4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -44 [0xffffffffffffffd4]))
  gid=0 offset=-44 
 processing const base store gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=80
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 24 [0x18]))
  varying cselib base=2:2 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8])
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))
  gid=0 offset=-40 
 processing const base store gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=83
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 28 [0x1c]))
  varying cselib base=2:2 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8])
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -36 [0xffffffffffffffdc]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -36 [0xffffffffffffffdc]))
  gid=0 offset=-36 
 processing const base store gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=86
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 32 [0x20]))
  varying cselib base=2:2 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8])
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))
  gid=0 offset=-32 
 processing const base store gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=89
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 36 [0x24]))
  varying cselib base=2:2 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8])
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -28 [0xffffffffffffffe4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -28 [0xffffffffffffffe4]))
  gid=0 offset=-28 
 processing const base store gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=92
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 40 [0x28]))
  varying cselib base=2:2 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8])
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))
  gid=0 offset=-24 
 processing const base store gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=95
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 44 [0x2c]))
  varying cselib base=2:2 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8])
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))
  gid=0 offset=-20 
 processing const base store gid=0[-20..-16)
    trying store in insn=94 gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=98
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 48 [0x30]))
  varying cselib base=2:2 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8])
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
  gid=0 offset=-16 
 processing const base store gid=0[-16..-12)
    trying store in insn=97 gid=0[-20..-16)
    trying store in insn=94 gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=101
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 52 [0x34]))
  varying cselib base=2:2 offset = 52
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8])
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=103
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))
  gid=0 offset=-12 
 processing const base store gid=0[-12..-8)
    trying store in insn=100 gid=0[-16..-12)
    trying store in insn=97 gid=0[-20..-16)
    trying store in insn=94 gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=104
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 56 [0x38]))
  varying cselib base=2:2 offset = 56
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8])
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
  gid=0 offset=-8 
 processing const base store gid=0[-8..-4)
    trying store in insn=103 gid=0[-12..-8)
    trying store in insn=100 gid=0[-16..-12)
    trying store in insn=97 gid=0[-20..-16)
    trying store in insn=94 gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=107
  mem: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 357 [ datablock ])
    (const_int 60 [0x3c]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 60 [0x3c]))
  varying cselib base=2:2 offset = 60
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
        (const_int 60 [0x3c])) [0 MEM[(const BitSequence *)datablock_5(D) + 60B]+0 S4 A8])
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))
  gid=0 offset=-4 
 processing const base store gid=0[-4..0)
    trying store in insn=106 gid=0[-8..-4)
    trying store in insn=103 gid=0[-12..-8)
    trying store in insn=100 gid=0[-16..-12)
    trying store in insn=97 gid=0[-20..-16)
    trying store in insn=94 gid=0[-24..-20)
    trying store in insn=91 gid=0[-28..-24)
    trying store in insn=88 gid=0[-32..-28)
    trying store in insn=85 gid=0[-36..-32)
    trying store in insn=82 gid=0[-40..-36)
    trying store in insn=79 gid=0[-44..-40)
    trying store in insn=76 gid=0[-48..-44)
    trying store in insn=73 gid=0[-52..-48)
    trying store in insn=70 gid=0[-56..-52)
    trying store in insn=67 gid=0[-60..-56)
    trying store in insn=64 gid=0[-64..-60)
mems_found = 1, cannot_delete = false

**scanning insn=110
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 16 [0x10])) [2 state_246(D)->h32+0 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=111
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 20 [0x14]))
  varying cselib base=1:1 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 20 [0x14])) [2 state_246(D)->h32+4 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=112
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 24 [0x18])) [2 state_246(D)->h32+8 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=113
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 28 [0x1c]))
  varying cselib base=1:1 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 28 [0x1c])) [2 state_246(D)->h32+12 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=114
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 32 [0x20])) [2 state_246(D)->h32+16 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=115
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 36 [0x24])) [2 state_246(D)->h32+20 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=116
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 40 [0x28])) [2 state_246(D)->h32+24 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 44 [0x2c]))
  varying cselib base=1:1 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 44 [0x2c])) [2 state_246(D)->h32+28 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=118
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 120 [0x78]))
  varying cselib base=1:1 offset = 120
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 120 [0x78])) [2 state_246(D)->salt32+0 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 124 [0x7c]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 124 [0x7c]))
  varying cselib base=1:1 offset = 124
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 124 [0x7c])) [2 state_246(D)->salt32+4 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 128 [0x80]))
  varying cselib base=1:1 offset = 128
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 128 [0x80])) [2 state_246(D)->salt32+8 S4 A64])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=124
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 132 [0x84]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 132 [0x84]))
  varying cselib base=1:1 offset = 132
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 132 [0x84])) [2 state_246(D)->salt32+12 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 12 [0xc])) [2 state_246(D)->nullt+0 S4 A32])
 processing cselib load against insn 109
 processing cselib load against insn 106
 processing cselib load against insn 103
 processing cselib load against insn 100
 processing cselib load against insn 97
 processing cselib load against insn 94
 processing cselib load against insn 91
 processing cselib load against insn 88
 processing cselib load against insn 85
 processing cselib load against insn 82
 processing cselib load against insn 79
 processing cselib load against insn 76
 processing cselib load against insn 73
 processing cselib load against insn 70
 processing cselib load against insn 67
 processing cselib load against insn 64
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=129
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 48 [0x30])) [2 state_246(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
        (const_int 52 [0x34])) [2 state_246(D)->t32+4 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=201
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=207
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=209
mems_found = 0, cannot_delete = true

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=211
mems_found = 0, cannot_delete = true

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=213
mems_found = 0, cannot_delete = true

**scanning insn=214
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=225
mems_found = 0, cannot_delete = true

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=233
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=235
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=240
mems_found = 0, cannot_delete = true

**scanning insn=241
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=256
mems_found = 0, cannot_delete = true

**scanning insn=257
mems_found = 0, cannot_delete = true

**scanning insn=258
mems_found = 0, cannot_delete = true

**scanning insn=259
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=266
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=268
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=273
  mem: (reg:DI 281 [ ivtmp.77 ])

   after canon_rtx address: (reg:DI 281 [ ivtmp.77 ])

   after cselib_expand address: (reg:DI 281 [ ivtmp.77 ])

   after canon_rtx address: (reg:DI 281 [ ivtmp.77 ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:QI (reg:DI 281 [ ivtmp.77 ]) [0 MEM[base: _514, offset: 0B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=274
mems_found = 0, cannot_delete = true

**scanning insn=275
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 438 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 438 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=6:4540 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=276
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 1 [0x1]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 1 [0x1]))
  varying cselib base=1:1 offset = 1
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 1 [0x1])) [0 MEM[base: _514, offset: 1B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=277
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=279
mems_found = 0, cannot_delete = true

**scanning insn=281
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 440 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 440 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=12:4547 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=285
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 2 [0x2]))
  varying cselib base=1:1 offset = 2
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 2 [0x2])) [0 MEM[base: _514, offset: 2B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=287
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 444 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 444 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=17:4552 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=288
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 3 [0x3]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 3 [0x3]))
  varying cselib base=1:1 offset = 3
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 3 [0x3])) [0 MEM[base: _514, offset: 3B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=290
mems_found = 0, cannot_delete = true

**scanning insn=291
mems_found = 0, cannot_delete = true

**scanning insn=293
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 446 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 446 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=22:4557 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 4 [0x4])) [0 MEM[base: _514, offset: 4B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=299
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 450 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 450 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=27:4562 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=300
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 5 [0x5]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 5 [0x5]))
  varying cselib base=1:1 offset = 5
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 5 [0x5])) [0 MEM[base: _514, offset: 5B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = true

**scanning insn=303
mems_found = 0, cannot_delete = true

**scanning insn=305
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 452 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 452 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=32:4567 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=309
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 6 [0x6]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 6 [0x6]))
  varying cselib base=1:1 offset = 6
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 6 [0x6])) [0 MEM[base: _514, offset: 6B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=310
mems_found = 0, cannot_delete = true

**scanning insn=311
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 456 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 456 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=37:4572 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=312
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 7 [0x7]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 7 [0x7]))
  varying cselib base=1:1 offset = 7
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 7 [0x7])) [0 MEM[base: _514, offset: 7B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=317
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 458 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 458 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=42:4577 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=320
mems_found = 0, cannot_delete = true

**scanning insn=321
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 8 [0x8])) [0 MEM[base: _514, offset: 8B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=322
mems_found = 0, cannot_delete = true

**scanning insn=323
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 462 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 462 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=47:4582 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=324
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 9 [0x9]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 9 [0x9]))
  varying cselib base=1:1 offset = 9
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 9 [0x9])) [0 MEM[base: _514, offset: 9B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=327
mems_found = 0, cannot_delete = true

**scanning insn=329
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 464 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 464 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=52:4587 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=332
mems_found = 0, cannot_delete = true

**scanning insn=333
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 10 [0xa]))
  varying cselib base=1:1 offset = 10
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 10 [0xa])) [0 MEM[base: _514, offset: 10B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=334
mems_found = 0, cannot_delete = true

**scanning insn=335
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 468 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 468 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=57:4592 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=336
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 11 [0xb]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 11 [0xb]))
  varying cselib base=1:1 offset = 11
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 11 [0xb])) [0 MEM[base: _514, offset: 11B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=338
mems_found = 0, cannot_delete = true

**scanning insn=339
mems_found = 0, cannot_delete = true

**scanning insn=341
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 470 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 470 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=62:4597 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=344
mems_found = 0, cannot_delete = true

**scanning insn=345
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 12 [0xc])) [0 MEM[base: _514, offset: 12B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=346
mems_found = 0, cannot_delete = true

**scanning insn=347
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 474 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 474 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=67:4602 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=348
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 13 [0xd]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 13 [0xd]))
  varying cselib base=1:1 offset = 13
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 13 [0xd])) [0 MEM[base: _514, offset: 13B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=350
mems_found = 0, cannot_delete = true

**scanning insn=351
mems_found = 0, cannot_delete = true

**scanning insn=353
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 476 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 476 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=72:4607 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=356
mems_found = 0, cannot_delete = true

**scanning insn=357
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 14 [0xe]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 14 [0xe]))
  varying cselib base=1:1 offset = 14
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 14 [0xe])) [0 MEM[base: _514, offset: 14B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=358
mems_found = 0, cannot_delete = true

**scanning insn=359
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 480 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 480 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=77:4612 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=360
  mem: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 15 [0xf]))

   after cselib_expand address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg:DI 281 [ ivtmp.77 ])
    (const_int 15 [0xf]))
  varying cselib base=1:1 offset = 15
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
        (const_int 15 [0xf])) [0 MEM[base: _514, offset: 15B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=362
mems_found = 0, cannot_delete = true

**scanning insn=363
mems_found = 0, cannot_delete = true

**scanning insn=365
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
            (const_int 4 [0x4]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 482 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 482 [ D.5782 ])
            (const_int 2 [0x2]))
        (reg/f:DI 20 frame))
    (const_int -64 [0xffffffffffffffc0]))
  varying cselib base=82:4617 offset = -64
 processing cselib load mem:(mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
                (const_int 4 [0x4]))
            (reg/f:DI 20 frame))
        (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=368
mems_found = 0, cannot_delete = true

**scanning insn=375
mems_found = 0, cannot_delete = true

**scanning insn=376
mems_found = 0, cannot_delete = true

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=378
mems_found = 0, cannot_delete = true

**scanning insn=379
mems_found = 0, cannot_delete = true

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=381
mems_found = 0, cannot_delete = true

**scanning insn=382
mems_found = 0, cannot_delete = true

**scanning insn=383
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=387
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=390
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=32:32 offset = 16
 processing cselib store [16..32)
mems_found = 1, cannot_delete = false

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=393
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=395
mems_found = 0, cannot_delete = true

**scanning insn=396
mems_found = 0, cannot_delete = true

**scanning insn=397
mems_found = 0, cannot_delete = true

**scanning insn=398
mems_found = 0, cannot_delete = true

**scanning insn=402
mems_found = 0, cannot_delete = true

**scanning insn=403
mems_found = 0, cannot_delete = true

**scanning insn=404
mems_found = 0, cannot_delete = true

**scanning insn=405
mems_found = 0, cannot_delete = true

**scanning insn=406
mems_found = 0, cannot_delete = true

**scanning insn=407
  mem: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 356 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=32:32 offset = 32
 processing cselib store [32..48)
    trying store in insn=390 gid=-1[16..32)
mems_found = 1, cannot_delete = false

**scanning insn=412
mems_found = 0, cannot_delete = true

**scanning insn=413
mems_found = 0, cannot_delete = false
group 0 is frame related group 0(64+0): n 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 16 (  1.8)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64

( 0 )->[2]->( 4 3 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  kill: 
  out:  

( 2 )->[3]->( 5 )
  in:   
  gen:  
  kill: 
  out:  

( 2 )->[4]->( 5 )
  in:   
  gen:  
  kill: 
  out:  

( 4 3 )->[5]->( 6 )
  in:   
  gen:  
  kill: 
  out:  

( 7 5 )->[6]->( 7 8 )
  in:   
  gen:  
  kill: 
  out:  

( 6 )->[7]->( 6 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  out:  

( 6 )->[8]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64

( 8 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 127
  v:  
starting to process insn 126
  v:  
regular read
starting to process insn 125
  v:  
starting to process insn 124
  v:  
regular read
starting to process insn 123
  v:  
starting to process insn 122
  v:  
regular read
starting to process insn 121
  v:  
starting to process insn 120
  v:  
regular read
starting to process insn 119
  v:  
starting to process insn 118
  v:  
regular read
starting to process insn 117
  v:  
regular read
starting to process insn 116
  v:  
regular read
starting to process insn 115
  v:  
regular read
starting to process insn 114
  v:  
regular read
starting to process insn 113
  v:  
regular read
starting to process insn 112
  v:  
regular read
starting to process insn 111
  v:  
regular read
starting to process insn 110
  v:  
regular read
starting to process insn 109
  v:  
starting to process insn 108
  v:  1, 2, 3, 4
starting to process insn 107
  v:  1, 2, 3, 4
regular read
starting to process insn 106
  v:  1, 2, 3, 4
i = -8, index = 8
failing at i = -8
starting to process insn 105
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 104
  v:  1, 2, 3, 4, 5, 6, 7, 8
regular read
starting to process insn 103
  v:  1, 2, 3, 4, 5, 6, 7, 8
i = -12, index = 12
failing at i = -12
starting to process insn 102
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
starting to process insn 101
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
regular read
starting to process insn 100
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
i = -16, index = 16
failing at i = -16
starting to process insn 99
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 98
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 97
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
i = -20, index = 20
failing at i = -20
starting to process insn 96
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 95
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 94
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = -24, index = 24
failing at i = -24
starting to process insn 93
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
starting to process insn 92
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
regular read
starting to process insn 91
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
i = -28, index = 28
failing at i = -28
starting to process insn 90
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
starting to process insn 89
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
regular read
starting to process insn 88
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28
i = -32, index = 32
failing at i = -32
starting to process insn 87
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
starting to process insn 86
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
regular read
starting to process insn 85
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
i = -36, index = 36
failing at i = -36
starting to process insn 84
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
starting to process insn 83
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
regular read
starting to process insn 82
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
i = -40, index = 40
failing at i = -40
starting to process insn 81
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
starting to process insn 80
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
regular read
starting to process insn 79
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
i = -44, index = 44
failing at i = -44
starting to process insn 78
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
starting to process insn 77
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
regular read
starting to process insn 76
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
i = -48, index = 48
failing at i = -48
starting to process insn 75
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
starting to process insn 74
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
regular read
starting to process insn 73
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
i = -52, index = 52
failing at i = -52
starting to process insn 72
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
starting to process insn 71
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
regular read
starting to process insn 70
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
i = -56, index = 56
failing at i = -56
starting to process insn 69
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
starting to process insn 68
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
regular read
starting to process insn 67
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
i = -60, index = 60
failing at i = -60
starting to process insn 66
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60
starting to process insn 65
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60
regular read
starting to process insn 64
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60
i = -64, index = 64
failing at i = -64
starting to process insn 63
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 62
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
regular read
starting to process insn 29
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 28
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 134
  v:  
starting to process insn 133
  v:  
starting to process insn 132
  v:  
regular read
starting to process insn 131
  v:  
starting to process insn 130
  v:  
starting to process insn 129
  v:  
regular read
starting to process insn 34
  v:  
starting to process insn 33
  v:  
starting to process insn 32
  v:  
starting to process insn 31
  v:  
starting to process insn 59
  v:  
starting to process insn 58
  v:  
starting to process insn 57
  v:  
starting to process insn 56
  v:  
starting to process insn 55
  v:  
starting to process insn 54
  v:  
starting to process insn 53
  v:  
starting to process insn 52
  v:  
starting to process insn 51
  v:  
starting to process insn 50
  v:  
starting to process insn 49
  v:  
starting to process insn 48
  v:  
starting to process insn 47
  v:  
starting to process insn 46
  v:  
starting to process insn 45
  v:  
starting to process insn 44
  v:  
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 41
  v:  
starting to process insn 40
  v:  
starting to process insn 39
  v:  
starting to process insn 38
  v:  
starting to process insn 37
  v:  
starting to process insn 36
  v:  
starting to process insn 35
  v:  
starting to process insn 137
  v:  
starting to process insn 270
  v:  
starting to process insn 269
  v:  
starting to process insn 268
  v:  
starting to process insn 267
  v:  
starting to process insn 266
  v:  
starting to process insn 265
  v:  
starting to process insn 264
  v:  
starting to process insn 263
  v:  
starting to process insn 262
  v:  
starting to process insn 261
  v:  
starting to process insn 260
  v:  
starting to process insn 259
  v:  
starting to process insn 258
  v:  
starting to process insn 257
  v:  
starting to process insn 256
  v:  
starting to process insn 255
  v:  
starting to process insn 254
  v:  
starting to process insn 253
  v:  
starting to process insn 252
  v:  
starting to process insn 251
  v:  
starting to process insn 250
  v:  
starting to process insn 249
  v:  
starting to process insn 248
  v:  
starting to process insn 247
  v:  
starting to process insn 246
  v:  
starting to process insn 245
  v:  
starting to process insn 244
  v:  
starting to process insn 243
  v:  
starting to process insn 242
  v:  
starting to process insn 241
  v:  
starting to process insn 240
  v:  
starting to process insn 239
  v:  
starting to process insn 238
  v:  
starting to process insn 237
  v:  
starting to process insn 236
  v:  
starting to process insn 235
  v:  
starting to process insn 234
  v:  
starting to process insn 233
  v:  
starting to process insn 232
  v:  
starting to process insn 231
  v:  
starting to process insn 230
  v:  
starting to process insn 229
  v:  
starting to process insn 228
  v:  
starting to process insn 227
  v:  
starting to process insn 226
  v:  
starting to process insn 225
  v:  
starting to process insn 224
  v:  
starting to process insn 223
  v:  
starting to process insn 222
  v:  
starting to process insn 221
  v:  
starting to process insn 220
  v:  
starting to process insn 219
  v:  
starting to process insn 218
  v:  
starting to process insn 217
  v:  
starting to process insn 216
  v:  
starting to process insn 215
  v:  
starting to process insn 214
  v:  
starting to process insn 213
  v:  
starting to process insn 212
  v:  
starting to process insn 211
  v:  
starting to process insn 210
  v:  
starting to process insn 209
  v:  
starting to process insn 208
  v:  
starting to process insn 207
  v:  
starting to process insn 206
  v:  
starting to process insn 205
  v:  
starting to process insn 204
  v:  
starting to process insn 203
  v:  
starting to process insn 202
  v:  
starting to process insn 201
  v:  
starting to process insn 200
  v:  
starting to process insn 199
  v:  
starting to process insn 198
  v:  
starting to process insn 197
  v:  
starting to process insn 196
  v:  
starting to process insn 195
  v:  
starting to process insn 194
  v:  
starting to process insn 193
  v:  
starting to process insn 192
  v:  
starting to process insn 191
  v:  
starting to process insn 190
  v:  
starting to process insn 189
  v:  
starting to process insn 188
  v:  
starting to process insn 187
  v:  
starting to process insn 186
  v:  
starting to process insn 185
  v:  
starting to process insn 184
  v:  
starting to process insn 183
  v:  
starting to process insn 182
  v:  
starting to process insn 181
  v:  
starting to process insn 180
  v:  
starting to process insn 179
  v:  
starting to process insn 178
  v:  
starting to process insn 177
  v:  
starting to process insn 176
  v:  
starting to process insn 175
  v:  
starting to process insn 174
  v:  
starting to process insn 173
  v:  
starting to process insn 172
  v:  
starting to process insn 171
  v:  
starting to process insn 170
  v:  
starting to process insn 169
  v:  
starting to process insn 168
  v:  
starting to process insn 167
  v:  
starting to process insn 166
  v:  
starting to process insn 165
  v:  
starting to process insn 164
  v:  
starting to process insn 163
  v:  
starting to process insn 162
  v:  
starting to process insn 161
  v:  
starting to process insn 160
  v:  
starting to process insn 159
  v:  
starting to process insn 158
  v:  
starting to process insn 157
  v:  
starting to process insn 156
  v:  
starting to process insn 155
  v:  
starting to process insn 154
  v:  
starting to process insn 153
  v:  
starting to process insn 152
  v:  
starting to process insn 151
  v:  
starting to process insn 150
  v:  
starting to process insn 149
  v:  
starting to process insn 148
  v:  
starting to process insn 147
  v:  
starting to process insn 146
  v:  
starting to process insn 145
  v:  
starting to process insn 144
  v:  
starting to process insn 143
  v:  
starting to process insn 142
  v:  
starting to process insn 141
  v:  
starting to process insn 140
  v:  
starting to process insn 139
  v:  
starting to process insn 368
  v:  
starting to process insn 365
  v:  
regular read
starting to process insn 363
  v:  
starting to process insn 362
  v:  
starting to process insn 360
  v:  
regular read
starting to process insn 359
  v:  
regular read
starting to process insn 358
  v:  
starting to process insn 357
  v:  
regular read
starting to process insn 356
  v:  
starting to process insn 353
  v:  
regular read
starting to process insn 351
  v:  
starting to process insn 350
  v:  
starting to process insn 348
  v:  
regular read
starting to process insn 347
  v:  
regular read
starting to process insn 346
  v:  
starting to process insn 345
  v:  
regular read
starting to process insn 344
  v:  
starting to process insn 341
  v:  
regular read
starting to process insn 339
  v:  
starting to process insn 338
  v:  
starting to process insn 336
  v:  
regular read
starting to process insn 335
  v:  
regular read
starting to process insn 334
  v:  
starting to process insn 333
  v:  
regular read
starting to process insn 332
  v:  
starting to process insn 329
  v:  
regular read
starting to process insn 327
  v:  
starting to process insn 326
  v:  
starting to process insn 324
  v:  
regular read
starting to process insn 323
  v:  
regular read
starting to process insn 322
  v:  
starting to process insn 321
  v:  
regular read
starting to process insn 320
  v:  
starting to process insn 317
  v:  
regular read
starting to process insn 315
  v:  
starting to process insn 314
  v:  
starting to process insn 312
  v:  
regular read
starting to process insn 311
  v:  
regular read
starting to process insn 310
  v:  
starting to process insn 309
  v:  
regular read
starting to process insn 308
  v:  
starting to process insn 305
  v:  
regular read
starting to process insn 303
  v:  
starting to process insn 302
  v:  
starting to process insn 300
  v:  
regular read
starting to process insn 299
  v:  
regular read
starting to process insn 298
  v:  
starting to process insn 297
  v:  
regular read
starting to process insn 296
  v:  
starting to process insn 293
  v:  
regular read
starting to process insn 291
  v:  
starting to process insn 290
  v:  
starting to process insn 288
  v:  
regular read
starting to process insn 287
  v:  
regular read
starting to process insn 286
  v:  
starting to process insn 285
  v:  
regular read
starting to process insn 284
  v:  
starting to process insn 281
  v:  
regular read
starting to process insn 279
  v:  
starting to process insn 278
  v:  
starting to process insn 277
  v:  
starting to process insn 276
  v:  
regular read
starting to process insn 275
  v:  
regular read
starting to process insn 274
  v:  
starting to process insn 273
  v:  
regular read
starting to process insn 413
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 412
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 407
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 406
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 405
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 404
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 403
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 402
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 398
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 397
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 396
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 395
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 394
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 393
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 392
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 390
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 389
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 388
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 387
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 386
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 385
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 384
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 383
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 382
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 381
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 380
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 379
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 378
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 377
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 376
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 375
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


compress32

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 17[flags]
;;  ref usage 	r0={1d,2u} r1={1d,1u} r2={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u,2e} r17={140d,2u} r20={1d,40u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} r113={2d,2u} r128={1d,2u} r129={1d,2u} r130={1d,2u} r131={1d,2u} r132={1d,2u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,2u} r139={1d,2u} r141={1d,2u} r142={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,2u} r149={1d,2u} r152={1d,2u} r154={1d,2u} r155={1d,2u} r157={1d,2u} r160={1d,2u} r162={1d,2u} r163={1d,2u} r165={1d,2u} r168={1d,2u} r170={1d,2u} r171={1d,2u} r173={1d,2u} r176={1d,2u} r178={1d,2u} r179={1d,2u} r181={1d,2u} r184={1d,2u} r186={1d,2u} r187={1d,2u} r189={1d,2u} r192={1d,2u} r194={1d,2u} r195={1d,2u} r197={1d,2u} r200={1d,2u} r202={1d,2u} r203={1d,2u} r205={1d,2u} r206={2d,3u} r209={1d,2u} r211={1d,2u} r212={1d,2u} r214={1d,2u} r217={2d,3u} r219={3d,3u} r220={2d,3u} r222={2d,3u} r225={1d,2u} r227={1d,2u} r228={1d,2u} r230={1d,2u} r233={2d,3u} r235={3d,3u} r238={2d,3u} r241={1d,2u} r243={1d,2u} r244={1d,2u} r247={1d,2u} r250={2d,3u} r252={3d,3u} r254={2d,3u} r256={2d,3u} r260={1d,2u} r262={1d,2u} r264={1d,2u} r266={1d,2u} r270={2d,3u} r273={3d,3u} r274={2d,3u} r276={2d,3u} r281={2d,17u} r292={1d,1u} r293={2d,2u} r295={1d,1u} r296={2d,1u} r297={2d,2u} r298={2d,1u} r300={1d,1u} r301={2d,2u} r303={1d,1u} r304={2d,1u} r305={2d,2u} r306={2d,1u} r308={1d,1u} r309={2d,2u} r311={1d,1u} r312={2d,1u} r313={2d,2u} r314={2d,1u} r316={1d,1u} r317={2d,2u} r319={1d,1u} r320={2d,1u} r321={2d,2u} r322={2d,1u} r324={1d,1u} r325={2d,2u} r327={1d,1u} r328={2d,1u} r329={2d,2u} r330={2d,1u} r332={1d,1u} r333={2d,2u} r335={1d,1u} r336={2d,1u} r337={2d,2u} r338={2d,1u} r340={1d,1u} r341={2d,2u} r343={1d,1u} r344={2d,1u} r345={2d,2u} r346={2d,1u} r348={1d,1u} r349={2d,2u} r351={1d,1u} r352={2d,1u} r353={2d,2u} r354={2d,1u} r356={1d,17u} r357={1d,16u,15e} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,2u,1e} r439={1d,16u} r440={1d,2u,1e} r444={1d,2u,1e} r446={1d,2u,1e} r450={1d,2u,1e} r452={1d,2u,1e} r456={1d,2u,1e} r458={1d,2u,1e} r462={1d,2u,1e} r464={1d,2u,1e} r468={1d,2u,1e} r470={1d,2u,1e} r474={1d,2u,1e} r476={1d,2u,1e} r480={1d,2u,1e} r482={1d,2u,1e} r486={1d,1u} r487={1d,1u} r488={1d,1u} r489={1d,1u} r490={1d,1u} r491={1d,1u} r492={1d,1u} r493={1d,2u} r494={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u} r506={1d,1u} r507={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u} r514={1d,1u} r515={1d,1u} 
;;    total ref usage 1007{461d,513u,33e} in 332{332 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 667, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373
;; live  kill	 17 [flags]
(note 60 0 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 28 60 29 2 (set (reg/v/f:DI 356 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 29 28 30 2 (set (reg/v/f:DI 357 [ datablock ])
        (reg:DI 1 dx [ datablock ])) blake_ref.c:9 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ datablock ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 datablock+0 S8 A64])
            (nil))))
(note 30 29 62 2 NOTE_INSN_FUNCTION_BEG)
(insn 62 30 63 2 (set (reg:SI 358 [ MEM[(const BitSequence *)datablock_5(D)] ])
        (mem:SI (reg/v/f:DI 357 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 63 62 64 2 (set (reg:SI 293 [ D.5786 ])
        (bswap:SI (reg:SI 358 [ MEM[(const BitSequence *)datablock_5(D)] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 358 [ MEM[(const BitSequence *)datablock_5(D)] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (reg/v/f:DI 357 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8]))
            (nil))))
(insn 64 63 65 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 m+0 S4 A128])
        (reg:SI 293 [ D.5786 ])) blake_ref.c:32 90 {*movsi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:SI 359 [ MEM[(const BitSequence *)datablock_5(D) + 4B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:SI 297 [ D.5786 ])
        (bswap:SI (reg:SI 359 [ MEM[(const BitSequence *)datablock_5(D) + 4B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 359 [ MEM[(const BitSequence *)datablock_5(D) + 4B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8]))
            (nil))))
(insn 67 66 68 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 m+4 S4 A32])
        (reg:SI 297 [ D.5786 ])) blake_ref.c:33 90 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SI 360 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:SI 301 [ D.5786 ])
        (bswap:SI (reg:SI 360 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 360 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8]))
            (nil))))
(insn 70 69 71 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 m+8 S4 A64])
        (reg:SI 301 [ D.5786 ])) blake_ref.c:34 90 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:SI 361 [ MEM[(const BitSequence *)datablock_5(D) + 12B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SI 305 [ D.5786 ])
        (bswap:SI (reg:SI 361 [ MEM[(const BitSequence *)datablock_5(D) + 12B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 361 [ MEM[(const BitSequence *)datablock_5(D) + 12B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8]))
            (nil))))
(insn 73 72 74 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [2 m+12 S4 A32])
        (reg:SI 305 [ D.5786 ])) blake_ref.c:35 90 {*movsi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:SI 362 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SI 309 [ D.5786 ])
        (bswap:SI (reg:SI 362 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 362 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8]))
            (nil))))
(insn 76 75 77 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 m+16 S4 A128])
        (reg:SI 309 [ D.5786 ])) blake_ref.c:36 90 {*movsi_internal}
     (nil))
(insn 77 76 78 2 (set (reg:SI 363 [ MEM[(const BitSequence *)datablock_5(D) + 20B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:SI 313 [ D.5786 ])
        (bswap:SI (reg:SI 363 [ MEM[(const BitSequence *)datablock_5(D) + 20B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 363 [ MEM[(const BitSequence *)datablock_5(D) + 20B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8]))
            (nil))))
(insn 79 78 80 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 m+20 S4 A32])
        (reg:SI 313 [ D.5786 ])) blake_ref.c:37 90 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:SI 364 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 81 80 82 2 (set (reg:SI 317 [ D.5786 ])
        (bswap:SI (reg:SI 364 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 364 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8]))
            (nil))))
(insn 82 81 83 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 m+24 S4 A64])
        (reg:SI 317 [ D.5786 ])) blake_ref.c:38 90 {*movsi_internal}
     (nil))
(insn 83 82 84 2 (set (reg:SI 365 [ MEM[(const BitSequence *)datablock_5(D) + 28B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SI 321 [ D.5786 ])
        (bswap:SI (reg:SI 365 [ MEM[(const BitSequence *)datablock_5(D) + 28B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 365 [ MEM[(const BitSequence *)datablock_5(D) + 28B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8]))
            (nil))))
(insn 85 84 86 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 m+28 S4 A32])
        (reg:SI 321 [ D.5786 ])) blake_ref.c:39 90 {*movsi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:SI 366 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 87 86 88 2 (set (reg:SI 325 [ D.5786 ])
        (bswap:SI (reg:SI 366 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 366 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8]))
            (nil))))
(insn 88 87 89 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 m+32 S4 A128])
        (reg:SI 325 [ D.5786 ])) blake_ref.c:40 90 {*movsi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:SI 367 [ MEM[(const BitSequence *)datablock_5(D) + 36B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 90 89 91 2 (set (reg:SI 329 [ D.5786 ])
        (bswap:SI (reg:SI 367 [ MEM[(const BitSequence *)datablock_5(D) + 36B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 367 [ MEM[(const BitSequence *)datablock_5(D) + 36B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8]))
            (nil))))
(insn 91 90 92 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 m+36 S4 A32])
        (reg:SI 329 [ D.5786 ])) blake_ref.c:41 90 {*movsi_internal}
     (nil))
(insn 92 91 93 2 (set (reg:SI 368 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SI 333 [ D.5786 ])
        (bswap:SI (reg:SI 368 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 368 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8]))
            (nil))))
(insn 94 93 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 m+40 S4 A64])
        (reg:SI 333 [ D.5786 ])) blake_ref.c:42 90 {*movsi_internal}
     (nil))
(insn 95 94 96 2 (set (reg:SI 369 [ MEM[(const BitSequence *)datablock_5(D) + 44B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 96 95 97 2 (set (reg:SI 337 [ D.5786 ])
        (bswap:SI (reg:SI 369 [ MEM[(const BitSequence *)datablock_5(D) + 44B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 369 [ MEM[(const BitSequence *)datablock_5(D) + 44B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8]))
            (nil))))
(insn 97 96 98 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [2 m+44 S4 A32])
        (reg:SI 337 [ D.5786 ])) blake_ref.c:43 90 {*movsi_internal}
     (nil))
(insn 98 97 99 2 (set (reg:SI 370 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 99 98 100 2 (set (reg:SI 341 [ D.5786 ])
        (bswap:SI (reg:SI 370 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 370 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8]))
            (nil))))
(insn 100 99 101 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 m+48 S4 A128])
        (reg:SI 341 [ D.5786 ])) blake_ref.c:44 90 {*movsi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:SI 371 [ MEM[(const BitSequence *)datablock_5(D) + 52B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 102 101 103 2 (set (reg:SI 345 [ D.5786 ])
        (bswap:SI (reg:SI 371 [ MEM[(const BitSequence *)datablock_5(D) + 52B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 371 [ MEM[(const BitSequence *)datablock_5(D) + 52B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8]))
            (nil))))
(insn 103 102 104 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 m+52 S4 A32])
        (reg:SI 345 [ D.5786 ])) blake_ref.c:45 90 {*movsi_internal}
     (nil))
(insn 104 103 105 2 (set (reg:SI 372 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 105 104 106 2 (set (reg:SI 349 [ D.5786 ])
        (bswap:SI (reg:SI 372 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 372 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                        (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8]))
            (nil))))
(insn 106 105 107 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 m+56 S4 A64])
        (reg:SI 349 [ D.5786 ])) blake_ref.c:46 90 {*movsi_internal}
     (nil))
(insn 107 106 108 2 (set (reg:SI 373 [ MEM[(const BitSequence *)datablock_5(D) + 60B] ])
        (mem:SI (plus:DI (reg/v/f:DI 357 [ datablock ])
                (const_int 60 [0x3c])) [0 MEM[(const BitSequence *)datablock_5(D) + 60B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 357 [ datablock ])
        (nil)))
(insn 108 107 109 2 (set (reg:SI 353 [ D.5786 ])
        (bswap:SI (reg:SI 373 [ MEM[(const BitSequence *)datablock_5(D) + 60B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 373 [ MEM[(const BitSequence *)datablock_5(D) + 60B] ])
        (nil)))
(insn 109 108 110 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 m+60 S4 A32])
        (reg:SI 353 [ D.5786 ])) blake_ref.c:47 90 {*movsi_internal}
     (nil))
(insn 110 109 111 2 (set (reg:SI 128 [ v$0 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 16 [0x10])) [2 state_246(D)->h32+0 S4 A64])) blake_ref.c:50 90 {*movsi_internal}
     (nil))
(insn 111 110 112 2 (set (reg:SI 129 [ v$1 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 20 [0x14])) [2 state_246(D)->h32+4 S4 A32])) blake_ref.c:51 90 {*movsi_internal}
     (nil))
(insn 112 111 113 2 (set (reg:SI 130 [ v$2 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 24 [0x18])) [2 state_246(D)->h32+8 S4 A64])) blake_ref.c:52 90 {*movsi_internal}
     (nil))
(insn 113 112 114 2 (set (reg:SI 131 [ v$3 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 28 [0x1c])) [2 state_246(D)->h32+12 S4 A32])) blake_ref.c:53 90 {*movsi_internal}
     (nil))
(insn 114 113 115 2 (set (reg:SI 132 [ v$4 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 32 [0x20])) [2 state_246(D)->h32+16 S4 A64])) blake_ref.c:54 90 {*movsi_internal}
     (nil))
(insn 115 114 116 2 (set (reg:SI 133 [ v$5 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 36 [0x24])) [2 state_246(D)->h32+20 S4 A32])) blake_ref.c:55 90 {*movsi_internal}
     (nil))
(insn 116 115 117 2 (set (reg:SI 134 [ v$6 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 40 [0x28])) [2 state_246(D)->h32+24 S4 A64])) blake_ref.c:56 90 {*movsi_internal}
     (nil))
(insn 117 116 118 2 (set (reg:SI 135 [ v$7 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 44 [0x2c])) [2 state_246(D)->h32+28 S4 A32])) blake_ref.c:57 90 {*movsi_internal}
     (nil))
(insn 118 117 119 2 (set (reg:SI 136 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 120 [0x78])) [2 state_246(D)->salt32+0 S4 A64])) blake_ref.c:58 90 {*movsi_internal}
     (nil))
(insn 119 118 120 2 (parallel [
            (set (reg:SI 254 [ v$8 ])
                (xor:SI (reg:SI 136 [ D.5781 ])
                    (const_int 608135816 [0x243f6a88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:58 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 120 119 121 2 (set (reg:SI 137 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 124 [0x7c])) [2 state_246(D)->salt32+4 S4 A32])) blake_ref.c:59 90 {*movsi_internal}
     (nil))
(insn 121 120 122 2 (parallel [
            (set (reg:SI 274 [ v$9 ])
                (xor:SI (reg:SI 137 [ D.5781 ])
                    (const_int -2052912941 [0xffffffff85a308d3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:59 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 122 121 123 2 (set (reg:SI 138 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 128 [0x80])) [2 state_246(D)->salt32+8 S4 A64])) blake_ref.c:60 90 {*movsi_internal}
     (nil))
(insn 123 122 124 2 (parallel [
            (set (reg:SI 220 [ v$10 ])
                (xor:SI (reg:SI 138 [ D.5781 ])
                    (const_int 320440878 [0x13198a2e])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:60 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 125 2 (set (reg:SI 139 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 132 [0x84])) [2 state_246(D)->salt32+12 S4 A32])) blake_ref.c:61 90 {*movsi_internal}
     (nil))
(insn 125 124 126 2 (parallel [
            (set (reg:SI 206 [ v$11 ])
                (xor:SI (reg:SI 139 [ D.5781 ])
                    (const_int 57701188 [0x3707344])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:61 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                    (const_int 12 [0xc])) [2 state_246(D)->nullt+0 S4 A32])
            (const_int 0 [0]))) blake_ref.c:62 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 127 126 128 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 418)
            (pc))) blake_ref.c:62 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 418)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356

;; basic block 3, loop depth 0, count 0, freq 334, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 356
;; lr  def 	 17 [flags] 141 142 219 235 252 273
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  gen 	 141 142 219 235 252 273
;; live  kill	 17 [flags]
(note 128 127 129 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 3 (set (reg:SI 141 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 48 [0x30])) [2 state_246(D)->t32+0 S4 A64])) blake_ref.c:69 90 {*movsi_internal}
     (nil))
(insn 130 129 131 3 (parallel [
            (set (reg:SI 235 [ v$12 ])
                (xor:SI (reg:SI 141 [ D.5781 ])
                    (const_int -1542899678 [0xffffffffa4093822])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:69 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 3 (parallel [
            (set (reg:SI 252 [ v$13 ])
                (xor:SI (reg:SI 141 [ D.5781 ])
                    (const_int 698298832 [0x299f31d0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:70 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 141 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 3 (set (reg:SI 142 [ D.5781 ])
        (mem:SI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 52 [0x34])) [2 state_246(D)->t32+4 S4 A32])) blake_ref.c:71 90 {*movsi_internal}
     (nil))
(insn 133 132 134 3 (parallel [
            (set (reg:SI 273 [ v$14 ])
                (xor:SI (reg:SI 142 [ D.5781 ])
                    (const_int 137296536 [0x82efa98])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:71 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 418 3 (parallel [
            (set (reg:SI 219 [ v$15 ])
                (xor:SI (reg:SI 142 [ D.5781 ])
                    (const_int -330404727 [0xffffffffec4e6c89])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:72 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356

;; basic block 4, loop depth 0, count 0, freq 334, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 219 235 252 273
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 220 254 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  gen 	 219 235 252 273
;; live  kill	
(code_label 418 134 417 4 5 "" [1 uses])
(note 417 418 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 417 32 4 (set (reg:SI 219 [ v$15 ])
        (const_int -330404727 [0xffffffffec4e6c89])) blake_ref.c:66 90 {*movsi_internal}
     (nil))
(insn 32 31 33 4 (set (reg:SI 273 [ v$14 ])
        (const_int 137296536 [0x82efa98])) blake_ref.c:65 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:SI 252 [ v$13 ])
        (const_int 698298832 [0x299f31d0])) blake_ref.c:64 90 {*movsi_internal}
     (nil))
(insn 34 33 135 4 (set (reg:SI 235 [ v$12 ])
        (const_int -1542899678 [0xffffffffa4093822])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356

;; basic block 5, loop depth 0, count 0, freq 670, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135
;; lr  def 	 113 217 222 233 238 250 256 270 276 281 296 298 304 306 312 314 320 322 328 330 336 338 344 346 352 354
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 219 220 235 252 254 273 274 293 297 301 305 309 313 317 321 325 329 333 337 341 345 349 353 356
;; live  gen 	 113 217 222 233 238 250 256 270 276 281 296 298 304 306 312 314 320 322 328 330 336 338 344 346 352 354
;; live  kill	
(code_label 135 34 136 5 2 "" [0 uses])
(note 136 135 137 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 35 5 (set (reg:DI 281 [ ivtmp.77 ])
        (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)) 89 {*movdi_internal}
     (nil))
(insn 35 137 36 5 (set (reg:SI 217 [ v$0 ])
        (reg:SI 128 [ v$0 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:SI 233 [ v$1 ])
        (reg:SI 129 [ v$1 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:SI 250 [ v$2 ])
        (reg:SI 130 [ v$2 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (reg:SI 270 [ v$3 ])
        (reg:SI 131 [ v$3 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:SI 276 [ v$4 ])
        (reg:SI 132 [ v$4 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 40 39 41 5 (set (reg:SI 222 [ v$5 ])
        (reg:SI 133 [ v$5 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 41 40 42 5 (set (reg:SI 238 [ v$6 ])
        (reg:SI 134 [ v$6 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 42 41 43 5 (set (reg:SI 256 [ v$7 ])
        (reg:SI 135 [ v$7 ])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (set (reg:SI 113 [ D.5779 ])
        (const_int 14 [0xe])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 44 43 45 5 (set (reg:SI 354 [ D.5787 ])
        (const_int 1065670069 [0x3f84d5b5])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (reg:SI 352 [ D.5787 ])
        (const_int -1253635817 [0xffffffffb5470917])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 46 45 47 5 (set (reg:SI 346 [ D.5787 ])
        (const_int -1062458953 [0xffffffffc0ac29b7])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 47 46 48 5 (set (reg:SI 344 [ D.5787 ])
        (const_int -914599715 [0xffffffffc97c50dd])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 48 47 49 5 (set (reg:SI 338 [ D.5787 ])
        (const_int -1101764913 [0xffffffffbe5466cf])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:SI 336 [ D.5787 ])
        (const_int 887688300 [0x34e90c6c])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 50 49 51 5 (set (reg:SI 330 [ D.5787 ])
        (const_int 1160258022 [0x452821e6])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 51 50 52 5 (set (reg:SI 328 [ D.5787 ])
        (const_int 953160567 [0x38d01377])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 52 51 53 5 (set (reg:SI 322 [ D.5787 ])
        (const_int 137296536 [0x82efa98])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (set (reg:SI 320 [ D.5787 ])
        (const_int -330404727 [0xffffffffec4e6c89])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:SI 314 [ D.5787 ])
        (const_int -1542899678 [0xffffffffa4093822])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 55 54 56 5 (set (reg:SI 312 [ D.5787 ])
        (const_int 698298832 [0x299f31d0])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 56 55 57 5 (set (reg:SI 306 [ D.5787 ])
        (const_int 320440878 [0x13198a2e])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 57 56 58 5 (set (reg:SI 304 [ D.5787 ])
        (const_int 57701188 [0x3707344])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 58 57 59 5 (set (reg:SI 298 [ D.5787 ])
        (const_int 608135816 [0x243f6a88])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 59 58 369 5 (set (reg:SI 296 [ D.5787 ])
        (const_int -2052912941 [0xffffffff85a308d3])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356

;; basic block 6, loop depth 0, count 0, freq 9333, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354
;; lr  def 	 17 [flags
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356
;; live  gen 	 17 [flags
;; live  kill	 17 [flags]
(code_label 369 59 138 6 4 "" [0 uses])
(note 138 369 139 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 6 (parallel [
            (set (reg:SI 374 [ D.5781 ])
                (xor:SI (reg:SI 293 [ D.5786 ])
                    (reg:SI 296 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 296 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 293 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 140 139 141 6 (parallel [
            (set (reg:SI 375 [ D.5781 ])
                (plus:SI (reg:SI 374 [ D.5781 ])
                    (reg:SI 276 [ v$4 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 374 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 141 140 142 6 (parallel [
            (set (reg:SI 144 [ D.5781 ])
                (plus:SI (reg:SI 375 [ D.5781 ])
                    (reg:SI 217 [ v$0 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 375 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 217 [ v$0 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 142 141 143 6 (parallel [
            (set (reg:SI 376 [ D.5781 ])
                (xor:SI (reg:SI 144 [ D.5781 ])
                    (reg:SI 235 [ v$12 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 235 [ v$12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 6 (parallel [
            (set (reg:SI 146 [ D.5781 ])
                (rotate:SI (reg:SI 376 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 376 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 6 (parallel [
            (set (reg:SI 147 [ D.5781 ])
                (plus:SI (reg:SI 146 [ D.5781 ])
                    (reg:SI 254 [ v$8 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 254 [ v$8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 6 (parallel [
            (set (reg:SI 377 [ D.5781 ])
                (xor:SI (reg:SI 147 [ D.5781 ])
                    (reg:SI 276 [ v$4 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 276 [ v$4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 6 (parallel [
            (set (reg:SI 149 [ D.5781 ])
                (rotatert:SI (reg:SI 377 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 377 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 6 (parallel [
            (set (reg:SI 378 [ D.5781 ])
                (xor:SI (reg:SI 297 [ D.5786 ])
                    (reg:SI 298 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 298 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 297 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 148 147 149 6 (parallel [
            (set (reg:SI 379 [ D.5781 ])
                (plus:SI (reg:SI 378 [ D.5781 ])
                    (reg:SI 144 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 378 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 144 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 149 148 150 6 (parallel [
            (set (reg:SI 152 [ D.5781 ])
                (plus:SI (reg:SI 379 [ D.5781 ])
                    (reg:SI 149 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 379 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 6 (parallel [
            (set (reg:SI 380 [ D.5781 ])
                (xor:SI (reg:SI 146 [ D.5781 ])
                    (reg:SI 152 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 146 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 6 (parallel [
            (set (reg:SI 154 [ D.5781 ])
                (rotatert:SI (reg:SI 380 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 380 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 6 (parallel [
            (set (reg:SI 155 [ D.5781 ])
                (plus:SI (reg:SI 147 [ D.5781 ])
                    (reg:SI 154 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 147 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 153 152 154 6 (parallel [
            (set (reg:SI 381 [ D.5781 ])
                (xor:SI (reg:SI 149 [ D.5781 ])
                    (reg:SI 155 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 149 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 6 (parallel [
            (set (reg:SI 157 [ D.5781 ])
                (rotatert:SI (reg:SI 381 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 381 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 6 (parallel [
            (set (reg:SI 382 [ D.5781 ])
                (xor:SI (reg:SI 301 [ D.5786 ])
                    (reg:SI 304 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 304 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 301 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 156 155 157 6 (parallel [
            (set (reg:SI 383 [ D.5781 ])
                (plus:SI (reg:SI 382 [ D.5781 ])
                    (reg:SI 222 [ v$5 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 382 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 158 6 (parallel [
            (set (reg:SI 160 [ D.5781 ])
                (plus:SI (reg:SI 383 [ D.5781 ])
                    (reg:SI 233 [ v$1 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 383 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 233 [ v$1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 158 157 159 6 (parallel [
            (set (reg:SI 384 [ D.5781 ])
                (xor:SI (reg:SI 160 [ D.5781 ])
                    (reg:SI 252 [ v$13 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 252 [ v$13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 159 158 160 6 (parallel [
            (set (reg:SI 162 [ D.5781 ])
                (rotate:SI (reg:SI 384 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 384 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 6 (parallel [
            (set (reg:SI 163 [ D.5781 ])
                (plus:SI (reg:SI 162 [ D.5781 ])
                    (reg:SI 274 [ v$9 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 274 [ v$9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 6 (parallel [
            (set (reg:SI 385 [ D.5781 ])
                (xor:SI (reg:SI 163 [ D.5781 ])
                    (reg:SI 222 [ v$5 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 222 [ v$5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 6 (parallel [
            (set (reg:SI 165 [ D.5781 ])
                (rotatert:SI (reg:SI 385 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 385 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 6 (parallel [
            (set (reg:SI 386 [ D.5781 ])
                (xor:SI (reg:SI 305 [ D.5786 ])
                    (reg:SI 306 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 306 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 305 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 164 163 165 6 (parallel [
            (set (reg:SI 387 [ D.5781 ])
                (plus:SI (reg:SI 386 [ D.5781 ])
                    (reg:SI 160 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 386 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 160 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 165 164 166 6 (parallel [
            (set (reg:SI 168 [ D.5781 ])
                (plus:SI (reg:SI 387 [ D.5781 ])
                    (reg:SI 165 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 387 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 166 165 167 6 (parallel [
            (set (reg:SI 388 [ D.5781 ])
                (xor:SI (reg:SI 162 [ D.5781 ])
                    (reg:SI 168 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 162 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 6 (parallel [
            (set (reg:SI 170 [ D.5781 ])
                (rotatert:SI (reg:SI 388 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 388 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 168 167 169 6 (parallel [
            (set (reg:SI 171 [ D.5781 ])
                (plus:SI (reg:SI 163 [ D.5781 ])
                    (reg:SI 170 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 163 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 6 (parallel [
            (set (reg:SI 389 [ D.5781 ])
                (xor:SI (reg:SI 165 [ D.5781 ])
                    (reg:SI 171 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 165 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 171 6 (parallel [
            (set (reg:SI 173 [ D.5781 ])
                (rotatert:SI (reg:SI 389 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 389 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 6 (parallel [
            (set (reg:SI 390 [ D.5781 ])
                (xor:SI (reg:SI 309 [ D.5786 ])
                    (reg:SI 312 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 312 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 309 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 172 171 173 6 (parallel [
            (set (reg:SI 391 [ D.5781 ])
                (plus:SI (reg:SI 390 [ D.5781 ])
                    (reg:SI 238 [ v$6 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 390 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 6 (parallel [
            (set (reg:SI 176 [ D.5781 ])
                (plus:SI (reg:SI 391 [ D.5781 ])
                    (reg:SI 250 [ v$2 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 391 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 250 [ v$2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 174 173 175 6 (parallel [
            (set (reg:SI 392 [ D.5781 ])
                (xor:SI (reg:SI 176 [ D.5781 ])
                    (reg:SI 273 [ v$14 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 273 [ v$14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 6 (parallel [
            (set (reg:SI 178 [ D.5781 ])
                (rotate:SI (reg:SI 392 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 392 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 176 175 177 6 (parallel [
            (set (reg:SI 179 [ D.5781 ])
                (plus:SI (reg:SI 178 [ D.5781 ])
                    (reg:SI 220 [ v$10 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 220 [ v$10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 6 (parallel [
            (set (reg:SI 393 [ D.5781 ])
                (xor:SI (reg:SI 179 [ D.5781 ])
                    (reg:SI 238 [ v$6 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 238 [ v$6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 6 (parallel [
            (set (reg:SI 181 [ D.5781 ])
                (rotatert:SI (reg:SI 393 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 393 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 6 (parallel [
            (set (reg:SI 394 [ D.5781 ])
                (xor:SI (reg:SI 313 [ D.5786 ])
                    (reg:SI 314 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 314 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 313 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 180 179 181 6 (parallel [
            (set (reg:SI 395 [ D.5781 ])
                (plus:SI (reg:SI 394 [ D.5781 ])
                    (reg:SI 176 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 394 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 176 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 181 180 182 6 (parallel [
            (set (reg:SI 184 [ D.5781 ])
                (plus:SI (reg:SI 395 [ D.5781 ])
                    (reg:SI 181 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 395 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 182 181 183 6 (parallel [
            (set (reg:SI 396 [ D.5781 ])
                (xor:SI (reg:SI 178 [ D.5781 ])
                    (reg:SI 184 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 178 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 6 (parallel [
            (set (reg:SI 186 [ D.5781 ])
                (rotatert:SI (reg:SI 396 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 396 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 6 (parallel [
            (set (reg:SI 187 [ D.5781 ])
                (plus:SI (reg:SI 179 [ D.5781 ])
                    (reg:SI 186 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 179 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 6 (parallel [
            (set (reg:SI 397 [ D.5781 ])
                (xor:SI (reg:SI 181 [ D.5781 ])
                    (reg:SI 187 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 181 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 6 (parallel [
            (set (reg:SI 189 [ D.5781 ])
                (rotatert:SI (reg:SI 397 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 397 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 6 (parallel [
            (set (reg:SI 398 [ D.5781 ])
                (xor:SI (reg:SI 317 [ D.5786 ])
                    (reg:SI 320 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 320 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 317 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 188 187 189 6 (parallel [
            (set (reg:SI 399 [ D.5781 ])
                (plus:SI (reg:SI 398 [ D.5781 ])
                    (reg:SI 256 [ v$7 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 398 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 6 (parallel [
            (set (reg:SI 192 [ D.5781 ])
                (plus:SI (reg:SI 399 [ D.5781 ])
                    (reg:SI 270 [ v$3 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 399 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 270 [ v$3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 190 189 191 6 (parallel [
            (set (reg:SI 400 [ D.5781 ])
                (xor:SI (reg:SI 192 [ D.5781 ])
                    (reg:SI 219 [ v$15 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 219 [ v$15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 6 (parallel [
            (set (reg:SI 194 [ D.5781 ])
                (rotate:SI (reg:SI 400 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 400 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 6 (parallel [
            (set (reg:SI 195 [ D.5781 ])
                (plus:SI (reg:SI 194 [ D.5781 ])
                    (reg:SI 206 [ v$11 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 206 [ v$11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 6 (parallel [
            (set (reg:SI 401 [ D.5781 ])
                (xor:SI (reg:SI 195 [ D.5781 ])
                    (reg:SI 256 [ v$7 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 256 [ v$7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 194 193 195 6 (parallel [
            (set (reg:SI 197 [ D.5781 ])
                (rotatert:SI (reg:SI 401 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 401 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 194 196 6 (parallel [
            (set (reg:SI 402 [ D.5781 ])
                (xor:SI (reg:SI 321 [ D.5786 ])
                    (reg:SI 322 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 322 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 321 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 196 195 197 6 (parallel [
            (set (reg:SI 403 [ D.5781 ])
                (plus:SI (reg:SI 402 [ D.5781 ])
                    (reg:SI 192 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 402 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 192 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 197 196 198 6 (parallel [
            (set (reg:SI 200 [ D.5781 ])
                (plus:SI (reg:SI 403 [ D.5781 ])
                    (reg:SI 197 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 403 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 198 197 199 6 (parallel [
            (set (reg:SI 404 [ D.5781 ])
                (xor:SI (reg:SI 194 [ D.5781 ])
                    (reg:SI 200 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 194 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 6 (parallel [
            (set (reg:SI 202 [ D.5781 ])
                (rotatert:SI (reg:SI 404 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 404 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 6 (parallel [
            (set (reg:SI 203 [ D.5781 ])
                (plus:SI (reg:SI 195 [ D.5781 ])
                    (reg:SI 202 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 195 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 202 6 (parallel [
            (set (reg:SI 405 [ D.5781 ])
                (xor:SI (reg:SI 197 [ D.5781 ])
                    (reg:SI 203 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 197 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 201 203 6 (parallel [
            (set (reg:SI 205 [ D.5781 ])
                (rotatert:SI (reg:SI 405 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 405 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 6 (parallel [
            (set (reg:SI 406 [ D.5781 ])
                (xor:SI (reg:SI 325 [ D.5786 ])
                    (reg:SI 328 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 328 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 325 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 204 203 205 6 (parallel [
            (set (reg:SI 407 [ D.5781 ])
                (plus:SI (reg:SI 406 [ D.5781 ])
                    (reg:SI 152 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 406 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 152 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 205 204 206 6 (parallel [
            (set (reg:SI 209 [ D.5781 ])
                (plus:SI (reg:SI 407 [ D.5781 ])
                    (reg:SI 173 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 407 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 206 205 207 6 (parallel [
            (set (reg:SI 408 [ D.5781 ])
                (xor:SI (reg:SI 202 [ D.5781 ])
                    (reg:SI 209 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 202 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 207 206 208 6 (parallel [
            (set (reg:SI 211 [ D.5781 ])
                (rotate:SI (reg:SI 408 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 408 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 209 6 (parallel [
            (set (reg:SI 212 [ D.5781 ])
                (plus:SI (reg:SI 187 [ D.5781 ])
                    (reg:SI 211 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 187 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 209 208 210 6 (parallel [
            (set (reg:SI 409 [ D.5781 ])
                (xor:SI (reg:SI 173 [ D.5781 ])
                    (reg:SI 212 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 173 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 210 209 211 6 (parallel [
            (set (reg:SI 214 [ D.5781 ])
                (rotatert:SI (reg:SI 409 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 409 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 211 210 212 6 (parallel [
            (set (reg:SI 410 [ D.5781 ])
                (xor:SI (reg:SI 329 [ D.5786 ])
                    (reg:SI 330 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 330 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 329 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 212 211 213 6 (parallel [
            (set (reg:SI 411 [ D.5781 ])
                (plus:SI (reg:SI 410 [ D.5781 ])
                    (reg:SI 209 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 410 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 209 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 213 212 214 6 (parallel [
            (set (reg:SI 217 [ v$0 ])
                (plus:SI (reg:SI 411 [ D.5781 ])
                    (reg:SI 214 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 411 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 214 213 215 6 (parallel [
            (set (reg:SI 412 [ D.5781 ])
                (xor:SI (reg:SI 211 [ D.5781 ])
                    (reg:SI 217 [ v$0 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 211 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 214 216 6 (parallel [
            (set (reg:SI 219 [ v$15 ])
                (rotatert:SI (reg:SI 412 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 412 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 6 (parallel [
            (set (reg:SI 220 [ v$10 ])
                (plus:SI (reg:SI 212 [ D.5781 ])
                    (reg:SI 219 [ v$15 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 212 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 217 216 218 6 (parallel [
            (set (reg:SI 413 [ D.5781 ])
                (xor:SI (reg:SI 214 [ D.5781 ])
                    (reg:SI 220 [ v$10 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 214 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 6 (parallel [
            (set (reg:SI 222 [ v$5 ])
                (rotatert:SI (reg:SI 413 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 413 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 6 (parallel [
            (set (reg:SI 414 [ D.5781 ])
                (xor:SI (reg:SI 333 [ D.5786 ])
                    (reg:SI 336 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 336 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 333 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 220 219 221 6 (parallel [
            (set (reg:SI 415 [ D.5781 ])
                (plus:SI (reg:SI 414 [ D.5781 ])
                    (reg:SI 168 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 414 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 168 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 221 220 222 6 (parallel [
            (set (reg:SI 225 [ D.5781 ])
                (plus:SI (reg:SI 415 [ D.5781 ])
                    (reg:SI 189 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 415 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 222 221 223 6 (parallel [
            (set (reg:SI 416 [ D.5781 ])
                (xor:SI (reg:SI 154 [ D.5781 ])
                    (reg:SI 225 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 154 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 223 222 224 6 (parallel [
            (set (reg:SI 227 [ D.5781 ])
                (rotate:SI (reg:SI 416 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 416 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 6 (parallel [
            (set (reg:SI 228 [ D.5781 ])
                (plus:SI (reg:SI 203 [ D.5781 ])
                    (reg:SI 227 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 203 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 225 224 226 6 (parallel [
            (set (reg:SI 417 [ D.5781 ])
                (xor:SI (reg:SI 189 [ D.5781 ])
                    (reg:SI 228 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 189 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 226 225 227 6 (parallel [
            (set (reg:SI 230 [ D.5781 ])
                (rotatert:SI (reg:SI 417 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 417 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 227 226 228 6 (parallel [
            (set (reg:SI 418 [ D.5781 ])
                (xor:SI (reg:SI 337 [ D.5786 ])
                    (reg:SI 338 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 338 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 337 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 228 227 229 6 (parallel [
            (set (reg:SI 419 [ D.5781 ])
                (plus:SI (reg:SI 418 [ D.5781 ])
                    (reg:SI 225 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 418 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 225 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 229 228 230 6 (parallel [
            (set (reg:SI 233 [ v$1 ])
                (plus:SI (reg:SI 419 [ D.5781 ])
                    (reg:SI 230 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 419 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 230 229 231 6 (parallel [
            (set (reg:SI 420 [ D.5781 ])
                (xor:SI (reg:SI 227 [ D.5781 ])
                    (reg:SI 233 [ v$1 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 227 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 232 6 (parallel [
            (set (reg:SI 235 [ v$12 ])
                (rotatert:SI (reg:SI 420 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 420 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 6 (parallel [
            (set (reg:SI 206 [ v$11 ])
                (plus:SI (reg:SI 228 [ D.5781 ])
                    (reg:SI 235 [ v$12 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 228 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 6 (parallel [
            (set (reg:SI 421 [ D.5781 ])
                (xor:SI (reg:SI 230 [ D.5781 ])
                    (reg:SI 206 [ v$11 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 230 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 235 6 (parallel [
            (set (reg:SI 238 [ v$6 ])
                (rotatert:SI (reg:SI 421 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 421 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 235 234 236 6 (parallel [
            (set (reg:SI 422 [ D.5781 ])
                (xor:SI (reg:SI 341 [ D.5786 ])
                    (reg:SI 344 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 344 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 341 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 236 235 237 6 (parallel [
            (set (reg:SI 423 [ D.5781 ])
                (plus:SI (reg:SI 422 [ D.5781 ])
                    (reg:SI 184 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 422 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 184 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 237 236 238 6 (parallel [
            (set (reg:SI 241 [ D.5781 ])
                (plus:SI (reg:SI 423 [ D.5781 ])
                    (reg:SI 205 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 423 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 238 237 239 6 (parallel [
            (set (reg:SI 424 [ D.5781 ])
                (xor:SI (reg:SI 170 [ D.5781 ])
                    (reg:SI 241 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 170 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 239 238 240 6 (parallel [
            (set (reg:SI 243 [ D.5781 ])
                (rotate:SI (reg:SI 424 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 424 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 240 239 241 6 (parallel [
            (set (reg:SI 244 [ D.5781 ])
                (plus:SI (reg:SI 155 [ D.5781 ])
                    (reg:SI 243 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 155 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 241 240 242 6 (parallel [
            (set (reg:SI 425 [ D.5781 ])
                (xor:SI (reg:SI 205 [ D.5781 ])
                    (reg:SI 244 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 205 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 242 241 243 6 (parallel [
            (set (reg:SI 247 [ D.5781 ])
                (rotatert:SI (reg:SI 425 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 425 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 6 (parallel [
            (set (reg:SI 426 [ D.5781 ])
                (xor:SI (reg:SI 345 [ D.5786 ])
                    (reg:SI 346 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 346 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 345 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 244 243 245 6 (parallel [
            (set (reg:SI 427 [ D.5781 ])
                (plus:SI (reg:SI 426 [ D.5781 ])
                    (reg:SI 241 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 426 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 241 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 245 244 246 6 (parallel [
            (set (reg:SI 250 [ v$2 ])
                (plus:SI (reg:SI 427 [ D.5781 ])
                    (reg:SI 247 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 427 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 246 245 247 6 (parallel [
            (set (reg:SI 428 [ D.5781 ])
                (xor:SI (reg:SI 243 [ D.5781 ])
                    (reg:SI 250 [ v$2 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 243 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 247 246 248 6 (parallel [
            (set (reg:SI 252 [ v$13 ])
                (rotatert:SI (reg:SI 428 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 428 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 6 (parallel [
            (set (reg:SI 254 [ v$8 ])
                (plus:SI (reg:SI 244 [ D.5781 ])
                    (reg:SI 252 [ v$13 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 244 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 6 (parallel [
            (set (reg:SI 429 [ D.5781 ])
                (xor:SI (reg:SI 247 [ D.5781 ])
                    (reg:SI 254 [ v$8 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 247 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 250 249 251 6 (parallel [
            (set (reg:SI 256 [ v$7 ])
                (rotatert:SI (reg:SI 429 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 429 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 6 (parallel [
            (set (reg:SI 430 [ D.5781 ])
                (xor:SI (reg:SI 349 [ D.5786 ])
                    (reg:SI 352 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 352 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 349 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 252 251 253 6 (parallel [
            (set (reg:SI 431 [ D.5781 ])
                (plus:SI (reg:SI 430 [ D.5781 ])
                    (reg:SI 200 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 430 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 200 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 253 252 254 6 (parallel [
            (set (reg:SI 260 [ D.5781 ])
                (plus:SI (reg:SI 431 [ D.5781 ])
                    (reg:SI 157 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 431 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 254 253 255 6 (parallel [
            (set (reg:SI 432 [ D.5781 ])
                (xor:SI (reg:SI 186 [ D.5781 ])
                    (reg:SI 260 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 186 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 255 254 256 6 (parallel [
            (set (reg:SI 262 [ D.5781 ])
                (rotate:SI (reg:SI 432 [ D.5781 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 586 {*rotlsi3_1}
     (expr_list:REG_DEAD (reg:SI 432 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 256 255 257 6 (parallel [
            (set (reg:SI 264 [ D.5781 ])
                (plus:SI (reg:SI 171 [ D.5781 ])
                    (reg:SI 262 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 171 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 257 256 258 6 (parallel [
            (set (reg:SI 433 [ D.5781 ])
                (xor:SI (reg:SI 157 [ D.5781 ])
                    (reg:SI 264 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 157 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 258 257 259 6 (parallel [
            (set (reg:SI 266 [ D.5781 ])
                (rotatert:SI (reg:SI 433 [ D.5781 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 433 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 259 258 260 6 (parallel [
            (set (reg:SI 434 [ D.5781 ])
                (xor:SI (reg:SI 353 [ D.5786 ])
                    (reg:SI 354 [ D.5787 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 354 [ D.5787 ])
        (expr_list:REG_DEAD (reg:SI 353 [ D.5786 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 260 259 261 6 (parallel [
            (set (reg:SI 435 [ D.5781 ])
                (plus:SI (reg:SI 434 [ D.5781 ])
                    (reg:SI 260 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 434 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 260 [ D.5781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 261 260 262 6 (parallel [
            (set (reg:SI 270 [ v$3 ])
                (plus:SI (reg:SI 435 [ D.5781 ])
                    (reg:SI 266 [ D.5781 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 435 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 262 261 263 6 (parallel [
            (set (reg:SI 436 [ D.5781 ])
                (xor:SI (reg:SI 262 [ D.5781 ])
                    (reg:SI 270 [ v$3 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 262 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 263 262 264 6 (parallel [
            (set (reg:SI 273 [ v$14 ])
                (rotatert:SI (reg:SI 436 [ D.5781 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 436 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 264 263 265 6 (parallel [
            (set (reg:SI 274 [ v$9 ])
                (plus:SI (reg:SI 264 [ D.5781 ])
                    (reg:SI 273 [ v$14 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 264 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 265 264 266 6 (parallel [
            (set (reg:SI 437 [ D.5781 ])
                (xor:SI (reg:SI 266 [ D.5781 ])
                    (reg:SI 274 [ v$9 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 266 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 6 (parallel [
            (set (reg:SI 276 [ v$4 ])
                (rotatert:SI (reg:SI 437 [ D.5781 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_DEAD (reg:SI 437 [ D.5781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 267 266 268 6 (parallel [
            (set (reg:SI 113 [ D.5779 ])
                (plus:SI (reg:SI 113 [ D.5779 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 268 267 269 6 (parallel [
            (set (reg:DI 281 [ ivtmp.77 ])
                (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 269 268 270 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ D.5779 ])
            (const_int 0 [0]))) blake_ref.c:76 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 270 269 271 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) blake_ref.c:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 667 (nil)))
 -> 372)
;;  succ:       7 [93.3%]  (FALLTHRU)
;;              8 [6.7%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 356

;; basic block 7, loop depth 0, count 0, freq 8710, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [93.3%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u363(6){ }u364(7){ }u365(16){ }u366(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 281
;; lr  def 	 292 293 295 296 297 298 300 301 303 304 305 306 308 309 311 312 313 314 316 317 319 320 321 322 324 325 327 328 329 330 332 333 335 336 337 338 340 341 343 344 345 346 348 349 351 352 353 354 438 439 440 444 446 450 452 456 458 462 464 468 470 474 476 480 482
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 356
;; live  gen 	 292 293 295 296 297 298 300 301 303 304 305 306 308 309 311 312 313 314 316 317 319 320 321 322 324 325 327 328 329 330 332 333 335 336 337 338 340 341 343 344 345 346 348 349 351 352 353 354 438 439 440 444 446 450 452 456 458 462 464 468 470 474 476 480 482
;; live  kill	
(note 271 270 273 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 273 271 274 7 (set (reg:SI 292 [ D.5782 ])
        (zero_extend:SI (mem:QI (reg:DI 281 [ ivtmp.77 ]) [0 MEM[base: _514, offset: 0B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 274 273 275 7 (set (reg:DI 438 [ D.5782 ])
        (sign_extend:DI (reg:SI 292 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 292 [ D.5782 ])
        (nil)))
(insn 275 274 276 7 (set (reg:SI 293 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 276 275 277 7 (set (reg:SI 295 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 1 [0x1])) [0 MEM[base: _514, offset: 1B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 277 276 278 7 (set (reg/f:DI 439)
        (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) 89 {*movdi_internal}
     (nil))
(insn 278 277 279 7 (set (reg:DI 440 [ D.5782 ])
        (sign_extend:DI (reg:SI 295 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 295 [ D.5782 ])
        (nil)))
(insn 279 278 281 7 (set (reg:SI 296 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 281 279 284 7 (set (reg:SI 297 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 440 [ D.5782 ])
        (nil)))
(insn 284 281 285 7 (set (reg:SI 298 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 438 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 438 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 285 284 286 7 (set (reg:SI 300 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 2 [0x2])) [0 MEM[base: _514, offset: 2B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 286 285 287 7 (set (reg:DI 444 [ D.5782 ])
        (sign_extend:DI (reg:SI 300 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 300 [ D.5782 ])
        (nil)))
(insn 287 286 288 7 (set (reg:SI 301 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 288 287 290 7 (set (reg:SI 303 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 3 [0x3])) [0 MEM[base: _514, offset: 3B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 290 288 291 7 (set (reg:DI 446 [ D.5782 ])
        (sign_extend:DI (reg:SI 303 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 303 [ D.5782 ])
        (nil)))
(insn 291 290 293 7 (set (reg:SI 304 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 293 291 296 7 (set (reg:SI 305 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 446 [ D.5782 ])
        (nil)))
(insn 296 293 297 7 (set (reg:SI 306 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 444 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 444 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 297 296 298 7 (set (reg:SI 308 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 4 [0x4])) [0 MEM[base: _514, offset: 4B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 298 297 299 7 (set (reg:DI 450 [ D.5782 ])
        (sign_extend:DI (reg:SI 308 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 308 [ D.5782 ])
        (nil)))
(insn 299 298 300 7 (set (reg:SI 309 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 300 299 302 7 (set (reg:SI 311 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 5 [0x5])) [0 MEM[base: _514, offset: 5B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 302 300 303 7 (set (reg:DI 452 [ D.5782 ])
        (sign_extend:DI (reg:SI 311 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 311 [ D.5782 ])
        (nil)))
(insn 303 302 305 7 (set (reg:SI 312 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 305 303 308 7 (set (reg:SI 313 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 452 [ D.5782 ])
        (nil)))
(insn 308 305 309 7 (set (reg:SI 314 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 450 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 450 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 309 308 310 7 (set (reg:SI 316 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 6 [0x6])) [0 MEM[base: _514, offset: 6B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 310 309 311 7 (set (reg:DI 456 [ D.5782 ])
        (sign_extend:DI (reg:SI 316 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 316 [ D.5782 ])
        (nil)))
(insn 311 310 312 7 (set (reg:SI 317 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 312 311 314 7 (set (reg:SI 319 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 7 [0x7])) [0 MEM[base: _514, offset: 7B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 314 312 315 7 (set (reg:DI 458 [ D.5782 ])
        (sign_extend:DI (reg:SI 319 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 319 [ D.5782 ])
        (nil)))
(insn 315 314 317 7 (set (reg:SI 320 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 317 315 320 7 (set (reg:SI 321 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 458 [ D.5782 ])
        (nil)))
(insn 320 317 321 7 (set (reg:SI 322 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 456 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 456 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 321 320 322 7 (set (reg:SI 324 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 8 [0x8])) [0 MEM[base: _514, offset: 8B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 322 321 323 7 (set (reg:DI 462 [ D.5782 ])
        (sign_extend:DI (reg:SI 324 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 324 [ D.5782 ])
        (nil)))
(insn 323 322 324 7 (set (reg:SI 325 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 324 323 326 7 (set (reg:SI 327 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 9 [0x9])) [0 MEM[base: _514, offset: 9B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 326 324 327 7 (set (reg:DI 464 [ D.5782 ])
        (sign_extend:DI (reg:SI 327 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 327 [ D.5782 ])
        (nil)))
(insn 327 326 329 7 (set (reg:SI 328 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 329 327 332 7 (set (reg:SI 329 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 464 [ D.5782 ])
        (nil)))
(insn 332 329 333 7 (set (reg:SI 330 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 462 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 462 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 333 332 334 7 (set (reg:SI 332 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 10 [0xa])) [0 MEM[base: _514, offset: 10B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 334 333 335 7 (set (reg:DI 468 [ D.5782 ])
        (sign_extend:DI (reg:SI 332 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 332 [ D.5782 ])
        (nil)))
(insn 335 334 336 7 (set (reg:SI 333 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 336 335 338 7 (set (reg:SI 335 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 11 [0xb])) [0 MEM[base: _514, offset: 11B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 338 336 339 7 (set (reg:DI 470 [ D.5782 ])
        (sign_extend:DI (reg:SI 335 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 335 [ D.5782 ])
        (nil)))
(insn 339 338 341 7 (set (reg:SI 336 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 341 339 344 7 (set (reg:SI 337 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 470 [ D.5782 ])
        (nil)))
(insn 344 341 345 7 (set (reg:SI 338 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 468 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 468 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 345 344 346 7 (set (reg:SI 340 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 12 [0xc])) [0 MEM[base: _514, offset: 12B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 346 345 347 7 (set (reg:DI 474 [ D.5782 ])
        (sign_extend:DI (reg:SI 340 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 340 [ D.5782 ])
        (nil)))
(insn 347 346 348 7 (set (reg:SI 341 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 348 347 350 7 (set (reg:SI 343 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 13 [0xd])) [0 MEM[base: _514, offset: 13B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 350 348 351 7 (set (reg:DI 476 [ D.5782 ])
        (sign_extend:DI (reg:SI 343 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 343 [ D.5782 ])
        (nil)))
(insn 351 350 353 7 (set (reg:SI 344 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 353 351 356 7 (set (reg:SI 345 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 476 [ D.5782 ])
        (nil)))
(insn 356 353 357 7 (set (reg:SI 346 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 474 [ D.5782 ])
        (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 474 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
            (nil))))
(insn 357 356 358 7 (set (reg:SI 348 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 14 [0xe])) [0 MEM[base: _514, offset: 14B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 358 357 359 7 (set (reg:DI 480 [ D.5782 ])
        (sign_extend:DI (reg:SI 348 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 348 [ D.5782 ])
        (nil)))
(insn 359 358 360 7 (set (reg:SI 349 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 360 359 362 7 (set (reg:SI 351 [ D.5782 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 281 [ ivtmp.77 ])
                    (const_int 15 [0xf])) [0 MEM[base: _514, offset: 15B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 362 360 363 7 (set (reg:DI 482 [ D.5782 ])
        (sign_extend:DI (reg:SI 351 [ D.5782 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 351 [ D.5782 ])
        (nil)))
(insn 363 362 365 7 (set (reg:SI 352 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 365 363 368 7 (set (reg:SI 353 [ D.5786 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5782 ])
                        (const_int 4 [0x4]))
                    (reg/f:DI 20 frame))
                (const_int -64 [0xffffffffffffffc0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 482 [ D.5782 ])
        (nil)))
(insn 368 365 372 7 (set (reg:SI 354 [ D.5787 ])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 439)) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 480 [ D.5782 ])
        (expr_list:REG_DEAD (reg/f:DI 439)
            (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 480 [ D.5782 ])
                            (const_int 4 [0x4]))
                        (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
                (nil)))))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 113 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 281 293 296 297 298 301 304 305 306 309 312 313 314 317 320 321 322 325 328 329 330 333 336 337 338 341 344 345 346 349 352 353 354 356

;; basic block 8, loop depth 0, count 0, freq 667, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [6.7%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u495(6){ }u496(7){ }u497(16){ }u498(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 356
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 356
;; lr  def 	 0 [ax] 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 511 512 513 514 515
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 129 130 131 132 133 134 135 136 137 138 139 206 217 219 220 222 233 235 238 250 252 254 256 270 273 274 276 356
;; live  gen 	 0 [ax] 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 511 512 513 514 515
;; live  kill	
(code_label 372 368 373 8 3 "" [1 uses])
(note 373 372 375 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 375 373 376 8 (set (reg:V2SI 487)
        (vec_concat:V2SI (reg:SI 250 [ v$2 ])
            (reg:SI 270 [ v$3 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 270 [ v$3 ])
        (expr_list:REG_DEAD (reg:SI 250 [ v$2 ])
            (nil))))
(insn 376 375 377 8 (set (reg:V2SI 488)
        (vec_concat:V2SI (reg:SI 217 [ v$0 ])
            (reg:SI 233 [ v$1 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 233 [ v$1 ])
        (expr_list:REG_DEAD (reg:SI 217 [ v$0 ])
            (nil))))
(insn 377 376 378 8 (set (reg:V4SI 486 [ vect_cst_.55 ])
        (vec_concat:V4SI (reg:V2SI 488)
            (reg:V2SI 487))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 488)
        (expr_list:REG_DEAD (reg:V2SI 487)
            (nil))))
(insn 378 377 379 8 (set (reg:V2SI 490)
        (vec_concat:V2SI (reg:SI 220 [ v$10 ])
            (reg:SI 206 [ v$11 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 220 [ v$10 ])
        (expr_list:REG_DEAD (reg:SI 206 [ v$11 ])
            (nil))))
(insn 379 378 380 8 (set (reg:V2SI 491)
        (vec_concat:V2SI (reg:SI 254 [ v$8 ])
            (reg:SI 274 [ v$9 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 274 [ v$9 ])
        (expr_list:REG_DEAD (reg:SI 254 [ v$8 ])
            (nil))))
(insn 380 379 381 8 (set (reg:V4SI 489 [ vect_cst_.58 ])
        (vec_concat:V4SI (reg:V2SI 491)
            (reg:V2SI 490))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 491)
        (expr_list:REG_DEAD (reg:V2SI 490)
            (nil))))
(insn 381 380 382 8 (set (reg:V4SI 492 [ D.5780 ])
        (xor:V4SI (reg:V4SI 486 [ vect_cst_.55 ])
            (reg:V4SI 489 [ vect_cst_.58 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 489 [ vect_cst_.58 ])
        (expr_list:REG_DEAD (reg:V4SI 486 [ vect_cst_.55 ])
            (nil))))
(insn 382 381 383 8 (set (reg:V2SI 494)
        (vec_concat:V2SI (reg:SI 138 [ D.5781 ])
            (reg:SI 139 [ D.5781 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 139 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.5781 ])
            (nil))))
(insn 383 382 384 8 (set (reg:V2SI 495)
        (vec_concat:V2SI (reg:SI 136 [ D.5781 ])
            (reg:SI 137 [ D.5781 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 137 [ D.5781 ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.5781 ])
            (nil))))
(insn 384 383 385 8 (set (reg:V4SI 493 [ vect_cst_.52 ])
        (vec_concat:V4SI (reg:V2SI 495)
            (reg:V2SI 494))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 495)
        (expr_list:REG_DEAD (reg:V2SI 494)
            (nil))))
(insn 385 384 386 8 (set (reg:V4SI 496 [ D.5780 ])
        (xor:V4SI (reg:V4SI 492 [ D.5780 ])
            (reg:V4SI 493 [ vect_cst_.52 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 492 [ D.5780 ])
        (nil)))
(insn 386 385 387 8 (set (reg:V2SI 498)
        (vec_concat:V2SI (reg:SI 130 [ v$2 ])
            (reg:SI 131 [ v$3 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 131 [ v$3 ])
        (expr_list:REG_DEAD (reg:SI 130 [ v$2 ])
            (nil))))
(insn 387 386 388 8 (set (reg:V2SI 499)
        (vec_concat:V2SI (reg:SI 128 [ v$0 ])
            (reg:SI 129 [ v$1 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 129 [ v$1 ])
        (expr_list:REG_DEAD (reg:SI 128 [ v$0 ])
            (nil))))
(insn 388 387 389 8 (set (reg:V4SI 497 [ vect_cst_.50 ])
        (vec_concat:V4SI (reg:V2SI 499)
            (reg:V2SI 498))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 499)
        (expr_list:REG_DEAD (reg:V2SI 498)
            (nil))))
(insn 389 388 390 8 (set (reg:V4SI 500 [ vect__497.56 ])
        (xor:V4SI (reg:V4SI 496 [ D.5780 ])
            (reg:V4SI 497 [ vect_cst_.50 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 497 [ vect_cst_.50 ])
        (expr_list:REG_DEAD (reg:V4SI 496 [ D.5780 ])
            (nil))))
(insn 390 389 392 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 16 [0x10])) [2 MEM[(unsigned int *)state_246(D) + 16B]+0 S16 A32])
        (unspec:V16QI [
                (subreg:V16QI (reg:V4SI 500 [ vect__497.56 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:93 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V4SI 500 [ vect__497.56 ])
        (nil)))
(insn 392 390 393 8 (set (reg:V2SI 502)
        (vec_concat:V2SI (reg:SI 273 [ v$14 ])
            (reg:SI 219 [ v$15 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 273 [ v$14 ])
        (expr_list:REG_DEAD (reg:SI 219 [ v$15 ])
            (nil))))
(insn 393 392 394 8 (set (reg:V2SI 503)
        (vec_concat:V2SI (reg:SI 235 [ v$12 ])
            (reg:SI 252 [ v$13 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 252 [ v$13 ])
        (expr_list:REG_DEAD (reg:SI 235 [ v$12 ])
            (nil))))
(insn 394 393 395 8 (set (reg:V4SI 501 [ vect_cst_.54 ])
        (vec_concat:V4SI (reg:V2SI 503)
            (reg:V2SI 502))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 503)
        (expr_list:REG_DEAD (reg:V2SI 502)
            (nil))))
(insn 395 394 396 8 (set (reg:V2SI 505)
        (vec_concat:V2SI (reg:SI 238 [ v$6 ])
            (reg:SI 256 [ v$7 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 256 [ v$7 ])
        (expr_list:REG_DEAD (reg:SI 238 [ v$6 ])
            (nil))))
(insn 396 395 397 8 (set (reg:V2SI 506)
        (vec_concat:V2SI (reg:SI 276 [ v$4 ])
            (reg:SI 222 [ v$5 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 276 [ v$4 ])
        (expr_list:REG_DEAD (reg:SI 222 [ v$5 ])
            (nil))))
(insn 397 396 398 8 (set (reg:V4SI 504 [ vect_cst_.57 ])
        (vec_concat:V4SI (reg:V2SI 506)
            (reg:V2SI 505))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 506)
        (expr_list:REG_DEAD (reg:V2SI 505)
            (nil))))
(insn 398 397 402 8 (set (reg:V4SI 507 [ D.5780 ])
        (xor:V4SI (reg:V4SI 501 [ vect_cst_.54 ])
            (reg:V4SI 504 [ vect_cst_.57 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 504 [ vect_cst_.57 ])
        (expr_list:REG_DEAD (reg:V4SI 501 [ vect_cst_.54 ])
            (nil))))
(insn 402 398 403 8 (set (reg:V4SI 511 [ D.5780 ])
        (xor:V4SI (reg:V4SI 507 [ D.5780 ])
            (reg:V4SI 493 [ vect_cst_.52 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 507 [ D.5780 ])
        (expr_list:REG_DEAD (reg:V4SI 493 [ vect_cst_.52 ])
            (nil))))
(insn 403 402 404 8 (set (reg:V2SI 513)
        (vec_concat:V2SI (reg:SI 134 [ v$6 ])
            (reg:SI 135 [ v$7 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 135 [ v$7 ])
        (expr_list:REG_DEAD (reg:SI 134 [ v$6 ])
            (nil))))
(insn 404 403 405 8 (set (reg:V2SI 514)
        (vec_concat:V2SI (reg:SI 132 [ v$4 ])
            (reg:SI 133 [ v$5 ]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 133 [ v$5 ])
        (expr_list:REG_DEAD (reg:SI 132 [ v$4 ])
            (nil))))
(insn 405 404 406 8 (set (reg:V4SI 512 [ vect_cst_.49 ])
        (vec_concat:V4SI (reg:V2SI 514)
            (reg:V2SI 513))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 514)
        (expr_list:REG_DEAD (reg:V2SI 513)
            (nil))))
(insn 406 405 407 8 (set (reg:V4SI 515 [ vect__497.56 ])
        (xor:V4SI (reg:V4SI 511 [ D.5780 ])
            (reg:V4SI 512 [ vect_cst_.49 ]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 512 [ vect_cst_.49 ])
        (expr_list:REG_DEAD (reg:V4SI 511 [ D.5780 ])
            (nil))))
(insn 407 406 412 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 356 [ state ])
                (const_int 32 [0x20])) [2 MEM[(unsigned int *)state_246(D) + 32B]+0 S16 A32])
        (unspec:V16QI [
                (subreg:V16QI (reg:V4SI 515 [ vect__497.56 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:93 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V4SI 515 [ vect__497.56 ])
        (expr_list:REG_DEAD (reg/v/f:DI 356 [ state ])
            (nil))))
(insn 412 407 413 8 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) blake_ref.c:103 90 {*movsi_internal}
     (nil))
(insn 413 412 0 8 (use (reg/i:SI 0 ax)) blake_ref.c:103 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function compress64 (compress64, funcdef_no=12, decl_uid=3221, cgraph_uid=12, symbol_order=20)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (reg/v/f:DI 351 [ datablock ])

   after canon_rtx address: (reg/v/f:DI 351 [ datablock ])

   after cselib_expand address: (reg:DI 1 dx [ datablock ])

   after canon_rtx address: (reg:DI 1 dx [ datablock ])
  varying cselib base=2:2 offset = 0
 processing cselib load mem:(mem:DI (reg/v/f:DI 351 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -128 [0xffffffffffffff80]))
  gid=0 offset=-128 
 processing const base store gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=43
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 8 [0x8]))
  varying cselib base=2:2 offset = 8
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8])
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -120 [0xffffffffffffff88]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -120 [0xffffffffffffff88]))
  gid=0 offset=-120 
 processing const base store gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=46
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 16 [0x10]))
  varying cselib base=2:2 offset = 16
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8])
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -112 [0xffffffffffffff90]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -112 [0xffffffffffffff90]))
  gid=0 offset=-112 
 processing const base store gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=49
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 24 [0x18]))
  varying cselib base=2:2 offset = 24
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8])
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -104 [0xffffffffffffff98]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -104 [0xffffffffffffff98]))
  gid=0 offset=-104 
 processing const base store gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=52
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 32 [0x20]))
  varying cselib base=2:2 offset = 32
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8])
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -96 [0xffffffffffffffa0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -96 [0xffffffffffffffa0]))
  gid=0 offset=-96 
 processing const base store gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=55
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 40 [0x28]))
  varying cselib base=2:2 offset = 40
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8])
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -88 [0xffffffffffffffa8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -88 [0xffffffffffffffa8]))
  gid=0 offset=-88 
 processing const base store gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=58
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 48 [0x30]))
  varying cselib base=2:2 offset = 48
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8])
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -80 [0xffffffffffffffb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -80 [0xffffffffffffffb0]))
  gid=0 offset=-80 
 processing const base store gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=61
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 56 [0x38]))
  varying cselib base=2:2 offset = 56
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8])
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -72 [0xffffffffffffffb8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -72 [0xffffffffffffffb8]))
  gid=0 offset=-72 
 processing const base store gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=64
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 64 [0x40]))
  varying cselib base=2:2 offset = 64
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8])
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -64 [0xffffffffffffffc0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -64 [0xffffffffffffffc0]))
  gid=0 offset=-64 
 processing const base store gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=67
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 72 [0x48]))
  varying cselib base=2:2 offset = 72
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8])
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -56 [0xffffffffffffffc8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -56 [0xffffffffffffffc8]))
  gid=0 offset=-56 
 processing const base store gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=70
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 80 [0x50]))
  varying cselib base=2:2 offset = 80
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8])
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=72
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -48 [0xffffffffffffffd0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -48 [0xffffffffffffffd0]))
  gid=0 offset=-48 
 processing const base store gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=73
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 88 [0x58]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 88 [0x58]))
  varying cselib base=2:2 offset = 88
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8])
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))
  gid=0 offset=-40 
 processing const base store gid=0[-40..-32)
    trying store in insn=72 gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=76
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 96 [0x60]))
  varying cselib base=2:2 offset = 96
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8])
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))
  gid=0 offset=-32 
 processing const base store gid=0[-32..-24)
    trying store in insn=75 gid=0[-40..-32)
    trying store in insn=72 gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=79
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 104 [0x68]))
  varying cselib base=2:2 offset = 104
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8])
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))
  gid=0 offset=-24 
 processing const base store gid=0[-24..-16)
    trying store in insn=78 gid=0[-32..-24)
    trying store in insn=75 gid=0[-40..-32)
    trying store in insn=72 gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=82
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 112 [0x70]))
  varying cselib base=2:2 offset = 112
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8])
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
  gid=0 offset=-16 
 processing const base store gid=0[-16..-8)
    trying store in insn=81 gid=0[-24..-16)
    trying store in insn=78 gid=0[-32..-24)
    trying store in insn=75 gid=0[-40..-32)
    trying store in insn=72 gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=85
  mem: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 351 [ datablock ])
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg:DI 1 dx [ datablock ])
    (const_int 120 [0x78]))
  varying cselib base=2:2 offset = 120
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
        (const_int 120 [0x78])) [0 MEM[(const BitSequence *)datablock_5(D) + 120B]+0 S8 A8])
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
  gid=0 offset=-8 
 processing const base store gid=0[-8..0)
    trying store in insn=84 gid=0[-16..-8)
    trying store in insn=81 gid=0[-24..-16)
    trying store in insn=78 gid=0[-32..-24)
    trying store in insn=75 gid=0[-40..-32)
    trying store in insn=72 gid=0[-48..-40)
    trying store in insn=69 gid=0[-56..-48)
    trying store in insn=66 gid=0[-64..-56)
    trying store in insn=63 gid=0[-72..-64)
    trying store in insn=60 gid=0[-80..-72)
    trying store in insn=57 gid=0[-88..-80)
    trying store in insn=54 gid=0[-96..-88)
    trying store in insn=51 gid=0[-104..-96)
    trying store in insn=48 gid=0[-112..-104)
    trying store in insn=45 gid=0[-120..-112)
    trying store in insn=42 gid=0[-128..-120)
mems_found = 1, cannot_delete = false

**scanning insn=88
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 136 [0x88])) [3 state_534(D)->h64+0 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 144 [0x90])) [3 state_534(D)->h64+8 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=90
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 152 [0x98])) [3 state_534(D)->h64+16 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 160 [0xa0])) [3 state_534(D)->h64+24 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=92
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 168 [0xa8])) [3 state_534(D)->h64+32 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=93
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 176 [0xb0])) [3 state_534(D)->h64+40 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 184 [0xb8])) [3 state_534(D)->h64+48 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=95
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 192 [0xc0])) [3 state_534(D)->h64+56 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=96
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 344 [0x158]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 344 [0x158]))
  varying cselib base=1:1 offset = 344
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 344 [0x158])) [3 state_534(D)->salt64+0 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=99
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 352 [0x160]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 352 [0x160]))
  varying cselib base=1:1 offset = 352
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 352 [0x160])) [3 state_534(D)->salt64+8 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 360 [0x168]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 360 [0x168]))
  varying cselib base=1:1 offset = 360
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 360 [0x168])) [3 state_534(D)->salt64+16 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 368 [0x170]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 368 [0x170]))
  varying cselib base=1:1 offset = 368
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 368 [0x170])) [3 state_534(D)->salt64+24 S8 A64])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 12 [0xc])) [2 state_534(D)->nullt+0 S4 A32])
 processing cselib load against insn 87
 processing cselib load against insn 84
 processing cselib load against insn 81
 processing cselib load against insn 78
 processing cselib load against insn 75
 processing cselib load against insn 72
 processing cselib load against insn 69
 processing cselib load against insn 66
 processing cselib load against insn 63
 processing cselib load against insn 60
 processing cselib load against insn 57
 processing cselib load against insn 54
 processing cselib load against insn 51
 processing cselib load against insn 48
 processing cselib load against insn 45
 processing cselib load against insn 42
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=111
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 200 [0xc8])) [3 state_534(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 208 [0xd0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 208 [0xd0]))
  varying cselib base=1:1 offset = 208
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
        (const_int 208 [0xd0])) [3 state_534(D)->t64+8 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=185
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=201
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=207
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=209
mems_found = 0, cannot_delete = true

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=211
mems_found = 0, cannot_delete = true

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=213
mems_found = 0, cannot_delete = true

**scanning insn=214
mems_found = 0, cannot_delete = true

**scanning insn=215
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
mems_found = 0, cannot_delete = true

**scanning insn=225
mems_found = 0, cannot_delete = true

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=233
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=235
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=240
mems_found = 0, cannot_delete = true

**scanning insn=241
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=246
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=256
mems_found = 0, cannot_delete = true

**scanning insn=259
  mem: (reg:DI 269 [ ivtmp.149 ])

   after canon_rtx address: (reg:DI 269 [ ivtmp.149 ])

   after cselib_expand address: (reg:DI 269 [ ivtmp.149 ])

   after canon_rtx address: (reg:DI 269 [ ivtmp.149 ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:QI (reg:DI 269 [ ivtmp.149 ]) [0 MEM[base: _802, offset: 0B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 440 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 440 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=6:4541 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=262
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 1 [0x1]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 1 [0x1]))
  varying cselib base=1:1 offset = 1
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 1 [0x1])) [0 MEM[base: _802, offset: 1B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=263
mems_found = 0, cannot_delete = true

**scanning insn=264
mems_found = 0, cannot_delete = true

**scanning insn=265
mems_found = 0, cannot_delete = true

**scanning insn=267
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 442 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 442 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=12:4548 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=271
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 2 [0x2]))
  varying cselib base=1:1 offset = 2
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 2 [0x2])) [0 MEM[base: _802, offset: 2B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=273
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 446 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 446 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=17:4553 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=274
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 3 [0x3]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 3 [0x3]))
  varying cselib base=1:1 offset = 3
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 3 [0x3])) [0 MEM[base: _802, offset: 3B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=276
mems_found = 0, cannot_delete = true

**scanning insn=277
mems_found = 0, cannot_delete = true

**scanning insn=279
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 448 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 448 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=22:4558 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=282
mems_found = 0, cannot_delete = true

**scanning insn=283
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 4 [0x4])) [0 MEM[base: _802, offset: 4B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=285
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 452 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 452 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=27:4563 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=286
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 5 [0x5]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 5 [0x5]))
  varying cselib base=1:1 offset = 5
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 5 [0x5])) [0 MEM[base: _802, offset: 5B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=288
mems_found = 0, cannot_delete = true

**scanning insn=289
mems_found = 0, cannot_delete = true

**scanning insn=291
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 454 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 454 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=32:4568 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=295
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 6 [0x6]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 6 [0x6]))
  varying cselib base=1:1 offset = 6
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 6 [0x6])) [0 MEM[base: _802, offset: 6B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 458 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 458 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=37:4573 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=298
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 7 [0x7]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 7 [0x7]))
  varying cselib base=1:1 offset = 7
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 7 [0x7])) [0 MEM[base: _802, offset: 7B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=300
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=303
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 460 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 460 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=42:4578 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=306
mems_found = 0, cannot_delete = true

**scanning insn=307
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 8 [0x8])) [0 MEM[base: _802, offset: 8B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=308
mems_found = 0, cannot_delete = true

**scanning insn=309
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 464 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 464 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=47:4583 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=310
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 9 [0x9]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 9 [0x9]))
  varying cselib base=1:1 offset = 9
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 9 [0x9])) [0 MEM[base: _802, offset: 9B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=312
mems_found = 0, cannot_delete = true

**scanning insn=313
mems_found = 0, cannot_delete = true

**scanning insn=315
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 466 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 466 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=52:4588 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=319
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 10 [0xa]))
  varying cselib base=1:1 offset = 10
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 10 [0xa])) [0 MEM[base: _802, offset: 10B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=320
mems_found = 0, cannot_delete = true

**scanning insn=321
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 470 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 470 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=57:4593 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=322
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 11 [0xb]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 11 [0xb]))
  varying cselib base=1:1 offset = 11
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 11 [0xb])) [0 MEM[base: _802, offset: 11B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=324
mems_found = 0, cannot_delete = true

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=327
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 472 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 472 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=62:4598 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=330
mems_found = 0, cannot_delete = true

**scanning insn=331
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 12 [0xc])) [0 MEM[base: _802, offset: 12B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=332
mems_found = 0, cannot_delete = true

**scanning insn=333
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 476 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 476 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=67:4603 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=334
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 13 [0xd]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 13 [0xd]))
  varying cselib base=1:1 offset = 13
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 13 [0xd])) [0 MEM[base: _802, offset: 13B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=336
mems_found = 0, cannot_delete = true

**scanning insn=337
mems_found = 0, cannot_delete = true

**scanning insn=339
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 478 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 478 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=72:4608 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=342
mems_found = 0, cannot_delete = true

**scanning insn=343
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 14 [0xe]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 14 [0xe]))
  varying cselib base=1:1 offset = 14
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 14 [0xe])) [0 MEM[base: _802, offset: 14B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=344
mems_found = 0, cannot_delete = true

**scanning insn=345
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 482 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 482 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=77:4613 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=346
  mem: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 15 [0xf]))

   after cselib_expand address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg:DI 269 [ ivtmp.149 ])
    (const_int 15 [0xf]))
  varying cselib base=1:1 offset = 15
 processing cselib load mem:(mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
        (const_int 15 [0xf])) [0 MEM[base: _802, offset: 15B]+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=348
mems_found = 0, cannot_delete = true

**scanning insn=349
mems_found = 0, cannot_delete = true

**scanning insn=351
  mem: (plus:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
            (const_int 8 [0x8]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after cselib_expand address: (plus:DI (plus:DI (ashift:DI (reg:DI 484 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))

   after canon_rtx address: (plus:DI (plus:DI (ashift:DI (reg:DI 484 [ D.5864 ])
            (const_int 3 [0x3]))
        (reg/f:DI 20 frame))
    (const_int -128 [0xffffffffffffff80]))
  varying cselib base=82:4618 offset = -128
 processing cselib load mem:(mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
                (const_int 8 [0x8]))
            (reg/f:DI 20 frame))
        (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=354
mems_found = 0, cannot_delete = true

**scanning insn=361
mems_found = 0, cannot_delete = true

**scanning insn=362
mems_found = 0, cannot_delete = true

**scanning insn=363
mems_found = 0, cannot_delete = true

**scanning insn=364
mems_found = 0, cannot_delete = true

**scanning insn=365
mems_found = 0, cannot_delete = true

**scanning insn=366
mems_found = 0, cannot_delete = true

**scanning insn=367
mems_found = 0, cannot_delete = true

**scanning insn=368
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=16:16 offset = 136
 processing cselib store [136..152)
mems_found = 1, cannot_delete = false

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=371
mems_found = 0, cannot_delete = true

**scanning insn=372
mems_found = 0, cannot_delete = true

**scanning insn=373
mems_found = 0, cannot_delete = true

**scanning insn=374
mems_found = 0, cannot_delete = true

**scanning insn=375
mems_found = 0, cannot_delete = true

**scanning insn=376
mems_found = 0, cannot_delete = true

**scanning insn=377
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=16:16 offset = 152
 processing cselib store [152..168)
    trying store in insn=368 gid=-1[136..152)
mems_found = 1, cannot_delete = false

**scanning insn=379
mems_found = 0, cannot_delete = true

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=381
mems_found = 0, cannot_delete = true

**scanning insn=383
mems_found = 0, cannot_delete = true

**scanning insn=384
mems_found = 0, cannot_delete = true

**scanning insn=385
mems_found = 0, cannot_delete = true

**scanning insn=386
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=16:16 offset = 168
 processing cselib store [168..184)
    trying store in insn=377 gid=-1[152..168)
    trying store in insn=368 gid=-1[136..152)
mems_found = 1, cannot_delete = false

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=390
mems_found = 0, cannot_delete = true

**scanning insn=392
mems_found = 0, cannot_delete = true

**scanning insn=393
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=395
  mem: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 350 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=16:16 offset = 184
 processing cselib store [184..200)
    trying store in insn=386 gid=-1[168..184)
    trying store in insn=377 gid=-1[152..168)
    trying store in insn=368 gid=-1[136..152)
mems_found = 1, cannot_delete = false

**scanning insn=400
mems_found = 0, cannot_delete = true

**scanning insn=401
mems_found = 0, cannot_delete = false
group 0 is frame related group 0(128+0): n 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128 p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 16 (  1.8)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

( 0 )->[2]->( 4 3 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  kill: 
  out:  

( 2 )->[3]->( 5 )
  in:   
  gen:  
  kill: 
  out:  

( 2 )->[4]->( 5 )
  in:   
  gen:  
  kill: 
  out:  

( 4 3 )->[5]->( 6 )
  in:   
  gen:  
  kill: 
  out:  

( 7 5 )->[6]->( 7 8 )
  in:   
  gen:  
  kill: 
  out:  

( 6 )->[7]->( 6 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  out:  

( 6 )->[8]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

( 8 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 109
  v:  
starting to process insn 108
  v:  
regular read
starting to process insn 107
  v:  
starting to process insn 106
  v:  
starting to process insn 105
  v:  
regular read
starting to process insn 104
  v:  
starting to process insn 103
  v:  
starting to process insn 102
  v:  
regular read
starting to process insn 101
  v:  
starting to process insn 100
  v:  
starting to process insn 99
  v:  
regular read
starting to process insn 98
  v:  
starting to process insn 97
  v:  
starting to process insn 96
  v:  
regular read
starting to process insn 95
  v:  
regular read
starting to process insn 94
  v:  
regular read
starting to process insn 93
  v:  
regular read
starting to process insn 92
  v:  
regular read
starting to process insn 91
  v:  
regular read
starting to process insn 90
  v:  
regular read
starting to process insn 89
  v:  
regular read
starting to process insn 88
  v:  
regular read
starting to process insn 87
  v:  
starting to process insn 86
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 85
  v:  1, 2, 3, 4, 5, 6, 7, 8
regular read
starting to process insn 84
  v:  1, 2, 3, 4, 5, 6, 7, 8
i = -16, index = 16
failing at i = -16
starting to process insn 83
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 82
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 81
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
i = -24, index = 24
failing at i = -24
starting to process insn 80
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
starting to process insn 79
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
regular read
starting to process insn 78
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
i = -32, index = 32
failing at i = -32
starting to process insn 77
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
starting to process insn 76
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
regular read
starting to process insn 75
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
i = -40, index = 40
failing at i = -40
starting to process insn 74
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
starting to process insn 73
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
regular read
starting to process insn 72
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
i = -48, index = 48
failing at i = -48
starting to process insn 71
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
starting to process insn 70
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
regular read
starting to process insn 69
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48
i = -56, index = 56
failing at i = -56
starting to process insn 68
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
starting to process insn 67
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
regular read
starting to process insn 66
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
i = -64, index = 64
failing at i = -64
starting to process insn 65
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
starting to process insn 64
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
regular read
starting to process insn 63
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64
i = -72, index = 72
failing at i = -72
starting to process insn 62
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72
starting to process insn 61
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72
regular read
starting to process insn 60
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72
i = -80, index = 80
failing at i = -80
starting to process insn 59
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80
starting to process insn 58
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80
regular read
starting to process insn 57
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80
i = -88, index = 88
failing at i = -88
starting to process insn 56
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88
starting to process insn 55
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88
regular read
starting to process insn 54
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88
i = -96, index = 96
failing at i = -96
starting to process insn 53
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96
starting to process insn 52
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96
regular read
starting to process insn 51
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96
i = -104, index = 104
failing at i = -104
starting to process insn 50
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104
starting to process insn 49
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104
regular read
starting to process insn 48
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104
i = -112, index = 112
failing at i = -112
starting to process insn 47
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112
starting to process insn 46
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112
regular read
starting to process insn 45
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112
i = -120, index = 120
failing at i = -120
starting to process insn 44
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
starting to process insn 43
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
regular read
starting to process insn 42
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120
i = -128, index = 128
failing at i = -128
starting to process insn 41
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 40
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
regular read
starting to process insn 7
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 6
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 120
  v:  
starting to process insn 119
  v:  
starting to process insn 118
  v:  
starting to process insn 117
  v:  
starting to process insn 116
  v:  
regular read
starting to process insn 115
  v:  
starting to process insn 114
  v:  
starting to process insn 113
  v:  
starting to process insn 112
  v:  
starting to process insn 111
  v:  
regular read
starting to process insn 12
  v:  
starting to process insn 11
  v:  
starting to process insn 10
  v:  
starting to process insn 9
  v:  
starting to process insn 37
  v:  
starting to process insn 36
  v:  
starting to process insn 35
  v:  
starting to process insn 34
  v:  
starting to process insn 33
  v:  
starting to process insn 32
  v:  
starting to process insn 31
  v:  
starting to process insn 30
  v:  
starting to process insn 29
  v:  
starting to process insn 28
  v:  
starting to process insn 27
  v:  
starting to process insn 26
  v:  
starting to process insn 25
  v:  
starting to process insn 24
  v:  
starting to process insn 23
  v:  
starting to process insn 22
  v:  
starting to process insn 21
  v:  
starting to process insn 20
  v:  
starting to process insn 19
  v:  
starting to process insn 18
  v:  
starting to process insn 17
  v:  
starting to process insn 16
  v:  
starting to process insn 15
  v:  
starting to process insn 14
  v:  
starting to process insn 13
  v:  
starting to process insn 123
  v:  
starting to process insn 256
  v:  
starting to process insn 255
  v:  
starting to process insn 254
  v:  
starting to process insn 253
  v:  
starting to process insn 252
  v:  
starting to process insn 251
  v:  
starting to process insn 250
  v:  
starting to process insn 249
  v:  
starting to process insn 248
  v:  
starting to process insn 247
  v:  
starting to process insn 246
  v:  
starting to process insn 245
  v:  
starting to process insn 244
  v:  
starting to process insn 243
  v:  
starting to process insn 242
  v:  
starting to process insn 241
  v:  
starting to process insn 240
  v:  
starting to process insn 239
  v:  
starting to process insn 238
  v:  
starting to process insn 237
  v:  
starting to process insn 236
  v:  
starting to process insn 235
  v:  
starting to process insn 234
  v:  
starting to process insn 233
  v:  
starting to process insn 232
  v:  
starting to process insn 231
  v:  
starting to process insn 230
  v:  
starting to process insn 229
  v:  
starting to process insn 228
  v:  
starting to process insn 227
  v:  
starting to process insn 226
  v:  
starting to process insn 225
  v:  
starting to process insn 224
  v:  
starting to process insn 223
  v:  
starting to process insn 222
  v:  
starting to process insn 221
  v:  
starting to process insn 220
  v:  
starting to process insn 219
  v:  
starting to process insn 218
  v:  
starting to process insn 217
  v:  
starting to process insn 216
  v:  
starting to process insn 215
  v:  
starting to process insn 214
  v:  
starting to process insn 213
  v:  
starting to process insn 212
  v:  
starting to process insn 211
  v:  
starting to process insn 210
  v:  
starting to process insn 209
  v:  
starting to process insn 208
  v:  
starting to process insn 207
  v:  
starting to process insn 206
  v:  
starting to process insn 205
  v:  
starting to process insn 204
  v:  
starting to process insn 203
  v:  
starting to process insn 202
  v:  
starting to process insn 201
  v:  
starting to process insn 200
  v:  
starting to process insn 199
  v:  
starting to process insn 198
  v:  
starting to process insn 197
  v:  
starting to process insn 196
  v:  
starting to process insn 195
  v:  
starting to process insn 194
  v:  
starting to process insn 193
  v:  
starting to process insn 192
  v:  
starting to process insn 191
  v:  
starting to process insn 190
  v:  
starting to process insn 189
  v:  
starting to process insn 188
  v:  
starting to process insn 187
  v:  
starting to process insn 186
  v:  
starting to process insn 185
  v:  
starting to process insn 184
  v:  
starting to process insn 183
  v:  
starting to process insn 182
  v:  
starting to process insn 181
  v:  
starting to process insn 180
  v:  
starting to process insn 179
  v:  
starting to process insn 178
  v:  
starting to process insn 177
  v:  
starting to process insn 176
  v:  
starting to process insn 175
  v:  
starting to process insn 174
  v:  
starting to process insn 173
  v:  
starting to process insn 172
  v:  
starting to process insn 171
  v:  
starting to process insn 170
  v:  
starting to process insn 169
  v:  
starting to process insn 168
  v:  
starting to process insn 167
  v:  
starting to process insn 166
  v:  
starting to process insn 165
  v:  
starting to process insn 164
  v:  
starting to process insn 163
  v:  
starting to process insn 162
  v:  
starting to process insn 161
  v:  
starting to process insn 160
  v:  
starting to process insn 159
  v:  
starting to process insn 158
  v:  
starting to process insn 157
  v:  
starting to process insn 156
  v:  
starting to process insn 155
  v:  
starting to process insn 154
  v:  
starting to process insn 153
  v:  
starting to process insn 152
  v:  
starting to process insn 151
  v:  
starting to process insn 150
  v:  
starting to process insn 149
  v:  
starting to process insn 148
  v:  
starting to process insn 147
  v:  
starting to process insn 146
  v:  
starting to process insn 145
  v:  
starting to process insn 144
  v:  
starting to process insn 143
  v:  
starting to process insn 142
  v:  
starting to process insn 141
  v:  
starting to process insn 140
  v:  
starting to process insn 139
  v:  
starting to process insn 138
  v:  
starting to process insn 137
  v:  
starting to process insn 136
  v:  
starting to process insn 135
  v:  
starting to process insn 134
  v:  
starting to process insn 133
  v:  
starting to process insn 132
  v:  
starting to process insn 131
  v:  
starting to process insn 130
  v:  
starting to process insn 129
  v:  
starting to process insn 128
  v:  
starting to process insn 127
  v:  
starting to process insn 126
  v:  
starting to process insn 125
  v:  
starting to process insn 354
  v:  
starting to process insn 351
  v:  
regular read
starting to process insn 349
  v:  
starting to process insn 348
  v:  
starting to process insn 346
  v:  
regular read
starting to process insn 345
  v:  
regular read
starting to process insn 344
  v:  
starting to process insn 343
  v:  
regular read
starting to process insn 342
  v:  
starting to process insn 339
  v:  
regular read
starting to process insn 337
  v:  
starting to process insn 336
  v:  
starting to process insn 334
  v:  
regular read
starting to process insn 333
  v:  
regular read
starting to process insn 332
  v:  
starting to process insn 331
  v:  
regular read
starting to process insn 330
  v:  
starting to process insn 327
  v:  
regular read
starting to process insn 325
  v:  
starting to process insn 324
  v:  
starting to process insn 322
  v:  
regular read
starting to process insn 321
  v:  
regular read
starting to process insn 320
  v:  
starting to process insn 319
  v:  
regular read
starting to process insn 318
  v:  
starting to process insn 315
  v:  
regular read
starting to process insn 313
  v:  
starting to process insn 312
  v:  
starting to process insn 310
  v:  
regular read
starting to process insn 309
  v:  
regular read
starting to process insn 308
  v:  
starting to process insn 307
  v:  
regular read
starting to process insn 306
  v:  
starting to process insn 303
  v:  
regular read
starting to process insn 301
  v:  
starting to process insn 300
  v:  
starting to process insn 298
  v:  
regular read
starting to process insn 297
  v:  
regular read
starting to process insn 296
  v:  
starting to process insn 295
  v:  
regular read
starting to process insn 294
  v:  
starting to process insn 291
  v:  
regular read
starting to process insn 289
  v:  
starting to process insn 288
  v:  
starting to process insn 286
  v:  
regular read
starting to process insn 285
  v:  
regular read
starting to process insn 284
  v:  
starting to process insn 283
  v:  
regular read
starting to process insn 282
  v:  
starting to process insn 279
  v:  
regular read
starting to process insn 277
  v:  
starting to process insn 276
  v:  
starting to process insn 274
  v:  
regular read
starting to process insn 273
  v:  
regular read
starting to process insn 272
  v:  
starting to process insn 271
  v:  
regular read
starting to process insn 270
  v:  
starting to process insn 267
  v:  
regular read
starting to process insn 265
  v:  
starting to process insn 264
  v:  
starting to process insn 263
  v:  
starting to process insn 262
  v:  
regular read
starting to process insn 261
  v:  
regular read
starting to process insn 260
  v:  
starting to process insn 259
  v:  
regular read
starting to process insn 401
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 400
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 395
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 394
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 393
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 392
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 390
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 389
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 388
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 386
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 385
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 384
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 383
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 381
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 380
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 379
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 377
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 376
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 375
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 374
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 373
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 372
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 371
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 370
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 368
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 367
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 366
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 365
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 364
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 363
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 362
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
starting to process insn 361
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


compress64

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 17[flags]
;;  ref usage 	r0={1d,2u} r1={1d,1u} r2={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u,2e} r17={140d,2u} r20={1d,40u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} r100={2d,2u} r119={1d,2u} r120={1d,2u} r121={1d,2u} r122={1d,2u} r123={1d,2u} r124={1d,2u} r125={1d,2u} r126={1d,2u} r127={1d,2u,1e} r128={1d,2u,1e} r129={1d,2u,1e} r130={1d,2u,1e} r132={1d,2u,2e} r133={1d,2u,2e} r135={1d,2u} r137={1d,2u} r138={1d,2u} r140={1d,2u} r143={1d,2u} r145={1d,2u} r146={1d,2u} r148={1d,2u} r151={1d,2u} r153={1d,2u} r154={1d,2u} r156={1d,2u} r159={1d,2u} r161={1d,2u} r162={1d,2u} r164={1d,2u} r167={1d,2u} r169={1d,2u} r170={1d,2u} r172={1d,2u} r175={1d,2u} r177={1d,2u} r178={1d,2u} r180={1d,2u} r183={1d,2u} r185={1d,2u} r186={1d,2u} r188={1d,2u} r191={1d,2u} r193={1d,2u} r194={1d,2u} r196={1d,2u} r197={2d,3u} r200={1d,2u} r202={1d,2u} r203={1d,2u} r205={1d,2u} r208={2d,3u} r210={3d,3u} r211={2d,3u} r214={2d,3u} r217={1d,2u} r219={1d,2u} r220={1d,2u} r222={1d,2u} r225={2d,3u} r227={3d,3u} r230={2d,3u} r233={1d,2u} r235={1d,2u} r236={1d,2u} r238={1d,2u} r241={2d,3u} r243={3d,3u} r244={2d,3u} r246={2d,3u} r250={1d,2u} r252={1d,2u} r253={1d,2u} r255={1d,2u} r258={2d,3u} r260={3d,3u} r262={2d,3u} r264={2d,3u} r269={2d,17u} r286={1d,1u} r287={2d,2u} r289={1d,1u} r290={2d,1u} r291={2d,2u} r292={2d,1u} r294={1d,1u} r295={2d,2u} r297={1d,1u} r298={2d,1u} r299={2d,2u} r300={2d,1u} r302={1d,1u} r303={2d,2u} r305={1d,1u} r306={2d,1u} r307={2d,2u} r308={2d,1u} r310={1d,1u} r311={2d,2u} r313={1d,1u} r314={2d,1u} r315={2d,2u} r316={2d,1u} r318={1d,1u} r319={2d,2u} r321={1d,1u} r322={2d,1u} r323={2d,2u} r324={2d,1u} r326={1d,1u} r327={2d,2u} r329={1d,1u} r330={2d,1u} r331={2d,2u} r332={2d,1u} r334={1d,1u} r335={2d,2u} r337={1d,1u} r338={2d,1u} r339={2d,2u} r340={2d,1u} r342={1d,1u} r343={2d,2u} r345={1d,1u} r346={2d,1u} r347={2d,2u} r348={2d,1u} r350={1d,19u} r351={1d,16u,15e} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,2u,1e} r441={1d,16u} r442={1d,2u,1e} r446={1d,2u,1e} r448={1d,2u,1e} r452={1d,2u,1e} r454={1d,2u,1e} r458={1d,2u,1e} r460={1d,2u,1e} r464={1d,2u,1e} r466={1d,2u,1e} r470={1d,2u,1e} r472={1d,2u,1e} r476={1d,2u,1e} r478={1d,2u,1e} r482={1d,2u,1e} r484={1d,2u,1e} r488={1d,1u} r489={1d,1u} r490={1d,1u} r491={1d,2u} r492={1d,1u} r493={1d,1u} r494={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,1u} r498={1d,2u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r506={1d,1u} r507={1d,1u} r508={1d,1u} r509={1d,1u} r510={1d,1u} r511={1d,1u} r513={1d,1u} r514={1d,1u} r515={1d,1u} 
;;    total ref usage 1032{468d,523u,41e} in 341{341 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371
;; live  kill	 17 [flags]
(note 38 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 6 38 7 2 (set (reg/v/f:DI 350 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 7 6 8 2 (set (reg/v/f:DI 351 [ datablock ])
        (reg:DI 1 dx [ datablock ])) blake_ref.c:106 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ datablock ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 datablock+0 S8 A64])
            (nil))))
(note 8 7 40 2 NOTE_INSN_FUNCTION_BEG)
(insn 40 8 41 2 (set (reg:DI 352 [ MEM[(const BitSequence *)datablock_5(D)] ])
        (mem:DI (reg/v/f:DI 351 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 287 [ D.5867 ])
        (bswap:DI (reg:DI 352 [ MEM[(const BitSequence *)datablock_5(D)] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 352 [ MEM[(const BitSequence *)datablock_5(D)] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (reg/v/f:DI 351 [ datablock ]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8]))
            (nil))))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 m+0 S8 A128])
        (reg:DI 287 [ D.5867 ])) blake_ref.c:129 89 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 353 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 291 [ D.5867 ])
        (bswap:DI (reg:DI 353 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 353 [ MEM[(const BitSequence *)datablock_5(D) + 8B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8]))
            (nil))))
(insn 45 44 46 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -120 [0xffffffffffffff88])) [3 m+8 S8 A64])
        (reg:DI 291 [ D.5867 ])) blake_ref.c:130 89 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 354 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (set (reg:DI 295 [ D.5867 ])
        (bswap:DI (reg:DI 354 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 354 [ MEM[(const BitSequence *)datablock_5(D) + 16B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8]))
            (nil))))
(insn 48 47 49 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 m+16 S8 A128])
        (reg:DI 295 [ D.5867 ])) blake_ref.c:131 89 {*movdi_internal}
     (nil))
(insn 49 48 50 2 (set (reg:DI 355 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:DI 299 [ D.5867 ])
        (bswap:DI (reg:DI 355 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 355 [ MEM[(const BitSequence *)datablock_5(D) + 24B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8]))
            (nil))))
(insn 51 50 52 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 m+24 S8 A64])
        (reg:DI 299 [ D.5867 ])) blake_ref.c:132 89 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:DI 356 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 303 [ D.5867 ])
        (bswap:DI (reg:DI 356 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 356 [ MEM[(const BitSequence *)datablock_5(D) + 32B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8]))
            (nil))))
(insn 54 53 55 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 m+32 S8 A128])
        (reg:DI 303 [ D.5867 ])) blake_ref.c:133 89 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:DI 357 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 56 55 57 2 (set (reg:DI 307 [ D.5867 ])
        (bswap:DI (reg:DI 357 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 357 [ MEM[(const BitSequence *)datablock_5(D) + 40B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8]))
            (nil))))
(insn 57 56 58 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [3 m+40 S8 A64])
        (reg:DI 307 [ D.5867 ])) blake_ref.c:134 89 {*movdi_internal}
     (nil))
(insn 58 57 59 2 (set (reg:DI 358 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 311 [ D.5867 ])
        (bswap:DI (reg:DI 358 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 358 [ MEM[(const BitSequence *)datablock_5(D) + 48B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8]))
            (nil))))
(insn 60 59 61 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 m+48 S8 A128])
        (reg:DI 311 [ D.5867 ])) blake_ref.c:135 89 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 359 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 62 61 63 2 (set (reg:DI 315 [ D.5867 ])
        (bswap:DI (reg:DI 359 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 359 [ MEM[(const BitSequence *)datablock_5(D) + 56B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8]))
            (nil))))
(insn 63 62 64 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [3 m+56 S8 A64])
        (reg:DI 315 [ D.5867 ])) blake_ref.c:136 89 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 360 [ MEM[(const BitSequence *)datablock_5(D) + 64B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:DI 319 [ D.5867 ])
        (bswap:DI (reg:DI 360 [ MEM[(const BitSequence *)datablock_5(D) + 64B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 360 [ MEM[(const BitSequence *)datablock_5(D) + 64B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8]))
            (nil))))
(insn 66 65 67 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 m+64 S8 A128])
        (reg:DI 319 [ D.5867 ])) blake_ref.c:137 89 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:DI 361 [ MEM[(const BitSequence *)datablock_5(D) + 72B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 323 [ D.5867 ])
        (bswap:DI (reg:DI 361 [ MEM[(const BitSequence *)datablock_5(D) + 72B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 361 [ MEM[(const BitSequence *)datablock_5(D) + 72B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8]))
            (nil))))
(insn 69 68 70 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 m+72 S8 A64])
        (reg:DI 323 [ D.5867 ])) blake_ref.c:138 89 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:DI 362 [ MEM[(const BitSequence *)datablock_5(D) + 80B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 71 70 72 2 (set (reg:DI 327 [ D.5867 ])
        (bswap:DI (reg:DI 362 [ MEM[(const BitSequence *)datablock_5(D) + 80B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 362 [ MEM[(const BitSequence *)datablock_5(D) + 80B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8]))
            (nil))))
(insn 72 71 73 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 m+80 S8 A128])
        (reg:DI 327 [ D.5867 ])) blake_ref.c:139 89 {*movdi_internal}
     (nil))
(insn 73 72 74 2 (set (reg:DI 363 [ MEM[(const BitSequence *)datablock_5(D) + 88B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 74 73 75 2 (set (reg:DI 331 [ D.5867 ])
        (bswap:DI (reg:DI 363 [ MEM[(const BitSequence *)datablock_5(D) + 88B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 363 [ MEM[(const BitSequence *)datablock_5(D) + 88B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8]))
            (nil))))
(insn 75 74 76 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 m+88 S8 A64])
        (reg:DI 331 [ D.5867 ])) blake_ref.c:140 89 {*movdi_internal}
     (nil))
(insn 76 75 77 2 (set (reg:DI 364 [ MEM[(const BitSequence *)datablock_5(D) + 96B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 77 76 78 2 (set (reg:DI 335 [ D.5867 ])
        (bswap:DI (reg:DI 364 [ MEM[(const BitSequence *)datablock_5(D) + 96B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 364 [ MEM[(const BitSequence *)datablock_5(D) + 96B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8]))
            (nil))))
(insn 78 77 79 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 m+96 S8 A128])
        (reg:DI 335 [ D.5867 ])) blake_ref.c:141 89 {*movdi_internal}
     (nil))
(insn 79 78 80 2 (set (reg:DI 365 [ MEM[(const BitSequence *)datablock_5(D) + 104B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:DI 339 [ D.5867 ])
        (bswap:DI (reg:DI 365 [ MEM[(const BitSequence *)datablock_5(D) + 104B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 365 [ MEM[(const BitSequence *)datablock_5(D) + 104B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8]))
            (nil))))
(insn 81 80 82 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 m+104 S8 A64])
        (reg:DI 339 [ D.5867 ])) blake_ref.c:142 89 {*movdi_internal}
     (nil))
(insn 82 81 83 2 (set (reg:DI 366 [ MEM[(const BitSequence *)datablock_5(D) + 112B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 83 82 84 2 (set (reg:DI 343 [ D.5867 ])
        (bswap:DI (reg:DI 366 [ MEM[(const BitSequence *)datablock_5(D) + 112B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 366 [ MEM[(const BitSequence *)datablock_5(D) + 112B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                        (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8]))
            (nil))))
(insn 84 83 85 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 m+112 S8 A128])
        (reg:DI 343 [ D.5867 ])) blake_ref.c:143 89 {*movdi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:DI 367 [ MEM[(const BitSequence *)datablock_5(D) + 120B] ])
        (mem:DI (plus:DI (reg/v/f:DI 351 [ datablock ])
                (const_int 120 [0x78])) [0 MEM[(const BitSequence *)datablock_5(D) + 120B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 351 [ datablock ])
        (nil)))
(insn 86 85 87 2 (set (reg:DI 347 [ D.5867 ])
        (bswap:DI (reg:DI 367 [ MEM[(const BitSequence *)datablock_5(D) + 120B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 367 [ MEM[(const BitSequence *)datablock_5(D) + 120B] ])
        (nil)))
(insn 87 86 88 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [3 m+120 S8 A64])
        (reg:DI 347 [ D.5867 ])) blake_ref.c:144 89 {*movdi_internal}
     (nil))
(insn 88 87 89 2 (set (reg:DI 119 [ v$0 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 136 [0x88])) [3 state_534(D)->h64+0 S8 A64])) blake_ref.c:147 89 {*movdi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:DI 120 [ v$1 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 144 [0x90])) [3 state_534(D)->h64+8 S8 A64])) blake_ref.c:148 89 {*movdi_internal}
     (nil))
(insn 90 89 91 2 (set (reg:DI 121 [ v$2 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 152 [0x98])) [3 state_534(D)->h64+16 S8 A64])) blake_ref.c:149 89 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (set (reg:DI 122 [ v$3 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 160 [0xa0])) [3 state_534(D)->h64+24 S8 A64])) blake_ref.c:150 89 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (set (reg:DI 123 [ v$4 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 168 [0xa8])) [3 state_534(D)->h64+32 S8 A64])) blake_ref.c:151 89 {*movdi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:DI 124 [ v$5 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 176 [0xb0])) [3 state_534(D)->h64+40 S8 A64])) blake_ref.c:152 89 {*movdi_internal}
     (nil))
(insn 94 93 95 2 (set (reg:DI 125 [ v$6 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 184 [0xb8])) [3 state_534(D)->h64+48 S8 A64])) blake_ref.c:153 89 {*movdi_internal}
     (nil))
(insn 95 94 96 2 (set (reg:DI 126 [ v$7 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 192 [0xc0])) [3 state_534(D)->h64+56 S8 A64])) blake_ref.c:154 89 {*movdi_internal}
     (nil))
(insn 96 95 97 2 (set (reg:DI 127 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 344 [0x158])) [3 state_534(D)->salt64+0 S8 A64])) blake_ref.c:155 89 {*movdi_internal}
     (nil))
(insn 97 96 98 2 (set (reg:DI 368)
        (const_int 2611923443488327891 [0x243f6a8885a308d3])) blake_ref.c:155 89 {*movdi_internal}
     (nil))
(insn 98 97 99 2 (parallel [
            (set (reg:DI 244 [ v$8 ])
                (xor:DI (reg:DI 127 [ D.5863 ])
                    (reg:DI 368)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:155 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 368)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 127 [ D.5863 ])
                    (const_int 2611923443488327891 [0x243f6a8885a308d3]))
                (nil)))))
(insn 99 98 100 2 (set (reg:DI 128 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 352 [0x160])) [3 state_534(D)->salt64+8 S8 A64])) blake_ref.c:156 89 {*movdi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:DI 369)
        (const_int 1376283091369227076 [0x13198a2e03707344])) blake_ref.c:156 89 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (parallel [
            (set (reg:DI 262 [ v$9 ])
                (xor:DI (reg:DI 128 [ D.5863 ])
                    (reg:DI 369)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:156 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 369)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 128 [ D.5863 ])
                    (const_int 1376283091369227076 [0x13198a2e03707344]))
                (nil)))))
(insn 102 101 103 2 (set (reg:DI 129 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 360 [0x168])) [3 state_534(D)->salt64+16 S8 A64])) blake_ref.c:157 89 {*movdi_internal}
     (nil))
(insn 103 102 104 2 (set (reg:DI 370)
        (const_int -6626703657320631856 [0xa4093822299f31d0])) blake_ref.c:157 89 {*movdi_internal}
     (nil))
(insn 104 103 105 2 (parallel [
            (set (reg:DI 211 [ v$10 ])
                (xor:DI (reg:DI 129 [ D.5863 ])
                    (reg:DI 370)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:157 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 370)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 129 [ D.5863 ])
                    (const_int -6626703657320631856 [0xa4093822299f31d0]))
                (nil)))))
(insn 105 104 106 2 (set (reg:DI 130 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 368 [0x170])) [3 state_534(D)->salt64+24 S8 A64])) blake_ref.c:158 89 {*movdi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:DI 371)
        (const_int 589684135938649225 [0x82efa98ec4e6c89])) blake_ref.c:158 89 {*movdi_internal}
     (nil))
(insn 107 106 108 2 (parallel [
            (set (reg:DI 197 [ v$11 ])
                (xor:DI (reg:DI 130 [ D.5863 ])
                    (reg:DI 371)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:158 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 371)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 130 [ D.5863 ])
                    (const_int 589684135938649225 [0x82efa98ec4e6c89]))
                (nil)))))
(insn 108 107 109 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 350 [ state ])
                    (const_int 12 [0xc])) [2 state_534(D)->nullt+0 S4 A32])
            (const_int 0 [0]))) blake_ref.c:159 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 109 108 110 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 406)
            (pc))) blake_ref.c:159 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 406)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350

;; basic block 3, loop depth 0, count 0, freq 294, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 350
;; lr  def 	 17 [flags] 132 133 210 227 243 260 372 373 374 375
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  gen 	 132 133 210 227 243 260 372 373 374 375
;; live  kill	 17 [flags]
(note 110 109 111 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 3 (set (reg:DI 132 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 200 [0xc8])) [3 state_534(D)->t64+0 S8 A64])) blake_ref.c:166 89 {*movdi_internal}
     (nil))
(insn 112 111 113 3 (set (reg:DI 372)
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:166 89 {*movdi_internal}
     (nil))
(insn 113 112 114 3 (parallel [
            (set (reg:DI 227 [ v$12 ])
                (xor:DI (reg:DI 132 [ D.5863 ])
                    (reg:DI 372)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:166 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 372)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 132 [ D.5863 ])
                    (const_int 4983270260364809079 [0x452821e638d01377]))
                (nil)))))
(insn 114 113 115 3 (set (reg:DI 373)
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:167 89 {*movdi_internal}
     (nil))
(insn 115 114 116 3 (parallel [
            (set (reg:DI 243 [ v$13 ])
                (xor:DI (reg:DI 132 [ D.5863 ])
                    (reg:DI 373)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:167 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 373)
        (expr_list:REG_DEAD (reg:DI 132 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (xor:DI (reg:DI 132 [ D.5863 ])
                        (const_int -4732044268327596948 [0xbe5466cf34e90c6c]))
                    (nil))))))
(insn 116 115 117 3 (set (reg:DI 133 [ D.5863 ])
        (mem:DI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 208 [0xd0])) [3 state_534(D)->t64+8 S8 A64])) blake_ref.c:168 89 {*movdi_internal}
     (nil))
(insn 117 116 118 3 (set (reg:DI 374)
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:168 89 {*movdi_internal}
     (nil))
(insn 118 117 119 3 (parallel [
            (set (reg:DI 260 [ v$14 ])
                (xor:DI (reg:DI 133 [ D.5863 ])
                    (reg:DI 374)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:168 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 374)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (xor:DI (reg:DI 133 [ D.5863 ])
                    (const_int -4563226453097033507 [0xc0ac29b7c97c50dd]))
                (nil)))))
(insn 119 118 120 3 (set (reg:DI 375)
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:169 89 {*movdi_internal}
     (nil))
(insn 120 119 406 3 (parallel [
            (set (reg:DI 210 [ v$15 ])
                (xor:DI (reg:DI 133 [ D.5863 ])
                    (reg:DI 375)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:169 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 375)
        (expr_list:REG_DEAD (reg:DI 133 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (xor:DI (reg:DI 133 [ D.5863 ])
                        (const_int 4577018097722394903 [0x3f84d5b5b5470917]))
                    (nil))))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350

;; basic block 4, loop depth 0, count 0, freq 294, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 210 227 243 260
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 211 244 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  gen 	 210 227 243 260
;; live  kill	
(code_label 406 120 405 4 12 "" [1 uses])
(note 405 406 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 405 10 4 (set (reg:DI 210 [ v$15 ])
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:163 89 {*movdi_internal}
     (nil))
(insn 10 9 11 4 (set (reg:DI 260 [ v$14 ])
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:162 89 {*movdi_internal}
     (nil))
(insn 11 10 12 4 (set (reg:DI 243 [ v$13 ])
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:161 89 {*movdi_internal}
     (nil))
(insn 12 11 121 4 (set (reg:DI 227 [ v$12 ])
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350

;; basic block 5, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126
;; lr  def 	 100 208 214 225 230 241 246 258 264 269 290 292 298 300 306 308 314 316 322 324 330 332 338 340 346 348
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 210 211 227 243 244 260 262 287 291 295 299 303 307 311 315 319 323 327 331 335 339 343 347 350
;; live  gen 	 100 208 214 225 230 241 246 258 264 269 290 292 298 300 306 308 314 316 322 324 330 332 338 340 346 348
;; live  kill	
(code_label 121 12 122 5 9 "" [0 uses])
(note 122 121 123 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 13 5 (set (reg:DI 269 [ ivtmp.149 ])
        (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)) 89 {*movdi_internal}
     (nil))
(insn 13 123 14 5 (set (reg:DI 208 [ v$0 ])
        (reg:DI 119 [ v$0 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 14 13 15 5 (set (reg:DI 225 [ v$1 ])
        (reg:DI 120 [ v$1 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 15 14 16 5 (set (reg:DI 241 [ v$2 ])
        (reg:DI 121 [ v$2 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 16 15 17 5 (set (reg:DI 258 [ v$3 ])
        (reg:DI 122 [ v$3 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 17 16 18 5 (set (reg:DI 264 [ v$4 ])
        (reg:DI 123 [ v$4 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 18 17 19 5 (set (reg:DI 214 [ v$5 ])
        (reg:DI 124 [ v$5 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 19 18 20 5 (set (reg:DI 230 [ v$6 ])
        (reg:DI 125 [ v$6 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:DI 246 [ v$7 ])
        (reg:DI 126 [ v$7 ])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 21 20 22 5 (set (reg:SI 100 [ D.5861 ])
        (const_int 16 [0x10])) blake_ref.c:160 90 {*movsi_internal}
     (nil))
(insn 22 21 23 5 (set (reg:DI 348 [ D.5868 ])
        (const_int 577009281997405206 [0x801f2e2858efc16])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:DI 346 [ D.5868 ])
        (const_int 7163292796296056425 [0x636920d871574e69])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 24 23 25 5 (set (reg:DI 340 [ D.5868 ])
        (const_int -5008970055469465703 [0xba7c9045f12c7f99])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 25 24 26 5 (set (reg:DI 338 [ D.5868 ])
        (const_int 2639559389850201335 [0x24a19947b3916cf7])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:DI 332 [ D.5868 ])
        (const_int 3458046377305235383 [0x2ffd72dbd01adfb7])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 27 26 28 5 (set (reg:DI 330 [ D.5868 ])
        (const_int -5124621466747896170 [0xb8e1afed6a267e96])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 324 [ D.5868 ])
        (const_int -7919907764393346277 [0x9216d5d98979fb1b])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 322 [ D.5868 ])
        (const_int -3372901835766516308 [0xd1310ba698dfb5ac])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 316 [ D.5868 ])
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 314 [ D.5868 ])
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (set (reg:DI 308 [ D.5868 ])
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 306 [ D.5868 ])
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:DI 300 [ D.5868 ])
        (const_int -6626703657320631856 [0xa4093822299f31d0])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg:DI 298 [ D.5868 ])
        (const_int 589684135938649225 [0x82efa98ec4e6c89])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 292 [ D.5868 ])
        (const_int 2611923443488327891 [0x243f6a8885a308d3])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 37 36 355 5 (set (reg:DI 290 [ D.5868 ])
        (const_int 1376283091369227076 [0x13198a2e03707344])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350

;; basic block 6, loop depth 0, count 0, freq 9412, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU,DFS_BACK)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348
;; lr  def 	 17 [flags
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350
;; live  gen 	 17 [flags] 100 135 137 138 140 143 145 146 148 151 153 154 156 159 161 162 164 167 169 170 172 175 177 178 180 183 185 186 188 191 193 194 196 197 200 202 203 205 208 210 211 214 217 219 220 222 225 227 230 233 235 236 238 241 243 244 246 250 252 253 255 258 260 262 264 269 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439
;; live  kill	 17 [flags]
(code_label 355 37 124 6 11 "" [0 uses])
(note 124 355 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 6 (parallel [
            (set (reg:DI 376 [ D.5863 ])
                (xor:DI (reg:DI 287 [ D.5867 ])
                    (reg:DI 290 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 290 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 287 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 126 125 127 6 (parallel [
            (set (reg:DI 377 [ D.5863 ])
                (plus:DI (reg:DI 376 [ D.5863 ])
                    (reg:DI 264 [ v$4 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 376 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 6 (parallel [
            (set (reg:DI 135 [ D.5863 ])
                (plus:DI (reg:DI 377 [ D.5863 ])
                    (reg:DI 208 [ v$0 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 377 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 208 [ v$0 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 128 127 129 6 (parallel [
            (set (reg:DI 378 [ D.5863 ])
                (xor:DI (reg:DI 135 [ D.5863 ])
                    (reg:DI 227 [ v$12 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 227 [ v$12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 6 (parallel [
            (set (reg:DI 137 [ D.5863 ])
                (rotate:DI (reg:DI 378 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 378 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 6 (parallel [
            (set (reg:DI 138 [ D.5863 ])
                (plus:DI (reg:DI 137 [ D.5863 ])
                    (reg:DI 244 [ v$8 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 244 [ v$8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 131 130 132 6 (parallel [
            (set (reg:DI 379 [ D.5863 ])
                (xor:DI (reg:DI 138 [ D.5863 ])
                    (reg:DI 264 [ v$4 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 264 [ v$4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 132 131 133 6 (parallel [
            (set (reg:DI 140 [ D.5863 ])
                (rotatert:DI (reg:DI 379 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 379 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 6 (parallel [
            (set (reg:DI 380 [ D.5863 ])
                (xor:DI (reg:DI 291 [ D.5867 ])
                    (reg:DI 292 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 292 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 291 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 134 133 135 6 (parallel [
            (set (reg:DI 381 [ D.5863 ])
                (plus:DI (reg:DI 380 [ D.5863 ])
                    (reg:DI 135 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 380 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 135 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 6 (parallel [
            (set (reg:DI 143 [ D.5863 ])
                (plus:DI (reg:DI 381 [ D.5863 ])
                    (reg:DI 140 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 381 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 6 (parallel [
            (set (reg:DI 382 [ D.5863 ])
                (xor:DI (reg:DI 137 [ D.5863 ])
                    (reg:DI 143 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 6 (parallel [
            (set (reg:DI 145 [ D.5863 ])
                (rotatert:DI (reg:DI 382 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 382 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 138 137 139 6 (parallel [
            (set (reg:DI 146 [ D.5863 ])
                (plus:DI (reg:DI 138 [ D.5863 ])
                    (reg:DI 145 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 6 (parallel [
            (set (reg:DI 383 [ D.5863 ])
                (xor:DI (reg:DI 140 [ D.5863 ])
                    (reg:DI 146 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 6 (parallel [
            (set (reg:DI 148 [ D.5863 ])
                (rotatert:DI (reg:DI 383 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 383 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 141 140 142 6 (parallel [
            (set (reg:DI 384 [ D.5863 ])
                (xor:DI (reg:DI 295 [ D.5867 ])
                    (reg:DI 298 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 298 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 295 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 142 141 143 6 (parallel [
            (set (reg:DI 385 [ D.5863 ])
                (plus:DI (reg:DI 384 [ D.5863 ])
                    (reg:DI 214 [ v$5 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 384 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 6 (parallel [
            (set (reg:DI 151 [ D.5863 ])
                (plus:DI (reg:DI 385 [ D.5863 ])
                    (reg:DI 225 [ v$1 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 385 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 225 [ v$1 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 144 143 145 6 (parallel [
            (set (reg:DI 386 [ D.5863 ])
                (xor:DI (reg:DI 151 [ D.5863 ])
                    (reg:DI 243 [ v$13 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 243 [ v$13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 6 (parallel [
            (set (reg:DI 153 [ D.5863 ])
                (rotate:DI (reg:DI 386 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 386 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 146 145 147 6 (parallel [
            (set (reg:DI 154 [ D.5863 ])
                (plus:DI (reg:DI 153 [ D.5863 ])
                    (reg:DI 262 [ v$9 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 262 [ v$9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 6 (parallel [
            (set (reg:DI 387 [ D.5863 ])
                (xor:DI (reg:DI 154 [ D.5863 ])
                    (reg:DI 214 [ v$5 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 214 [ v$5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 148 147 149 6 (parallel [
            (set (reg:DI 156 [ D.5863 ])
                (rotatert:DI (reg:DI 387 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 387 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 6 (parallel [
            (set (reg:DI 388 [ D.5863 ])
                (xor:DI (reg:DI 299 [ D.5867 ])
                    (reg:DI 300 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 300 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 299 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 150 149 151 6 (parallel [
            (set (reg:DI 389 [ D.5863 ])
                (plus:DI (reg:DI 388 [ D.5863 ])
                    (reg:DI 151 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 388 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 151 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 151 150 152 6 (parallel [
            (set (reg:DI 159 [ D.5863 ])
                (plus:DI (reg:DI 389 [ D.5863 ])
                    (reg:DI 156 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 389 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 6 (parallel [
            (set (reg:DI 390 [ D.5863 ])
                (xor:DI (reg:DI 153 [ D.5863 ])
                    (reg:DI 159 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 153 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 153 152 154 6 (parallel [
            (set (reg:DI 161 [ D.5863 ])
                (rotatert:DI (reg:DI 390 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 390 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 155 6 (parallel [
            (set (reg:DI 162 [ D.5863 ])
                (plus:DI (reg:DI 154 [ D.5863 ])
                    (reg:DI 161 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 6 (parallel [
            (set (reg:DI 391 [ D.5863 ])
                (xor:DI (reg:DI 156 [ D.5863 ])
                    (reg:DI 162 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 156 155 157 6 (parallel [
            (set (reg:DI 164 [ D.5863 ])
                (rotatert:DI (reg:DI 391 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 391 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 158 6 (parallel [
            (set (reg:DI 392 [ D.5863 ])
                (xor:DI (reg:DI 303 [ D.5867 ])
                    (reg:DI 306 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 306 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 303 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 158 157 159 6 (parallel [
            (set (reg:DI 393 [ D.5863 ])
                (plus:DI (reg:DI 392 [ D.5863 ])
                    (reg:DI 230 [ v$6 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 392 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 159 158 160 6 (parallel [
            (set (reg:DI 167 [ D.5863 ])
                (plus:DI (reg:DI 393 [ D.5863 ])
                    (reg:DI 241 [ v$2 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 393 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 241 [ v$2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 160 159 161 6 (parallel [
            (set (reg:DI 394 [ D.5863 ])
                (xor:DI (reg:DI 167 [ D.5863 ])
                    (reg:DI 260 [ v$14 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 260 [ v$14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 6 (parallel [
            (set (reg:DI 169 [ D.5863 ])
                (rotate:DI (reg:DI 394 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 394 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 6 (parallel [
            (set (reg:DI 170 [ D.5863 ])
                (plus:DI (reg:DI 169 [ D.5863 ])
                    (reg:DI 211 [ v$10 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 211 [ v$10 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 6 (parallel [
            (set (reg:DI 395 [ D.5863 ])
                (xor:DI (reg:DI 170 [ D.5863 ])
                    (reg:DI 230 [ v$6 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 230 [ v$6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 6 (parallel [
            (set (reg:DI 172 [ D.5863 ])
                (rotatert:DI (reg:DI 395 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 395 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 6 (parallel [
            (set (reg:DI 396 [ D.5863 ])
                (xor:DI (reg:DI 307 [ D.5867 ])
                    (reg:DI 308 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 308 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 307 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 166 165 167 6 (parallel [
            (set (reg:DI 397 [ D.5863 ])
                (plus:DI (reg:DI 396 [ D.5863 ])
                    (reg:DI 167 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 396 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 167 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 167 166 168 6 (parallel [
            (set (reg:DI 175 [ D.5863 ])
                (plus:DI (reg:DI 397 [ D.5863 ])
                    (reg:DI 172 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 397 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 168 167 169 6 (parallel [
            (set (reg:DI 398 [ D.5863 ])
                (xor:DI (reg:DI 169 [ D.5863 ])
                    (reg:DI 175 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 6 (parallel [
            (set (reg:DI 177 [ D.5863 ])
                (rotatert:DI (reg:DI 398 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 398 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 171 6 (parallel [
            (set (reg:DI 178 [ D.5863 ])
                (plus:DI (reg:DI 170 [ D.5863 ])
                    (reg:DI 177 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 170 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 171 170 172 6 (parallel [
            (set (reg:DI 399 [ D.5863 ])
                (xor:DI (reg:DI 172 [ D.5863 ])
                    (reg:DI 178 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 172 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 172 171 173 6 (parallel [
            (set (reg:DI 180 [ D.5863 ])
                (rotatert:DI (reg:DI 399 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 399 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 6 (parallel [
            (set (reg:DI 400 [ D.5863 ])
                (xor:DI (reg:DI 311 [ D.5867 ])
                    (reg:DI 314 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 314 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 311 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 174 173 175 6 (parallel [
            (set (reg:DI 401 [ D.5863 ])
                (plus:DI (reg:DI 400 [ D.5863 ])
                    (reg:DI 246 [ v$7 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 400 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 6 (parallel [
            (set (reg:DI 183 [ D.5863 ])
                (plus:DI (reg:DI 401 [ D.5863 ])
                    (reg:DI 258 [ v$3 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 401 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 258 [ v$3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 176 175 177 6 (parallel [
            (set (reg:DI 402 [ D.5863 ])
                (xor:DI (reg:DI 183 [ D.5863 ])
                    (reg:DI 210 [ v$15 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 210 [ v$15 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 6 (parallel [
            (set (reg:DI 185 [ D.5863 ])
                (rotate:DI (reg:DI 402 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 402 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 6 (parallel [
            (set (reg:DI 186 [ D.5863 ])
                (plus:DI (reg:DI 185 [ D.5863 ])
                    (reg:DI 197 [ v$11 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 197 [ v$11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 6 (parallel [
            (set (reg:DI 403 [ D.5863 ])
                (xor:DI (reg:DI 186 [ D.5863 ])
                    (reg:DI 246 [ v$7 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 246 [ v$7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 6 (parallel [
            (set (reg:DI 188 [ D.5863 ])
                (rotatert:DI (reg:DI 403 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 403 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 6 (parallel [
            (set (reg:DI 404 [ D.5863 ])
                (xor:DI (reg:DI 315 [ D.5867 ])
                    (reg:DI 316 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 316 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 315 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 182 181 183 6 (parallel [
            (set (reg:DI 405 [ D.5863 ])
                (plus:DI (reg:DI 404 [ D.5863 ])
                    (reg:DI 183 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 404 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 183 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 183 182 184 6 (parallel [
            (set (reg:DI 191 [ D.5863 ])
                (plus:DI (reg:DI 405 [ D.5863 ])
                    (reg:DI 188 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 405 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 184 183 185 6 (parallel [
            (set (reg:DI 406 [ D.5863 ])
                (xor:DI (reg:DI 185 [ D.5863 ])
                    (reg:DI 191 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 6 (parallel [
            (set (reg:DI 193 [ D.5863 ])
                (rotatert:DI (reg:DI 406 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 406 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 6 (parallel [
            (set (reg:DI 194 [ D.5863 ])
                (plus:DI (reg:DI 186 [ D.5863 ])
                    (reg:DI 193 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 186 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 187 186 188 6 (parallel [
            (set (reg:DI 407 [ D.5863 ])
                (xor:DI (reg:DI 188 [ D.5863 ])
                    (reg:DI 194 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 188 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 188 187 189 6 (parallel [
            (set (reg:DI 196 [ D.5863 ])
                (rotatert:DI (reg:DI 407 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 407 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 6 (parallel [
            (set (reg:DI 408 [ D.5863 ])
                (xor:DI (reg:DI 319 [ D.5867 ])
                    (reg:DI 322 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 322 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 319 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 190 189 191 6 (parallel [
            (set (reg:DI 409 [ D.5863 ])
                (plus:DI (reg:DI 408 [ D.5863 ])
                    (reg:DI 143 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 408 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 143 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 191 190 192 6 (parallel [
            (set (reg:DI 200 [ D.5863 ])
                (plus:DI (reg:DI 409 [ D.5863 ])
                    (reg:DI 164 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 409 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 192 191 193 6 (parallel [
            (set (reg:DI 410 [ D.5863 ])
                (xor:DI (reg:DI 193 [ D.5863 ])
                    (reg:DI 200 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 193 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 6 (parallel [
            (set (reg:DI 202 [ D.5863 ])
                (rotate:DI (reg:DI 410 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 410 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 194 193 195 6 (parallel [
            (set (reg:DI 203 [ D.5863 ])
                (plus:DI (reg:DI 178 [ D.5863 ])
                    (reg:DI 202 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 178 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 194 196 6 (parallel [
            (set (reg:DI 411 [ D.5863 ])
                (xor:DI (reg:DI 164 [ D.5863 ])
                    (reg:DI 203 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 164 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 196 195 197 6 (parallel [
            (set (reg:DI 205 [ D.5863 ])
                (rotatert:DI (reg:DI 411 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 411 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 6 (parallel [
            (set (reg:DI 412 [ D.5863 ])
                (xor:DI (reg:DI 323 [ D.5867 ])
                    (reg:DI 324 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 324 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 323 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 198 197 199 6 (parallel [
            (set (reg:DI 413 [ D.5863 ])
                (plus:DI (reg:DI 412 [ D.5863 ])
                    (reg:DI 200 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 412 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 200 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 199 198 200 6 (parallel [
            (set (reg:DI 208 [ v$0 ])
                (plus:DI (reg:DI 413 [ D.5863 ])
                    (reg:DI 205 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 413 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 200 199 201 6 (parallel [
            (set (reg:DI 414 [ D.5863 ])
                (xor:DI (reg:DI 202 [ D.5863 ])
                    (reg:DI 208 [ v$0 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 202 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 202 6 (parallel [
            (set (reg:DI 210 [ v$15 ])
                (rotatert:DI (reg:DI 414 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 414 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 201 203 6 (parallel [
            (set (reg:DI 211 [ v$10 ])
                (plus:DI (reg:DI 203 [ D.5863 ])
                    (reg:DI 210 [ v$15 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 203 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 6 (parallel [
            (set (reg:DI 415 [ D.5863 ])
                (xor:DI (reg:DI 205 [ D.5863 ])
                    (reg:DI 211 [ v$10 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 205 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 204 203 205 6 (parallel [
            (set (reg:DI 214 [ v$5 ])
                (rotatert:DI (reg:DI 415 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 415 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 205 204 206 6 (parallel [
            (set (reg:DI 416 [ D.5863 ])
                (xor:DI (reg:DI 327 [ D.5867 ])
                    (reg:DI 330 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 330 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 327 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 206 205 207 6 (parallel [
            (set (reg:DI 417 [ D.5863 ])
                (plus:DI (reg:DI 416 [ D.5863 ])
                    (reg:DI 159 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 416 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 159 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 207 206 208 6 (parallel [
            (set (reg:DI 217 [ D.5863 ])
                (plus:DI (reg:DI 417 [ D.5863 ])
                    (reg:DI 180 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 417 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 208 207 209 6 (parallel [
            (set (reg:DI 418 [ D.5863 ])
                (xor:DI (reg:DI 145 [ D.5863 ])
                    (reg:DI 217 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 145 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 209 208 210 6 (parallel [
            (set (reg:DI 219 [ D.5863 ])
                (rotate:DI (reg:DI 418 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 418 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 210 209 211 6 (parallel [
            (set (reg:DI 220 [ D.5863 ])
                (plus:DI (reg:DI 194 [ D.5863 ])
                    (reg:DI 219 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 194 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 211 210 212 6 (parallel [
            (set (reg:DI 419 [ D.5863 ])
                (xor:DI (reg:DI 180 [ D.5863 ])
                    (reg:DI 220 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 180 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 212 211 213 6 (parallel [
            (set (reg:DI 222 [ D.5863 ])
                (rotatert:DI (reg:DI 419 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 419 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 213 212 214 6 (parallel [
            (set (reg:DI 420 [ D.5863 ])
                (xor:DI (reg:DI 331 [ D.5867 ])
                    (reg:DI 332 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 332 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 331 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 214 213 215 6 (parallel [
            (set (reg:DI 421 [ D.5863 ])
                (plus:DI (reg:DI 420 [ D.5863 ])
                    (reg:DI 217 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 420 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 217 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 215 214 216 6 (parallel [
            (set (reg:DI 225 [ v$1 ])
                (plus:DI (reg:DI 421 [ D.5863 ])
                    (reg:DI 222 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 421 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 216 215 217 6 (parallel [
            (set (reg:DI 422 [ D.5863 ])
                (xor:DI (reg:DI 219 [ D.5863 ])
                    (reg:DI 225 [ v$1 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 219 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 217 216 218 6 (parallel [
            (set (reg:DI 227 [ v$12 ])
                (rotatert:DI (reg:DI 422 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 422 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 219 6 (parallel [
            (set (reg:DI 197 [ v$11 ])
                (plus:DI (reg:DI 220 [ D.5863 ])
                    (reg:DI 227 [ v$12 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 220 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 219 218 220 6 (parallel [
            (set (reg:DI 423 [ D.5863 ])
                (xor:DI (reg:DI 222 [ D.5863 ])
                    (reg:DI 197 [ v$11 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 222 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 221 6 (parallel [
            (set (reg:DI 230 [ v$6 ])
                (rotatert:DI (reg:DI 423 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 423 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 6 (parallel [
            (set (reg:DI 424 [ D.5863 ])
                (xor:DI (reg:DI 335 [ D.5867 ])
                    (reg:DI 338 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 338 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 335 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 222 221 223 6 (parallel [
            (set (reg:DI 425 [ D.5863 ])
                (plus:DI (reg:DI 424 [ D.5863 ])
                    (reg:DI 175 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 424 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 175 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 223 222 224 6 (parallel [
            (set (reg:DI 233 [ D.5863 ])
                (plus:DI (reg:DI 425 [ D.5863 ])
                    (reg:DI 196 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 425 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 6 (parallel [
            (set (reg:DI 426 [ D.5863 ])
                (xor:DI (reg:DI 161 [ D.5863 ])
                    (reg:DI 233 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 161 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 225 224 226 6 (parallel [
            (set (reg:DI 235 [ D.5863 ])
                (rotate:DI (reg:DI 426 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 426 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 226 225 227 6 (parallel [
            (set (reg:DI 236 [ D.5863 ])
                (plus:DI (reg:DI 146 [ D.5863 ])
                    (reg:DI 235 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 227 226 228 6 (parallel [
            (set (reg:DI 427 [ D.5863 ])
                (xor:DI (reg:DI 196 [ D.5863 ])
                    (reg:DI 236 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 196 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 228 227 229 6 (parallel [
            (set (reg:DI 238 [ D.5863 ])
                (rotatert:DI (reg:DI 427 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 427 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 229 228 230 6 (parallel [
            (set (reg:DI 428 [ D.5863 ])
                (xor:DI (reg:DI 339 [ D.5867 ])
                    (reg:DI 340 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 340 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 339 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 230 229 231 6 (parallel [
            (set (reg:DI 429 [ D.5863 ])
                (plus:DI (reg:DI 428 [ D.5863 ])
                    (reg:DI 233 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 428 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 233 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 231 230 232 6 (parallel [
            (set (reg:DI 241 [ v$2 ])
                (plus:DI (reg:DI 429 [ D.5863 ])
                    (reg:DI 238 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 429 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 232 231 233 6 (parallel [
            (set (reg:DI 430 [ D.5863 ])
                (xor:DI (reg:DI 235 [ D.5863 ])
                    (reg:DI 241 [ v$2 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 235 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 6 (parallel [
            (set (reg:DI 243 [ v$13 ])
                (rotatert:DI (reg:DI 430 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 430 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 235 6 (parallel [
            (set (reg:DI 244 [ v$8 ])
                (plus:DI (reg:DI 236 [ D.5863 ])
                    (reg:DI 243 [ v$13 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 236 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 235 234 236 6 (parallel [
            (set (reg:DI 431 [ D.5863 ])
                (xor:DI (reg:DI 238 [ D.5863 ])
                    (reg:DI 244 [ v$8 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 238 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 236 235 237 6 (parallel [
            (set (reg:DI 246 [ v$7 ])
                (rotatert:DI (reg:DI 431 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 431 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 237 236 238 6 (parallel [
            (set (reg:DI 432 [ D.5863 ])
                (xor:DI (reg:DI 343 [ D.5867 ])
                    (reg:DI 346 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 346 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 343 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 238 237 239 6 (parallel [
            (set (reg:DI 433 [ D.5863 ])
                (plus:DI (reg:DI 432 [ D.5863 ])
                    (reg:DI 191 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 432 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 191 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 239 238 240 6 (parallel [
            (set (reg:DI 250 [ D.5863 ])
                (plus:DI (reg:DI 433 [ D.5863 ])
                    (reg:DI 148 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 433 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 240 239 241 6 (parallel [
            (set (reg:DI 434 [ D.5863 ])
                (xor:DI (reg:DI 177 [ D.5863 ])
                    (reg:DI 250 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 177 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 241 240 242 6 (parallel [
            (set (reg:DI 252 [ D.5863 ])
                (rotate:DI (reg:DI 434 [ D.5863 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 588 {*rotldi3_1}
     (expr_list:REG_DEAD (reg:DI 434 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 242 241 243 6 (parallel [
            (set (reg:DI 253 [ D.5863 ])
                (plus:DI (reg:DI 162 [ D.5863 ])
                    (reg:DI 252 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 6 (parallel [
            (set (reg:DI 435 [ D.5863 ])
                (xor:DI (reg:DI 148 [ D.5863 ])
                    (reg:DI 253 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 148 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 244 243 245 6 (parallel [
            (set (reg:DI 255 [ D.5863 ])
                (rotatert:DI (reg:DI 435 [ D.5863 ])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 435 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 245 244 246 6 (parallel [
            (set (reg:DI 436 [ D.5863 ])
                (xor:DI (reg:DI 347 [ D.5867 ])
                    (reg:DI 348 [ D.5868 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 348 [ D.5868 ])
        (expr_list:REG_DEAD (reg:DI 347 [ D.5867 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 246 245 247 6 (parallel [
            (set (reg:DI 437 [ D.5863 ])
                (plus:DI (reg:DI 436 [ D.5863 ])
                    (reg:DI 250 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 436 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 250 [ D.5863 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 247 246 248 6 (parallel [
            (set (reg:DI 258 [ v$3 ])
                (plus:DI (reg:DI 437 [ D.5863 ])
                    (reg:DI 255 [ D.5863 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 437 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 248 247 249 6 (parallel [
            (set (reg:DI 438 [ D.5863 ])
                (xor:DI (reg:DI 252 [ D.5863 ])
                    (reg:DI 258 [ v$3 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 252 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 6 (parallel [
            (set (reg:DI 260 [ v$14 ])
                (rotatert:DI (reg:DI 438 [ D.5863 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 438 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 250 249 251 6 (parallel [
            (set (reg:DI 262 [ v$9 ])
                (plus:DI (reg:DI 253 [ D.5863 ])
                    (reg:DI 260 [ v$14 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 253 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 251 250 252 6 (parallel [
            (set (reg:DI 439 [ D.5863 ])
                (xor:DI (reg:DI 255 [ D.5863 ])
                    (reg:DI 262 [ v$9 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 255 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 6 (parallel [
            (set (reg:DI 264 [ v$4 ])
                (rotatert:DI (reg:DI 439 [ D.5863 ])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_DEAD (reg:DI 439 [ D.5863 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 6 (parallel [
            (set (reg:SI 100 [ D.5861 ])
                (plus:SI (reg:SI 100 [ D.5861 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 254 253 255 6 (parallel [
            (set (reg:DI 269 [ ivtmp.149 ])
                (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 256 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.5861 ])
            (const_int 0 [0]))) blake_ref.c:173 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 256 255 257 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 358)
            (pc))) blake_ref.c:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 588 (nil)))
 -> 358)
;;  succ:       7 [94.1%]  (FALLTHRU)
;;              8 [5.9%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 350

;; basic block 7, loop depth 0, count 0, freq 8859, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [94.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u371(6){ }u372(7){ }u373(16){ }u374(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 269
;; lr  def 	 286 287 289 290 291 292 294 295 297 298 299 300 302 303 305 306 307 308 310 311 313 314 315 316 318 319 321 322 323 324 326 327 329 330 331 332 334 335 337 338 339 340 342 343 345 346 347 348 440 441 442 446 448 452 454 458 460 464 466 470 472 476 478 482 484
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 350
;; live  gen 	 286 287 289 290 291 292 294 295 297 298 299 300 302 303 305 306 307 308 310 311 313 314 315 316 318 319 321 322 323 324 326 327 329 330 331 332 334 335 337 338 339 340 342 343 345 346 347 348 440 441 442 446 448 452 454 458 460 464 466 470 472 476 478 482 484
;; live  kill	
(note 257 256 259 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 259 257 260 7 (set (reg:SI 286 [ D.5864 ])
        (zero_extend:SI (mem:QI (reg:DI 269 [ ivtmp.149 ]) [0 MEM[base: _802, offset: 0B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 260 259 261 7 (set (reg:DI 440 [ D.5864 ])
        (sign_extend:DI (reg:SI 286 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 286 [ D.5864 ])
        (nil)))
(insn 261 260 262 7 (set (reg:DI 287 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 262 261 263 7 (set (reg:SI 289 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 1 [0x1])) [0 MEM[base: _802, offset: 1B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 263 262 264 7 (set (reg/f:DI 441)
        (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) 89 {*movdi_internal}
     (nil))
(insn 264 263 265 7 (set (reg:DI 442 [ D.5864 ])
        (sign_extend:DI (reg:SI 289 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 289 [ D.5864 ])
        (nil)))
(insn 265 264 267 7 (set (reg:DI 290 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 267 265 270 7 (set (reg:DI 291 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 442 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 442 [ D.5864 ])
        (nil)))
(insn 270 267 271 7 (set (reg:DI 292 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 440 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 440 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 271 270 272 7 (set (reg:SI 294 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 2 [0x2])) [0 MEM[base: _802, offset: 2B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 272 271 273 7 (set (reg:DI 446 [ D.5864 ])
        (sign_extend:DI (reg:SI 294 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 294 [ D.5864 ])
        (nil)))
(insn 273 272 274 7 (set (reg:DI 295 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 274 273 276 7 (set (reg:SI 297 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 3 [0x3])) [0 MEM[base: _802, offset: 3B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 276 274 277 7 (set (reg:DI 448 [ D.5864 ])
        (sign_extend:DI (reg:SI 297 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 297 [ D.5864 ])
        (nil)))
(insn 277 276 279 7 (set (reg:DI 298 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 279 277 282 7 (set (reg:DI 299 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 448 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 448 [ D.5864 ])
        (nil)))
(insn 282 279 283 7 (set (reg:DI 300 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 446 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 446 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 283 282 284 7 (set (reg:SI 302 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 4 [0x4])) [0 MEM[base: _802, offset: 4B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 284 283 285 7 (set (reg:DI 452 [ D.5864 ])
        (sign_extend:DI (reg:SI 302 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 302 [ D.5864 ])
        (nil)))
(insn 285 284 286 7 (set (reg:DI 303 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 286 285 288 7 (set (reg:SI 305 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 5 [0x5])) [0 MEM[base: _802, offset: 5B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 288 286 289 7 (set (reg:DI 454 [ D.5864 ])
        (sign_extend:DI (reg:SI 305 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 305 [ D.5864 ])
        (nil)))
(insn 289 288 291 7 (set (reg:DI 306 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 291 289 294 7 (set (reg:DI 307 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 454 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 454 [ D.5864 ])
        (nil)))
(insn 294 291 295 7 (set (reg:DI 308 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 452 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 452 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 295 294 296 7 (set (reg:SI 310 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 6 [0x6])) [0 MEM[base: _802, offset: 6B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 296 295 297 7 (set (reg:DI 458 [ D.5864 ])
        (sign_extend:DI (reg:SI 310 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 310 [ D.5864 ])
        (nil)))
(insn 297 296 298 7 (set (reg:DI 311 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 298 297 300 7 (set (reg:SI 313 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 7 [0x7])) [0 MEM[base: _802, offset: 7B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 300 298 301 7 (set (reg:DI 460 [ D.5864 ])
        (sign_extend:DI (reg:SI 313 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 313 [ D.5864 ])
        (nil)))
(insn 301 300 303 7 (set (reg:DI 314 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 303 301 306 7 (set (reg:DI 315 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 460 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 460 [ D.5864 ])
        (nil)))
(insn 306 303 307 7 (set (reg:DI 316 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 458 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 458 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 307 306 308 7 (set (reg:SI 318 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 8 [0x8])) [0 MEM[base: _802, offset: 8B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 308 307 309 7 (set (reg:DI 464 [ D.5864 ])
        (sign_extend:DI (reg:SI 318 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 318 [ D.5864 ])
        (nil)))
(insn 309 308 310 7 (set (reg:DI 319 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 310 309 312 7 (set (reg:SI 321 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 9 [0x9])) [0 MEM[base: _802, offset: 9B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 312 310 313 7 (set (reg:DI 466 [ D.5864 ])
        (sign_extend:DI (reg:SI 321 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 321 [ D.5864 ])
        (nil)))
(insn 313 312 315 7 (set (reg:DI 322 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 315 313 318 7 (set (reg:DI 323 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 466 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 466 [ D.5864 ])
        (nil)))
(insn 318 315 319 7 (set (reg:DI 324 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 464 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 464 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 319 318 320 7 (set (reg:SI 326 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 10 [0xa])) [0 MEM[base: _802, offset: 10B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 320 319 321 7 (set (reg:DI 470 [ D.5864 ])
        (sign_extend:DI (reg:SI 326 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 326 [ D.5864 ])
        (nil)))
(insn 321 320 322 7 (set (reg:DI 327 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 322 321 324 7 (set (reg:SI 329 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 11 [0xb])) [0 MEM[base: _802, offset: 11B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 324 322 325 7 (set (reg:DI 472 [ D.5864 ])
        (sign_extend:DI (reg:SI 329 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 329 [ D.5864 ])
        (nil)))
(insn 325 324 327 7 (set (reg:DI 330 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 327 325 330 7 (set (reg:DI 331 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 472 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 472 [ D.5864 ])
        (nil)))
(insn 330 327 331 7 (set (reg:DI 332 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 470 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 470 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 331 330 332 7 (set (reg:SI 334 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 12 [0xc])) [0 MEM[base: _802, offset: 12B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 332 331 333 7 (set (reg:DI 476 [ D.5864 ])
        (sign_extend:DI (reg:SI 334 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 334 [ D.5864 ])
        (nil)))
(insn 333 332 334 7 (set (reg:DI 335 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 334 333 336 7 (set (reg:SI 337 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 13 [0xd])) [0 MEM[base: _802, offset: 13B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 336 334 337 7 (set (reg:DI 478 [ D.5864 ])
        (sign_extend:DI (reg:SI 337 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 337 [ D.5864 ])
        (nil)))
(insn 337 336 339 7 (set (reg:DI 338 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 339 337 342 7 (set (reg:DI 339 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 478 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 478 [ D.5864 ])
        (nil)))
(insn 342 339 343 7 (set (reg:DI 340 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 476 [ D.5864 ])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 476 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 343 342 344 7 (set (reg:SI 342 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 14 [0xe])) [0 MEM[base: _802, offset: 14B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 344 343 345 7 (set (reg:DI 482 [ D.5864 ])
        (sign_extend:DI (reg:SI 342 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 342 [ D.5864 ])
        (nil)))
(insn 345 344 346 7 (set (reg:DI 343 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 346 345 348 7 (set (reg:SI 345 [ D.5864 ])
        (zero_extend:SI (mem:QI (plus:DI (reg:DI 269 [ ivtmp.149 ])
                    (const_int 15 [0xf])) [0 MEM[base: _802, offset: 15B]+0 S1 A8]))) 138 {*zero_extendqisi2}
     (nil))
(insn 348 346 349 7 (set (reg:DI 484 [ D.5864 ])
        (sign_extend:DI (reg:SI 345 [ D.5864 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 345 [ D.5864 ])
        (nil)))
(insn 349 348 351 7 (set (reg:DI 346 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 351 349 354 7 (set (reg:DI 347 [ D.5867 ])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 484 [ D.5864 ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 20 frame))
                (const_int -128 [0xffffffffffffff80])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 484 [ D.5864 ])
        (nil)))
(insn 354 351 358 7 (set (reg:DI 348 [ D.5868 ])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 441)) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 482 [ D.5864 ])
        (expr_list:REG_DEAD (reg/f:DI 441)
            (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 482 [ D.5864 ])
                            (const_int 8 [0x8]))
                        (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
                (nil)))))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 269 287 290 291 292 295 298 299 300 303 306 307 308 311 314 315 316 319 322 323 324 327 330 331 332 335 338 339 340 343 346 347 348 350

;; basic block 8, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [5.9%]  (LOOP_EXIT)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u503(6){ }u504(7){ }u505(16){ }u506(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 350
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 350
;; lr  def 	 0 [ax] 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 506 507 508 509 510 511 513 514 515
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 119 120 121 122 123 124 125 126 127 128 129 130 197 208 210 211 214 225 227 230 241 243 244 246 258 260 262 264 350
;; live  gen 	 0 [ax] 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 506 507 508 509 510 511 513 514 515
;; live  kill	
(code_label 358 354 359 8 10 "" [1 uses])
(note 359 358 361 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 361 359 362 8 (set (reg:V2DI 488 [ vect_cst_.130 ])
        (vec_concat:V2DI (reg:DI 244 [ v$8 ])
            (reg:DI 262 [ v$9 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 262 [ v$9 ])
        (expr_list:REG_DEAD (reg:DI 244 [ v$8 ])
            (nil))))
(insn 362 361 363 8 (set (reg:V2DI 489 [ vect_cst_.125 ])
        (vec_concat:V2DI (reg:DI 208 [ v$0 ])
            (reg:DI 225 [ v$1 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 225 [ v$1 ])
        (expr_list:REG_DEAD (reg:DI 208 [ v$0 ])
            (nil))))
(insn 363 362 364 8 (set (reg:V2DI 490 [ D.5862 ])
        (xor:V2DI (reg:V2DI 488 [ vect_cst_.130 ])
            (reg:V2DI 489 [ vect_cst_.125 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 489 [ vect_cst_.125 ])
        (expr_list:REG_DEAD (reg:V2DI 488 [ vect_cst_.130 ])
            (nil))))
(insn 364 363 365 8 (set (reg:V2DI 491 [ vect_cst_.120 ])
        (vec_concat:V2DI (reg:DI 127 [ D.5863 ])
            (reg:DI 128 [ D.5863 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 128 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 127 [ D.5863 ])
            (nil))))
(insn 365 364 366 8 (set (reg:V2DI 492 [ D.5862 ])
        (xor:V2DI (reg:V2DI 490 [ D.5862 ])
            (reg:V2DI 491 [ vect_cst_.120 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 490 [ D.5862 ])
        (nil)))
(insn 366 365 367 8 (set (reg:V2DI 493 [ vect_cst_.116 ])
        (vec_concat:V2DI (reg:DI 119 [ v$0 ])
            (reg:DI 120 [ v$1 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 120 [ v$1 ])
        (expr_list:REG_DEAD (reg:DI 119 [ v$0 ])
            (nil))))
(insn 367 366 368 8 (set (reg:V2DI 494 [ vect__785.126 ])
        (xor:V2DI (reg:V2DI 492 [ D.5862 ])
            (reg:V2DI 493 [ vect_cst_.116 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 493 [ vect_cst_.116 ])
        (expr_list:REG_DEAD (reg:V2DI 492 [ D.5862 ])
            (nil))))
(insn 368 367 370 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 136 [0x88])) [3 MEM[(long long unsigned int *)state_534(D) + 136B]+0 S16 A64])
        (unspec:V16QI [
                (subreg:V16QI (reg:V2DI 494 [ vect__785.126 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V2DI 494 [ vect__785.126 ])
        (nil)))
(insn 370 368 371 8 (set (reg:V2DI 495 [ vect_cst_.124 ])
        (vec_concat:V2DI (reg:DI 241 [ v$2 ])
            (reg:DI 258 [ v$3 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 258 [ v$3 ])
        (expr_list:REG_DEAD (reg:DI 241 [ v$2 ])
            (nil))))
(insn 371 370 372 8 (set (reg:V2DI 496 [ vect_cst_.129 ])
        (vec_concat:V2DI (reg:DI 211 [ v$10 ])
            (reg:DI 197 [ v$11 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 211 [ v$10 ])
        (expr_list:REG_DEAD (reg:DI 197 [ v$11 ])
            (nil))))
(insn 372 371 373 8 (set (reg:V2DI 497 [ D.5862 ])
        (xor:V2DI (reg:V2DI 495 [ vect_cst_.124 ])
            (reg:V2DI 496 [ vect_cst_.129 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 496 [ vect_cst_.129 ])
        (expr_list:REG_DEAD (reg:V2DI 495 [ vect_cst_.124 ])
            (nil))))
(insn 373 372 374 8 (set (reg:V2DI 498 [ vect_cst_.119 ])
        (vec_concat:V2DI (reg:DI 129 [ D.5863 ])
            (reg:DI 130 [ D.5863 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 130 [ D.5863 ])
        (expr_list:REG_DEAD (reg:DI 129 [ D.5863 ])
            (nil))))
(insn 374 373 375 8 (set (reg:V2DI 499 [ D.5862 ])
        (xor:V2DI (reg:V2DI 497 [ D.5862 ])
            (reg:V2DI 498 [ vect_cst_.119 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 497 [ D.5862 ])
        (nil)))
(insn 375 374 376 8 (set (reg:V2DI 500 [ vect_cst_.115 ])
        (vec_concat:V2DI (reg:DI 121 [ v$2 ])
            (reg:DI 122 [ v$3 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 122 [ v$3 ])
        (expr_list:REG_DEAD (reg:DI 121 [ v$2 ])
            (nil))))
(insn 376 375 377 8 (set (reg:V2DI 501 [ vect__785.126 ])
        (xor:V2DI (reg:V2DI 499 [ D.5862 ])
            (reg:V2DI 500 [ vect_cst_.115 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 500 [ vect_cst_.115 ])
        (expr_list:REG_DEAD (reg:V2DI 499 [ D.5862 ])
            (nil))))
(insn 377 376 379 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 152 [0x98])) [3 MEM[(long long unsigned int *)state_534(D) + 152B]+0 S16 A64])
        (unspec:V16QI [
                (subreg:V16QI (reg:V2DI 501 [ vect__785.126 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V2DI 501 [ vect__785.126 ])
        (nil)))
(insn 379 377 380 8 (set (reg:V2DI 502 [ vect_cst_.123 ])
        (vec_concat:V2DI (reg:DI 227 [ v$12 ])
            (reg:DI 243 [ v$13 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 243 [ v$13 ])
        (expr_list:REG_DEAD (reg:DI 227 [ v$12 ])
            (nil))))
(insn 380 379 381 8 (set (reg:V2DI 503 [ vect_cst_.128 ])
        (vec_concat:V2DI (reg:DI 264 [ v$4 ])
            (reg:DI 214 [ v$5 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 264 [ v$4 ])
        (expr_list:REG_DEAD (reg:DI 214 [ v$5 ])
            (nil))))
(insn 381 380 383 8 (set (reg:V2DI 504 [ D.5862 ])
        (xor:V2DI (reg:V2DI 502 [ vect_cst_.123 ])
            (reg:V2DI 503 [ vect_cst_.128 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 503 [ vect_cst_.128 ])
        (expr_list:REG_DEAD (reg:V2DI 502 [ vect_cst_.123 ])
            (nil))))
(insn 383 381 384 8 (set (reg:V2DI 506 [ D.5862 ])
        (xor:V2DI (reg:V2DI 504 [ D.5862 ])
            (reg:V2DI 491 [ vect_cst_.120 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 504 [ D.5862 ])
        (expr_list:REG_DEAD (reg:V2DI 491 [ vect_cst_.120 ])
            (nil))))
(insn 384 383 385 8 (set (reg:V2DI 507 [ vect_cst_.114 ])
        (vec_concat:V2DI (reg:DI 123 [ v$4 ])
            (reg:DI 124 [ v$5 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 124 [ v$5 ])
        (expr_list:REG_DEAD (reg:DI 123 [ v$4 ])
            (nil))))
(insn 385 384 386 8 (set (reg:V2DI 508 [ vect__785.126 ])
        (xor:V2DI (reg:V2DI 506 [ D.5862 ])
            (reg:V2DI 507 [ vect_cst_.114 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 507 [ vect_cst_.114 ])
        (expr_list:REG_DEAD (reg:V2DI 506 [ D.5862 ])
            (nil))))
(insn 386 385 388 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 168 [0xa8])) [3 MEM[(long long unsigned int *)state_534(D) + 168B]+0 S16 A64])
        (unspec:V16QI [
                (subreg:V16QI (reg:V2DI 508 [ vect__785.126 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V2DI 508 [ vect__785.126 ])
        (nil)))
(insn 388 386 389 8 (set (reg:V2DI 509 [ vect_cst_.127 ])
        (vec_concat:V2DI (reg:DI 230 [ v$6 ])
            (reg:DI 246 [ v$7 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 246 [ v$7 ])
        (expr_list:REG_DEAD (reg:DI 230 [ v$6 ])
            (nil))))
(insn 389 388 390 8 (set (reg:V2DI 510 [ vect_cst_.122 ])
        (vec_concat:V2DI (reg:DI 260 [ v$14 ])
            (reg:DI 210 [ v$15 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 260 [ v$14 ])
        (expr_list:REG_DEAD (reg:DI 210 [ v$15 ])
            (nil))))
(insn 390 389 392 8 (set (reg:V2DI 511 [ D.5862 ])
        (xor:V2DI (reg:V2DI 509 [ vect_cst_.127 ])
            (reg:V2DI 510 [ vect_cst_.122 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 510 [ vect_cst_.122 ])
        (expr_list:REG_DEAD (reg:V2DI 509 [ vect_cst_.127 ])
            (nil))))
(insn 392 390 393 8 (set (reg:V2DI 513 [ D.5862 ])
        (xor:V2DI (reg:V2DI 511 [ D.5862 ])
            (reg:V2DI 498 [ vect_cst_.119 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 511 [ D.5862 ])
        (expr_list:REG_DEAD (reg:V2DI 498 [ vect_cst_.119 ])
            (nil))))
(insn 393 392 394 8 (set (reg:V2DI 514 [ vect_cst_.113 ])
        (vec_concat:V2DI (reg:DI 125 [ v$6 ])
            (reg:DI 126 [ v$7 ]))) 3673 {vec_concatv2di}
     (expr_list:REG_DEAD (reg:DI 126 [ v$7 ])
        (expr_list:REG_DEAD (reg:DI 125 [ v$6 ])
            (nil))))
(insn 394 393 395 8 (set (reg:V2DI 515 [ vect__785.126 ])
        (xor:V2DI (reg:V2DI 513 [ D.5862 ])
            (reg:V2DI 514 [ vect_cst_.113 ]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 514 [ vect_cst_.113 ])
        (expr_list:REG_DEAD (reg:V2DI 513 [ D.5862 ])
            (nil))))
(insn 395 394 400 8 (set (mem:V16QI (plus:DI (reg/v/f:DI 350 [ state ])
                (const_int 184 [0xb8])) [3 MEM[(long long unsigned int *)state_534(D) + 184B]+0 S16 A64])
        (unspec:V16QI [
                (subreg:V16QI (reg:V2DI 515 [ vect__785.126 ]) 0)
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V2DI 515 [ vect__785.126 ])
        (expr_list:REG_DEAD (reg/v/f:DI 350 [ state ])
            (nil))))
(insn 400 395 401 8 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) blake_ref.c:199 90 {*movsi_internal}
     (nil))
(insn 401 400 0 8 (use (reg/i:SI 0 ax)) blake_ref.c:199 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Update32.part.0 (Update32.part.0, funcdef_no=22, decl_uid=5562, cgraph_uid=0, symbol_order=31)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
        (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)

   after canon_rtx address: (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=34
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
        (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib store [52..56)
mems_found = 1, cannot_delete = false

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)

   after canon_rtx address: (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=61
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
        (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=67
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib store [52..56)
mems_found = 1, cannot_delete = false

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=72
  mem: (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)

   after canon_rtx address: (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
  mem: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])

   after cselib_expand address: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 122 [ data ]) [0  S4 A8])
mems_found = 0, cannot_delete = true

**scanning insn=97
  mem: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])

   after cselib_expand address: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
  mem: (plus:DI (reg/f:DI 157)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 157)
    (const_int -8 [0xfffffffffffffff8]))

   after cselib_expand address: (plus:DI (reg:DI 156)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg:DI 156)
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=7:253 offset = -4
 processing cselib load mem:(mem:SI (plus:DI (reg/f:DI 157)
        (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
 processing cselib load against insn 97
removing from active insn=97 has store
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (plus:DI (reg/f:DI 154)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 154)
    (const_int -8 [0xfffffffffffffff8]))

   after cselib_expand address: (plus:DI (reg:DI 153)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg:DI 153)
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=5:254 offset = -4
 processing cselib store [-4..0)
mems_found = 1, cannot_delete = false

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=111
  mem: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])

   after cselib_expand address: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:QI (reg/v/f:DI 122 [ data ]) [0  S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=112
  mem: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])

   after cselib_expand address: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..1)
mems_found = 1, cannot_delete = false

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (plus:DI (reg/f:DI 166)
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (reg/f:DI 166)
    (const_int -2 [0xfffffffffffffffe]))

   after cselib_expand address: (plus:DI (plus:DI (reg/v/f:DI 122 [ data ])
        (reg:DI 162 [ D.5880 ]))
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 122 [ data ])
        (reg:DI 162 [ D.5880 ]))
    (const_int -2 [0xfffffffffffffffe]))
  varying cselib base=6:255 offset = -2
 processing cselib load mem:(mem:HI (plus:DI (reg/f:DI 166)
        (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
mems_found = 0, cannot_delete = true

**scanning insn=123
  mem: (plus:DI (reg/f:DI 163)
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (reg/f:DI 163)
    (const_int -2 [0xfffffffffffffffe]))

   after cselib_expand address: (plus:DI (plus:DI (reg:DI 146 [ D.5883 ])
        (reg:DI 162 [ D.5880 ]))
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (plus:DI (reg:DI 146 [ D.5883 ])
        (reg:DI 162 [ D.5880 ]))
    (const_int -2 [0xfffffffffffffffe]))
  varying cselib base=4:253 offset = -2
 processing cselib store [-2..0)
mems_found = 1, cannot_delete = false

**scanning insn=128
  mem: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])

   after cselib_expand address: (reg/v/f:DI 122 [ data ])

   after canon_rtx address: (reg/v/f:DI 122 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:DI (reg/v/f:DI 122 [ data ]) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=129
  mem: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])

   after cselib_expand address: (reg:DI 146 [ D.5883 ])

   after canon_rtx address: (reg:DI 146 [ D.5883 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
  mem: (plus:DI (reg/f:DI 174)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 174)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg:DI 173)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg:DI 173)
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=7:253 offset = -8
 processing cselib load mem:(mem:DI (plus:DI (reg/f:DI 174)
        (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
 processing cselib load against insn 129
removing from active insn=129 has store
mems_found = 0, cannot_delete = true

**scanning insn=137
  mem: (plus:DI (reg/f:DI 171)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 171)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg:DI 170)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg:DI 170)
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=5:254 offset = -8
 processing cselib store [-8..0)
mems_found = 1, cannot_delete = false

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=150
  mem: (plus:DI (reg/f:DI 149 [ data ])
    (reg:DI 179))

   after canon_rtx address: (plus:DI (reg/f:DI 149 [ data ])
    (reg:DI 179))

   after cselib_expand address: (plus:DI (zero_extend:DI (reg:SI 177))
    (reg/f:DI 149 [ data ]))

   after canon_rtx address: (plus:DI (zero_extend:DI (reg:SI 177))
    (reg/f:DI 149 [ data ]))
  varying cselib base=4:194 offset = 0
 processing cselib load mem:(mem:DI (plus:DI (reg/f:DI 149 [ data ])
        (reg:DI 179)) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=151
  mem: (plus:DI (reg/f:DI 176)
    (reg:DI 179))

   after canon_rtx address: (plus:DI (reg/f:DI 176)
    (reg:DI 179))

   after cselib_expand address: (plus:DI (zero_extend:DI (reg:SI 177))
    (reg/f:DI 176))

   after canon_rtx address: (plus:DI (zero_extend:DI (reg:SI 177))
    (reg/f:DI 176))
  varying cselib base=6:196 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=162
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=5:5 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=167
  mem: (plus:DI (reg/v/f:DI 122 [ data ])
    (reg:DI 107 [ D.5880 ]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 122 [ data ])
    (reg:DI 107 [ D.5880 ]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 122 [ data ])
    (reg:DI 107 [ D.5880 ]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 122 [ data ])
    (reg:DI 107 [ D.5880 ]))
  varying cselib base=3:73 offset = 0
 processing cselib load mem:(mem:QI (plus:DI (reg/v/f:DI 122 [ data ])
        (reg:DI 107 [ D.5880 ])) [0 *_40+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=171
  mem: (plus:DI (reg:DI 186)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg:DI 186)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (plus:DI (reg:DI 109 [ D.5882 ])
        (reg:DI 185))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (reg:DI 109 [ D.5882 ])
        (reg:DI 185))
    (const_int 56 [0x38]))
  varying cselib base=7:151 offset = 56
 processing cselib store [56..57)
mems_found = 1, cannot_delete = false

**scanning insn=176
  mem: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 124 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=181
mems_found = 0, cannot_delete = true

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=180
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Update32.part.0

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,2u} r1={7d,4u} r2={7d,4u} r6={1d,27u} r7={1d,30u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,26u,3e} r17={64d,14u} r18={3d} r19={3d} r20={1d,27u} r21={4d} r22={4d} r23={4d} r24={4d} r25={3d} r26={3d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={5d,2u} r38={4d} r39={3d} r40={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r88={2d,5u,1e} r89={1d,2u} r91={1d,3u} r92={1d,2u} r96={1d,2u} r102={1d,2u} r107={1d,10u} r109={1d,2u} r119={1d,1u} r122={2d,9u} r123={1d,1u} r124={1d,16u,3e} r125={3d,7u} r126={3d,9u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,8u} r147={2d,3u} r148={1d,2u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,2u} r163={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,2u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={2d,3u} r177={2d,3u} r178={1d,1u} r179={1d,2u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} 
;;    total ref usage 599{318d,274u,7e} in 127{124 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 88 124 125 126 127
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 17 [flags] 88 124 125 126 127
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 124 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 125 [ data ])
        (reg:DI 1 dx [ data ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 126 [ databitlen ])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg:SI 127 [ state_1(D)->datalen ])
        (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])) blake_ref.c:298 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/v:SI 88 [ left ])
                (ashiftrt:SI (reg:SI 127 [ state_1(D)->datalen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:298 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 127 [ state_1(D)->datalen ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                            (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ left ])
            (const_int 0 [0]))) blake_ref.c:302 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) blake_ref.c:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 50)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126

;; basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 126
;; lr  def 	 17 [flags] 89 91 128 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  gen 	 17 [flags] 89 91 128 129
;; live  kill	 17 [flags]
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 128)
        (const_int 64 [0x40])) blake_ref.c:299 90 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/v:SI 89 [ fill ])
                (minus:SI (reg:SI 128)
                    (reg/v:SI 88 [ left ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:299 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 128)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 64 [0x40])
                    (reg/v:SI 88 [ left ]))
                (nil)))))
(insn 17 16 18 4 (set (reg:DI 91 [ D.5880 ])
        (sign_extend:DI (reg/v:SI 89 [ fill ]))) blake_ref.c:302 142 {*extendsidi2_rex64}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 129 [ D.5880 ])
                (lshiftrt:DI (reg/v:DI 126 [ databitlen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:302 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 129 [ D.5880 ])
            (reg:DI 91 [ D.5880 ]))) blake_ref.c:302 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ D.5880 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) blake_ref.c:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 50)
;;  succ:       5 [29.0%]  (FALLTHRU)
;;              8 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 124 125 126

;; basic block 5, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [29.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 96 130 131 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 124 125 126
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 92 96 130 131 137
;; live  kill	 17 [flags]
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (parallel [
            (set (reg/f:DI 92 [ D.5881 ])
                (plus:DI (reg/v/f:DI 124 [ state ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:303 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 5 (set (reg:DI 130 [ D.5882 ])
        (sign_extend:DI (reg/v:SI 88 [ left ]))) blake_ref.c:303 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 88 [ left ])
        (nil)))
(insn 24 23 28 5 (parallel [
            (set (reg:DI 131 [ D.5883 ])
                (plus:DI (reg/f:DI 92 [ D.5881 ])
                    (reg:DI 130 [ D.5882 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:303 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ D.5882 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 24 29 5 (set (reg:DI 37 r8)
        (reg:DI 91 [ D.5880 ])) blake_ref.c:303 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 1 dx)
        (reg/v/f:DI 125 [ data ])) blake_ref.c:303 89 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 2 cx)
        (reg:DI 131 [ D.5883 ])) blake_ref.c:303 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131 [ D.5883 ])
        (nil)))
(call_insn 31 30 34 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>) [0 memcpy S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:303 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 2 cx))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 37 r8))
                    (nil))))))
(insn 34 31 35 5 (set (reg:SI 137 [ state_1(D)->t32 ])
        (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])) blake_ref.c:306 90 {*movsi_internal}
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:SI 96 [ D.5884 ])
                (plus:SI (reg:SI 137 [ state_1(D)->t32 ])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:306 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ state_1(D)->t32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                            (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 36 35 37 5 (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
        (reg:SI 96 [ D.5884 ])) blake_ref.c:306 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ D.5884 ])
            (const_int 0 [0]))) blake_ref.c:307 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 96 [ D.5884 ])
        (nil)))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) blake_ref.c:307 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 41)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126

;; basic block 6, loop depth 0, count 0, freq 65, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; live  gen 	
;; live  kill	 17 [flags]
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                            (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:308 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126

;; basic block 7, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 125 126 138 139
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 124 125 126
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 88 125 126 138 139
;; live  kill	 17 [flags]
(code_label 41 40 42 7 16 "" [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:DI 1 dx)
        (reg/f:DI 92 [ D.5881 ])) blake_ref.c:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.5881 ])
        (nil)))
(insn 44 43 45 7 (set (reg:DI 2 cx)
        (reg/v/f:DI 124 [ state ])) blake_ref.c:310 89 {*movdi_internal}
     (nil))
(call_insn 45 44 46 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>) [0 compress32 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:310 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 46 45 47 7 (parallel [
            (set (reg/v/f:DI 125 [ data ])
                (plus:DI (reg/v/f:DI 125 [ data ])
                    (reg:DI 91 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:311 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 7 (parallel [
            (set (reg:SI 138 [ D.5879 ])
                (ashift:SI (reg/v:SI 89 [ fill ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:312 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 89 [ fill ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 7 (set (reg:DI 139 [ D.5880 ])
        (sign_extend:DI (reg:SI 138 [ D.5879 ]))) blake_ref.c:312 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ D.5879 ])
        (nil)))
(insn 49 48 6 7 (parallel [
            (set (reg/v:DI 126 [ databitlen ])
                (minus:DI (reg/v:DI 126 [ databitlen ])
                    (reg:DI 139 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:312 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 139 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 49 50 7 (set (reg/v:SI 88 [ left ])
        (const_int 0 [0])) blake_ref.c:314 90 {*movsi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              4 [71.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 50 6 51 8 15 "" [2 uses])
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 8 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 126 [ databitlen ])
            (const_int 511 [0x1ff]))) blake_ref.c:318 8 {*cmpdi_1}
     (nil))
(jump_insn 53 52 54 8 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 188)
            (pc))) blake_ref.c:318 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 188)
;;  succ:       9 [91.0%]  (FALLTHRU)
;;              14 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126

;; basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [91.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(6){ }u79(7){ }u80(16){ }u81(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 126
;; lr  def 	 17 [flags] 122 140 141 142 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  gen 	 122 140 141 142 143
;; live  kill	 17 [flags]
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 9 (parallel [
            (set (reg:DI 140 [ D.5880 ])
                (plus:DI (reg/v:DI 126 [ databitlen ])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 9 (parallel [
            (set (reg:DI 141 [ D.5880 ])
                (lshiftrt:DI (reg:DI 140 [ D.5880 ])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 57 56 58 9 (parallel [
            (set (reg:DI 142 [ D.5882 ])
                (plus:DI (reg:DI 141 [ D.5880 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 9 (parallel [
            (set (reg:DI 143 [ D.5882 ])
                (ashift:DI (reg:DI 142 [ D.5882 ])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ D.5882 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 74 9 (parallel [
            (set (reg/v/f:DI 122 [ data ])
                (plus:DI (reg/v/f:DI 125 [ data ])
                    (reg:DI 143 [ D.5882 ])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 143 [ D.5882 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126

;; basic block 10, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              12 [91.0%]  (DFS_BACK)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags] 102 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  gen 	 17 [flags] 102 144
;; live  kill	 17 [flags]
(code_label 74 59 60 10 19 "" [1 uses])
(note 60 74 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 10 (set (reg:SI 144 [ state_1(D)->t32 ])
        (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])) blake_ref.c:321 90 {*movsi_internal}
     (nil))
(insn 62 61 63 10 (parallel [
            (set (reg:SI 102 [ D.5884 ])
                (plus:SI (reg:SI 144 [ state_1(D)->t32 ])
                    (const_int 512 [0x200])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:321 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 144 [ state_1(D)->t32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                            (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                    (const_int 512 [0x200]))
                (nil)))))
(insn 63 62 64 10 (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
        (reg:SI 102 [ D.5884 ])) blake_ref.c:321 90 {*movsi_internal}
     (nil))
(insn 64 63 65 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ D.5884 ])
            (const_int 0 [0]))) blake_ref.c:323 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.5884 ])
        (nil)))
(jump_insn 65 64 66 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) blake_ref.c:323 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 68)
;;  succ:       11 [50.0%]  (FALLTHRU)
;;              12 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126

;; basic block 11, loop depth 0, count 0, freq 4550, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u99(6){ }u100(7){ }u101(16){ }u102(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  gen 	
;; live  kill	 17 [flags]
(note 66 65 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 11 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                            (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:324 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126

;; basic block 12, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 125
;; live  kill	 17 [flags]
(code_label 68 67 69 12 18 "" [1 uses])
(note 69 68 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 125 [ data ])) blake_ref.c:325 89 {*movdi_internal}
     (nil))
(insn 71 70 72 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 124 [ state ])) blake_ref.c:325 89 {*movdi_internal}
     (nil))
(call_insn 72 71 73 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>) [0 compress32 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:325 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 73 72 75 12 (parallel [
            (set (reg/v/f:DI 125 [ data ])
                (plus:DI (reg/v/f:DI 125 [ data ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:326 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 75 73 76 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 125 [ data ])
            (reg/v/f:DI 122 [ data ]))) blake_ref.c:318 8 {*cmpdi_1}
     (nil))
(jump_insn 76 75 77 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) blake_ref.c:318 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 74)
;;  succ:       10 [91.0%]  (DFS_BACK)
;;              13 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 125 126

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 17 [flags] 126
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  gen 	 126
;; live  kill	 17 [flags]
(note 77 76 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 188 13 (parallel [
            (set (reg/v:DI 126 [ databitlen ])
                (and:DI (reg/v:DI 126 [ databitlen ])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126

;; basic block 14, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 125 126
;; live  gen 	 122
;; live  kill	
(code_label 188 78 187 14 28 "" [1 uses])
(note 187 188 7 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 7 187 79 14 (set (reg/v/f:DI 122 [ data ])
        (reg/v/f:DI 125 [ data ])) blake_ref.c:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ data ])
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126

;; basic block 15, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              13 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u128(6){ }u129(7){ }u130(16){ }u131(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 79 7 80 15 17 "" [0 uses])
(note 80 79 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 126 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:330 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 82 81 83 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) blake_ref.c:330 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 174)
;;  succ:       16 [29.0%]  (FALLTHRU)
;;              29 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126

;; basic block 16, loop depth 0, count 0, freq 261, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [29.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u134(6){ }u135(7){ }u136(16){ }u137(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 126
;; lr  def 	 17 [flags] 107 109 145 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122 124 126
;; live  gen 	 17 [flags] 107 109 145 146
;; live  kill	 17 [flags]
(note 83 82 84 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 16 (parallel [
            (set (reg:DI 107 [ D.5880 ])
                (lshiftrt:DI (reg/v:DI 126 [ databitlen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:332 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 16 (set (reg:DI 109 [ D.5882 ])
        (sign_extend:DI (reg/v:SI 88 [ left ]))) blake_ref.c:331 142 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 16 (parallel [
            (set (reg/f:DI 145 [ D.5881 ])
                (plus:DI (reg/v/f:DI 124 [ state ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 87 86 91 16 (parallel [
            (set (reg:DI 146 [ D.5883 ])
                (plus:DI (reg/f:DI 145 [ D.5881 ])
                    (reg:DI 109 [ D.5882 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 145 [ D.5881 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 87 92 16 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg:DI 107 [ D.5880 ]) 0)
            (const_int 8 [0x8]))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 189 16 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 127)
;;  succ:       23 [50.0%] 
;;              17 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146

;; basic block 17, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [50.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u148(6){ }u149(7){ }u150(16){ }u151(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 17 [flags] 150
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 17 [flags] 150
;; live  kill	 17 [flags]
(note 189 92 93 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 93 189 94 17 (parallel [
            (set (reg:SI 150)
                (and:SI (subreg:SI (reg:DI 107 [ D.5880 ]) 0)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 94 93 95 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150)
            (const_int 0 [0]))) blake_ref.c:331 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 150)
        (nil)))
(jump_insn 95 94 190 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9000 (nil)))
 -> 108)
;;  succ:       19 [90.0%] 
;;              18 [10.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146

;; basic block 18, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [10.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u155(6){ }u156(7){ }u157(16){ }u158(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 122 146
;; lr  def 	 17 [flags] 151 152 153 154 156 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 151 152 153 154 156 157 158
;; live  kill	 17 [flags]
(note 190 95 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 96 190 97 18 (set (reg:SI 151)
        (mem:SI (reg/v/f:DI 122 [ data ]) [0  S4 A8])) blake_ref.c:331 90 {*movsi_internal}
     (nil))
(insn 97 96 98 18 (set (mem:SI (reg:DI 146 [ D.5883 ]) [0  S4 A8])
        (reg:SI 151)) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
(insn 98 97 99 18 (set (reg:DI 152 [ D.5880 ])
        (zero_extend:DI (subreg:SI (reg:DI 107 [ D.5880 ]) 0))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(insn 99 98 100 18 (parallel [
            (set (reg:DI 153)
                (plus:DI (reg:DI 146 [ D.5883 ])
                    (reg:DI 152 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 102 18 (parallel [
            (set (reg/f:DI 154)
                (plus:DI (reg:DI 153)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 153)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 100 103 18 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/v/f:DI 122 [ data ])
                    (reg:DI 152 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 18 (parallel [
            (set (reg/f:DI 157)
                (plus:DI (reg:DI 156)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 18 (set (reg:SI 158)
        (mem:SI (plus:DI (reg/f:DI 157)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157)
        (nil)))
(insn 105 104 108 18 (set (mem:SI (plus:DI (reg/f:DI 154)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
        (reg:SI 158)) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:DI 154)
            (nil))))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126

;; basic block 19, loop depth 0, count 0, freq 118, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [90.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 108 105 191 19 23 "" [1 uses])
(note 191 108 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 109 191 110 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 107 [ D.5880 ]) 0)
            (const_int 0 [0]))) blake_ref.c:331 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 192 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 159)
;;  succ:       26 [50.0%] 
;;              20 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146

;; basic block 20, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 19, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [50.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u179(6){ }u180(7){ }u181(16){ }u182(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 122 146
;; lr  def 	 17 [flags] 159 160
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 17 [flags] 159 160
;; live  kill	 17 [flags]
(note 192 110 111 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 111 192 112 20 (set (reg:QI 159)
        (mem:QI (reg/v/f:DI 122 [ data ]) [0  S1 A8])) blake_ref.c:331 93 {*movqi_internal}
     (nil))
(insn 112 111 113 20 (set (mem:QI (reg:DI 146 [ D.5883 ]) [0  S1 A8])
        (reg:QI 159)) blake_ref.c:331 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 159)
        (nil)))
(insn 113 112 114 20 (parallel [
            (set (reg:SI 160)
                (and:SI (subreg:SI (reg:DI 107 [ D.5880 ]) 0)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 114 113 115 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160)
            (const_int 0 [0]))) blake_ref.c:331 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(jump_insn 115 114 193 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 159)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9000 (nil)))
 -> 159)
;;  succ:       26 [90.0%] 
;;              22 [10.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146

;; basic block 22, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 20, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [10.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u189(6){ }u190(7){ }u191(16){ }u192(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 122 146
;; lr  def 	 17 [flags] 162 163 166 167
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 162 163 166 167
;; live  kill	 17 [flags]
(note 193 115 116 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 116 193 118 22 (set (reg:DI 162 [ D.5880 ])
        (zero_extend:DI (subreg:SI (reg:DI 107 [ D.5880 ]) 0))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(insn 118 116 121 22 (parallel [
            (set (reg/f:DI 163)
                (plus:DI (reg:DI 146 [ D.5883 ])
                    (reg:DI 162 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 121 118 122 22 (parallel [
            (set (reg/f:DI 166)
                (plus:DI (reg/v/f:DI 122 [ data ])
                    (reg:DI 162 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 162 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 122 121 123 22 (set (reg:HI 167)
        (mem:HI (plus:DI (reg/f:DI 166)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) blake_ref.c:331 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (nil)))
(insn 123 122 127 22 (set (mem:HI (plus:DI (reg/f:DI 163)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 167)) blake_ref.c:331 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 167)
        (expr_list:REG_DEAD (reg/f:DI 163)
            (nil))))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126

;; basic block 23, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u204(6){ }u205(7){ }u206(16){ }u207(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 122 146
;; lr  def 	 17 [flags] 147 148 149 168 169 170 171 173 174 175 176
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 146
;; live  gen 	 17 [flags] 147 148 149 168 169 170 171 173 174 175 176
;; live  kill	 17 [flags]
(code_label 127 123 195 23 21 "" [1 uses])
(note 195 127 128 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 128 195 129 23 (set (reg:DI 168)
        (mem:DI (reg/v/f:DI 122 [ data ]) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (nil))
(insn 129 128 130 23 (set (mem:DI (reg:DI 146 [ D.5883 ]) [0  S8 A8])
        (reg:DI 168)) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 168)
        (nil)))
(insn 130 129 131 23 (set (reg:DI 169 [ D.5880 ])
        (zero_extend:DI (subreg:SI (reg:DI 107 [ D.5880 ]) 0))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(insn 131 130 132 23 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg:DI 146 [ D.5883 ])
                    (reg:DI 169 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 134 23 (parallel [
            (set (reg/f:DI 171)
                (plus:DI (reg:DI 170)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 132 135 23 (parallel [
            (set (reg:DI 173)
                (plus:DI (reg/v/f:DI 122 [ data ])
                    (reg:DI 169 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 169 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 23 (parallel [
            (set (reg/f:DI 174)
                (plus:DI (reg:DI 173)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 173)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 23 (set (reg:DI 175)
        (mem:DI (plus:DI (reg/f:DI 174)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174)
        (nil)))
(insn 137 136 138 23 (set (mem:DI (plus:DI (reg/f:DI 171)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 175)) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 175)
        (expr_list:REG_DEAD (reg/f:DI 171)
            (nil))))
(insn 138 137 139 23 (parallel [
            (set (reg/f:DI 176)
                (plus:DI (reg:DI 146 [ D.5883 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 139 138 140 23 (parallel [
            (set (reg/f:DI 176)
                (and:DI (reg/f:DI 176)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 140 139 141 23 (parallel [
            (set (reg/f:DI 148 [ D.5883 ])
                (minus:DI (reg:DI 146 [ D.5883 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 141 140 142 23 (parallel [
            (set (reg/f:DI 149 [ data ])
                (minus:DI (reg/v/f:DI 122 [ data ])
                    (reg/f:DI 148 [ D.5883 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 142 141 143 23 (parallel [
            (set (reg:SI 147 [ D.5880 ])
                (plus:SI (subreg:SI (reg:DI 107 [ D.5880 ]) 0)
                    (subreg:SI (reg/f:DI 148 [ D.5883 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.5883 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 23 (parallel [
            (set (reg:SI 147 [ D.5880 ])
                (and:SI (reg:SI 147 [ D.5880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 23 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 147 [ D.5880 ])
            (const_int 8 [0x8]))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 145 144 196 23 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 159)
;;  succ:       26 [20.0%] 
;;              24 [80.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 147 149 176
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 147 149 176

;; basic block 24, loop depth 0, count 0, freq 105, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [80.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u233(6){ }u234(7){ }u235(16){ }u236(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 147 149 176
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 17 [flags] 177 178
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 147 149 176
;; live  gen 	 177 178
;; live  kill	 17 [flags]
(note 196 145 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 146 196 147 24 (parallel [
            (set (reg:SI 178)
                (and:SI (reg:SI 147 [ D.5880 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 147 [ D.5880 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 24 (set (reg:SI 177)
        (const_int 0 [0])) blake_ref.c:331 90 {*movsi_internal}
     (nil))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178

;; basic block 25, loop depth 0, count 0, freq 105, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU)
;;              25 [80.0%]  (DFS_BACK)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u238(6){ }u239(7){ }u240(16){ }u241(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 149 176 177 178
;; lr  def 	 17 [flags] 177 179 180
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178
;; live  gen 	 17 [flags] 177 179 180
;; live  kill	 17 [flags]
(code_label 148 147 197 25 25 "" [1 uses])
(note 197 148 149 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 149 197 150 25 (set (reg:DI 179)
        (zero_extend:DI (reg:SI 177))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(insn 150 149 151 25 (set (reg:DI 180)
        (mem:DI (plus:DI (reg/f:DI 149 [ data ])
                (reg:DI 179)) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (nil))
(insn 151 150 152 25 (set (mem:DI (plus:DI (reg/f:DI 176)
                (reg:DI 179)) [0  S8 A64])
        (reg:DI 180)) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 180)
        (expr_list:REG_DEAD (reg:DI 179)
            (nil))))
(insn 152 151 153 25 (parallel [
            (set (reg:SI 177)
                (plus:SI (reg:SI 177)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 25 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 177)
            (reg:SI 178))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 154 153 159 25 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 148)
;;  succ:       25 [80.0%]  (DFS_BACK)
;;              26 [20.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126 149 176 177 178

;; basic block 26, loop depth 0, count 0, freq 178, maybe hot
;;  prev block 25, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              19 [50.0%] 
;;              22 [100.0%]  (FALLTHRU)
;;              23 [20.0%] 
;;              25 [20.0%]  (FALLTHRU,LOOP_EXIT)
;;              20 [90.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u252(6){ }u253(7){ }u254(16){ }u255(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 124 126
;; lr  def 	 17 [flags] 182 183 184
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 109 122 124 126
;; live  gen 	 17 [flags] 182 183 184
;; live  kill	 17 [flags]
(code_label 159 154 200 26 22 "" [3 uses])
(note 200 159 160 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 160 200 161 26 (parallel [
            (set (reg:SI 182 [ D.5879 ])
                (ashift:SI (reg/v:SI 88 [ left ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:333 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 88 [ left ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 26 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 182 [ D.5879 ])
                    (subreg:SI (reg/v:DI 126 [ databitlen ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:333 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 182 [ D.5879 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 162 161 163 26 (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (reg:SI 183)) blake_ref.c:333 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
(insn 163 162 164 26 (parallel [
            (set (reg:DI 184 [ D.5880 ])
                (and:DI (reg/v:DI 126 [ databitlen ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:335 380 {*anddi_1}
     (expr_list:REG_DEAD (reg/v:DI 126 [ databitlen ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 184 [ D.5880 ])
            (const_int 0 [0]))) blake_ref.c:335 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 184 [ D.5880 ])
        (nil)))
(jump_insn 165 164 166 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 177)
            (pc))) blake_ref.c:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 177)
;;  succ:       28 [50.0%]  (FALLTHRU)
;;              30 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124

;; basic block 28, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 26, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [50.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u264(6){ }u265(7){ }u266(16){ }u267(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; lr  def 	 17 [flags] 119 185 186
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; live  gen 	 119 185 186
;; live  kill	 17 [flags]
(note 166 165 167 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 28 (set (reg:QI 119 [ D.5887 ])
        (mem:QI (plus:DI (reg/v/f:DI 122 [ data ])
                (reg:DI 107 [ D.5880 ])) [0 *_40+0 S1 A8])) blake_ref.c:336 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 122 [ data ])
        (nil)))
(insn 168 167 169 28 (parallel [
            (set (reg:DI 185)
                (plus:DI (reg/v/f:DI 124 [ state ])
                    (reg:DI 107 [ D.5880 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ state ])
        (expr_list:REG_DEAD (reg:DI 107 [ D.5880 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 169 168 171 28 (parallel [
            (set (reg:DI 186)
                (plus:DI (reg:DI 185)
                    (reg:DI 109 [ D.5882 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185)
        (expr_list:REG_DEAD (reg:DI 109 [ D.5882 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 171 169 174 28 (set (mem/j:QI (plus:DI (reg:DI 186)
                (const_int 56 [0x38])) [0 state_1(D)->data32 S1 A8])
        (reg:QI 119 [ D.5887 ])) blake_ref.c:336 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 186)
        (expr_list:REG_DEAD (reg:QI 119 [ D.5887 ])
            (nil))))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 639, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [71.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u277(6){ }u278(7){ }u279(16){ }u280(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  gen 	
;; live  kill	
(code_label 174 171 175 29 20 "" [1 uses])
(note 175 174 176 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 29 (set (mem:SI (plus:DI (reg/v/f:DI 124 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:339 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ state ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 29, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [50.0%] 
;;              28 [100.0%]  (FALLTHRU)
;;              29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u282(6){ }u283(7){ }u284(16){ }u285(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 0 [ax] 123
(code_label 177 176 178 30 27 "" [1 uses])
(note 178 177 181 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 181 178 182 30 (clobber (reg/i:SI 0 ax)) blake_ref.c:343 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 ax)
        (nil)))
(insn 182 181 180 30 (clobber (reg:SI 123 [ <retval> ])) blake_ref.c:343 -1
     (nil))
(insn 180 182 183 30 (set (reg/i:SI 0 ax)
        (reg:SI 123 [ <retval> ])) blake_ref.c:343 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ <retval> ])
        (nil)))
(insn 183 180 0 30 (use (reg/i:SI 0 ax)) blake_ref.c:343 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Update64.part.1 (Update64.part.1, funcdef_no=23, decl_uid=5571, cgraph_uid=1, symbol_order=32)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 120 [ state ])
        (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)

   after canon_rtx address: (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=34
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)

   after canon_rtx address: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=34 has store

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
  mem: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)

   after canon_rtx address: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=53 has store

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])

   after cselib_expand address: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 117 [ data ]) [0  S4 A8])
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])

   after cselib_expand address: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
  mem: (plus:DI (reg/f:DI 151)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 151)
    (const_int -8 [0xfffffffffffffff8]))

   after cselib_expand address: (plus:DI (reg:DI 150)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg:DI 150)
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=7:253 offset = -4
 processing cselib load mem:(mem:SI (plus:DI (reg/f:DI 151)
        (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
 processing cselib load against insn 81
removing from active insn=81 has store
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (plus:DI (reg/f:DI 148)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 148)
    (const_int -8 [0xfffffffffffffff8]))

   after cselib_expand address: (plus:DI (reg:DI 147)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg:DI 147)
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=5:254 offset = -4
 processing cselib store [-4..0)
mems_found = 1, cannot_delete = false

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
  mem: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])

   after cselib_expand address: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:QI (reg/v/f:DI 117 [ data ]) [0  S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=96
  mem: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])

   after cselib_expand address: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..1)
mems_found = 1, cannot_delete = false

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (plus:DI (reg/f:DI 160)
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (reg/f:DI 160)
    (const_int -2 [0xfffffffffffffffe]))

   after cselib_expand address: (plus:DI (plus:DI (reg/v/f:DI 117 [ data ])
        (reg:DI 156 [ D.5911 ]))
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 117 [ data ])
        (reg:DI 156 [ D.5911 ]))
    (const_int -2 [0xfffffffffffffffe]))
  varying cselib base=6:255 offset = -2
 processing cselib load mem:(mem:HI (plus:DI (reg/f:DI 160)
        (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
mems_found = 0, cannot_delete = true

**scanning insn=107
  mem: (plus:DI (reg/f:DI 157)
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (reg/f:DI 157)
    (const_int -2 [0xfffffffffffffffe]))

   after cselib_expand address: (plus:DI (plus:DI (reg:DI 140 [ D.5914 ])
        (reg:DI 156 [ D.5911 ]))
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (plus:DI (reg:DI 140 [ D.5914 ])
        (reg:DI 156 [ D.5911 ]))
    (const_int -2 [0xfffffffffffffffe]))
  varying cselib base=4:253 offset = -2
 processing cselib store [-2..0)
mems_found = 1, cannot_delete = false

**scanning insn=112
  mem: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])

   after cselib_expand address: (reg/v/f:DI 117 [ data ])

   after canon_rtx address: (reg/v/f:DI 117 [ data ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:DI (reg/v/f:DI 117 [ data ]) [0  S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=113
  mem: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])

   after cselib_expand address: (reg:DI 140 [ D.5914 ])

   after canon_rtx address: (reg:DI 140 [ D.5914 ])
  varying cselib base=2:2 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (plus:DI (reg/f:DI 168)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 168)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg:DI 167)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg:DI 167)
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=7:253 offset = -8
 processing cselib load mem:(mem:DI (plus:DI (reg/f:DI 168)
        (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
 processing cselib load against insn 113
removing from active insn=113 has store
mems_found = 0, cannot_delete = true

**scanning insn=121
  mem: (plus:DI (reg/f:DI 165)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 165)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg:DI 164)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg:DI 164)
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=5:254 offset = -8
 processing cselib store [-8..0)
mems_found = 1, cannot_delete = false

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (reg/f:DI 143 [ data ])

   after canon_rtx address: (reg/f:DI 143 [ data ])

   after cselib_expand address: (minus:DI (plus:DI (reg/v/f:DI 117 [ data ])
        (reg/f:DI 170))
    (reg:DI 140 [ D.5914 ]))

   after canon_rtx address: (minus:DI (plus:DI (reg/v/f:DI 117 [ data ])
        (reg/f:DI 170))
    (reg:DI 140 [ D.5914 ]))
  varying cselib base=19:8812 offset = 0
 processing cselib load mem:(mem:BLK (reg/f:DI 143 [ data ]) [0  A8])
 processing cselib load against insn 121
removing from active insn=121 has store
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=5:5 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=139
  mem: (plus:DI (reg/v/f:DI 117 [ data ])
    (reg:DI 103 [ D.5911 ]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 117 [ data ])
    (reg:DI 103 [ D.5911 ]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 117 [ data ])
    (reg:DI 103 [ D.5911 ]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 117 [ data ])
    (reg:DI 103 [ D.5911 ]))
  varying cselib base=3:73 offset = 0
 processing cselib load mem:(mem:QI (plus:DI (reg/v/f:DI 117 [ data ])
        (reg:DI 103 [ D.5911 ])) [0 *_37+0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=143
  mem: (plus:DI (reg:DI 177)
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (reg:DI 177)
    (const_int 216 [0xd8]))

   after cselib_expand address: (plus:DI (plus:DI (reg:DI 106 [ D.5913 ])
        (reg:DI 176))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (reg:DI 106 [ D.5913 ])
        (reg:DI 176))
    (const_int 216 [0xd8]))
  varying cselib base=7:151 offset = 216
 processing cselib store [216..217)
mems_found = 1, cannot_delete = false

**scanning insn=148
  mem: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 120 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Update64.part.1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,2u} r1={7d,4u} r2={7d,4u} r6={1d,21u} r7={1d,24u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,20u,3e} r17={57d,10u} r18={3d} r19={3d} r20={1d,21u} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d} r26={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={5d,2u} r38={4d} r39={3d} r40={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r88={2d,5u,1e} r89={1d,2u} r91={1d,3u} r92={1d,2u} r103={1d,10u} r106={1d,2u} r116={1d,1u} r117={2d,9u} r119={1d,1u} r120={1d,12u,1e} r121={3d,7u} r122={3d,9u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,8u} r141={2d,2u} r142={1d,2u} r143={2d,2u} r144={1d,1u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r156={1d,2u} r157={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={3d,4u} r171={1d,1u} r172={2d,3u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} 
;;    total ref usage 542{303d,234u,5e} in 110{107 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 88 120 121 122 123
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 17 [flags] 88 120 121 122 123
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 120 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 121 [ data ])
        (reg:DI 1 dx [ data ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 122 [ databitlen ])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 5 11 2 (set (reg:SI 123 [ state_1(D)->datalen ])
        (mem:SI (plus:DI (reg/v/f:DI 120 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])) blake_ref.c:354 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/v:SI 88 [ left ])
                (ashiftrt:SI (reg:SI 123 [ state_1(D)->datalen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:354 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 123 [ state_1(D)->datalen ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 120 [ state ])
                            (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
                    (const_int 3 [0x3]))
                (nil)))))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 88 [ left ])
            (const_int 0 [0]))) blake_ref.c:358 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) blake_ref.c:358 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 42)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122

;; basic block 4, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 122
;; lr  def 	 17 [flags] 89 91 124 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  gen 	 17 [flags] 89 91 124 125
;; live  kill	 17 [flags]
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 124)
        (const_int 128 [0x80])) blake_ref.c:355 90 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/v:SI 89 [ fill ])
                (minus:SI (reg:SI 124)
                    (reg/v:SI 88 [ left ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:355 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 124)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 128 [0x80])
                    (reg/v:SI 88 [ left ]))
                (nil)))))
(insn 17 16 18 4 (set (reg:DI 91 [ D.5911 ])
        (sign_extend:DI (reg/v:SI 89 [ fill ]))) blake_ref.c:358 142 {*extendsidi2_rex64}
     (nil))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 125 [ D.5911 ])
                (lshiftrt:DI (reg/v:DI 122 [ databitlen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:358 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 125 [ D.5911 ])
            (reg:DI 91 [ D.5911 ]))) blake_ref.c:358 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ D.5911 ])
        (nil)))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) blake_ref.c:358 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 42)
;;  succ:       5 [29.0%]  (FALLTHRU)
;;              6 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 120 121 122

;; basic block 5, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [29.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 120 121 122
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 92 121 122 126 127 133 134
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 120 121 122
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 88 92 121 122 126 127 133 134
;; live  kill	 17 [flags]
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (parallel [
            (set (reg/f:DI 92 [ D.5912 ])
                (plus:DI (reg/v/f:DI 120 [ state ])
                    (const_int 216 [0xd8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:359 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 5 (set (reg:DI 126 [ D.5913 ])
        (sign_extend:DI (reg/v:SI 88 [ left ]))) blake_ref.c:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 88 [ left ])
        (nil)))
(insn 24 23 28 5 (parallel [
            (set (reg:DI 127 [ D.5914 ])
                (plus:DI (reg/f:DI 92 [ D.5912 ])
                    (reg:DI 126 [ D.5913 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:359 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 126 [ D.5913 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 24 29 5 (set (reg:DI 37 r8)
        (reg:DI 91 [ D.5911 ])) blake_ref.c:359 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:DI 1 dx)
        (reg/v/f:DI 121 [ data ])) blake_ref.c:359 89 {*movdi_internal}
     (nil))
(insn 30 29 31 5 (set (reg:DI 2 cx)
        (reg:DI 127 [ D.5914 ])) blake_ref.c:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ D.5914 ])
        (nil)))
(call_insn 31 30 34 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>) [0 memcpy S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:359 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 2 cx))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 37 r8))
                    (nil))))))
(insn 34 31 35 5 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
                        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
                            (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 5 (set (reg:DI 1 dx)
        (reg/f:DI 92 [ D.5912 ])) blake_ref.c:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.5912 ])
        (nil)))
(insn 36 35 37 5 (set (reg:DI 2 cx)
        (reg/v/f:DI 120 [ state ])) blake_ref.c:364 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 38 37 39 5 (parallel [
            (set (reg/v/f:DI 121 [ data ])
                (plus:DI (reg/v/f:DI 121 [ data ])
                    (reg:DI 91 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:365 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 5 (parallel [
            (set (reg:SI 133 [ D.5910 ])
                (ashift:SI (reg/v:SI 89 [ fill ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:366 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 89 [ fill ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 5 (set (reg:DI 134 [ D.5911 ])
        (sign_extend:DI (reg:SI 133 [ D.5910 ]))) blake_ref.c:366 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 133 [ D.5910 ])
        (nil)))
(insn 41 40 6 5 (parallel [
            (set (reg/v:DI 122 [ databitlen ])
                (minus:DI (reg/v:DI 122 [ databitlen ])
                    (reg:DI 134 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:366 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 134 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 6 41 42 5 (set (reg/v:SI 88 [ left ])
        (const_int 0 [0])) blake_ref.c:368 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;;              4 [71.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 42 6 43 6 45 "" [2 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 122 [ databitlen ])
            (const_int 1023 [0x3ff]))) blake_ref.c:372 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) blake_ref.c:372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 160)
;;  succ:       7 [91.0%]  (FALLTHRU)
;;              10 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122

;; basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [91.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121 122
;; lr  def 	 17 [flags] 117 135 136 137 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  gen 	 117 135 136 137 138
;; live  kill	 17 [flags]
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (parallel [
            (set (reg:DI 135 [ D.5911 ])
                (plus:DI (reg/v:DI 122 [ databitlen ])
                    (const_int -1024 [0xfffffffffffffc00])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 7 (parallel [
            (set (reg:DI 136 [ D.5911 ])
                (lshiftrt:DI (reg:DI 135 [ D.5911 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 135 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 49 48 50 7 (parallel [
            (set (reg:DI 137 [ D.5913 ])
                (plus:DI (reg:DI 136 [ D.5911 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 136 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 7 (parallel [
            (set (reg:DI 138 [ D.5913 ])
                (ashift:DI (reg:DI 137 [ D.5913 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 137 [ D.5913 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 58 7 (parallel [
            (set (reg/v/f:DI 117 [ data ])
                (plus:DI (reg/v/f:DI 121 [ data ])
                    (reg:DI 138 [ D.5913 ])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 138 [ D.5913 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              8 [91.0%]  (DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117 120 121
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 121
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 121
;; live  kill	 17 [flags]
(code_label 58 51 52 8 47 "" [1 uses])
(note 52 58 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
                        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 120 [ state ])
                            (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:375 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 121 [ data ])) blake_ref.c:376 89 {*movdi_internal}
     (nil))
(insn 55 54 56 8 (set (reg:DI 2 cx)
        (reg/v/f:DI 120 [ state ])) blake_ref.c:376 89 {*movdi_internal}
     (nil))
(call_insn 56 55 57 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:376 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 57 56 59 8 (parallel [
            (set (reg/v/f:DI 121 [ data ])
                (plus:DI (reg/v/f:DI 121 [ data ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:377 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 57 60 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 121 [ data ])
            (reg/v/f:DI 117 [ data ]))) blake_ref.c:372 8 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) blake_ref.c:372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 58)
;;  succ:       8 [91.0%]  (DFS_BACK)
;;              9 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 121 122

;; basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags] 122
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  gen 	 122
;; live  kill	 17 [flags]
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 160 9 (parallel [
            (set (reg/v:DI 122 [ databitlen ])
                (and:DI (reg/v:DI 122 [ databitlen ])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122

;; basic block 10, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(6){ }u94(7){ }u95(16){ }u96(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121
;; lr  def 	 117
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 121 122
;; live  gen 	 117
;; live  kill	
(code_label 160 62 159 10 54 "" [1 uses])
(note 159 160 7 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 7 159 63 10 (set (reg/v/f:DI 117 [ data ])
        (reg/v/f:DI 121 [ data ])) blake_ref.c:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 121 [ data ])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 63 7 64 11 46 "" [0 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 122 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:381 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 66 65 67 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) blake_ref.c:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 146)
;;  succ:       12 [29.0%]  (FALLTHRU)
;;              23 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122

;; basic block 12, loop depth 0, count 0, freq 261, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [29.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(6){ }u105(7){ }u106(16){ }u107(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 122
;; lr  def 	 17 [flags] 103 106 139 140
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 117 120 122
;; live  gen 	 17 [flags] 103 106 139 140
;; live  kill	 17 [flags]
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 12 (parallel [
            (set (reg:DI 103 [ D.5911 ])
                (lshiftrt:DI (reg/v:DI 122 [ databitlen ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:383 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 12 (set (reg:DI 106 [ D.5913 ])
        (sign_extend:DI (reg/v:SI 88 [ left ]))) blake_ref.c:382 142 {*extendsidi2_rex64}
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:DI 139 [ D.5912 ])
                (plus:DI (reg/v/f:DI 120 [ state ])
                    (const_int 216 [0xd8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 75 12 (parallel [
            (set (reg:DI 140 [ D.5914 ])
                (plus:DI (reg/f:DI 139 [ D.5912 ])
                    (reg:DI 106 [ D.5913 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 139 [ D.5912 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 71 76 12 (set (reg:CC 17 flags)
        (compare:CC (subreg:SI (reg:DI 103 [ D.5911 ]) 0)
            (const_int 8 [0x8]))) blake_ref.c:382 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 161 12 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 111)
;;  succ:       19 [50.0%] 
;;              13 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140

;; basic block 13, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u118(6){ }u119(7){ }u120(16){ }u121(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103
;; lr  def 	 17 [flags] 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 17 [flags] 144
;; live  kill	 17 [flags]
(note 161 76 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 77 161 78 13 (parallel [
            (set (reg:SI 144)
                (and:SI (subreg:SI (reg:DI 103 [ D.5911 ]) 0)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 78 77 79 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 144)
            (const_int 0 [0]))) blake_ref.c:382 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(jump_insn 79 78 162 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9000 (nil)))
 -> 92)
;;  succ:       15 [90.0%] 
;;              14 [10.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140

;; basic block 14, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [10.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117 140
;; lr  def 	 17 [flags] 145 146 147 148 150 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 145 146 147 148 150 151 152
;; live  kill	 17 [flags]
(note 162 79 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 162 81 14 (set (reg:SI 145)
        (mem:SI (reg/v/f:DI 117 [ data ]) [0  S4 A8])) blake_ref.c:382 90 {*movsi_internal}
     (nil))
(insn 81 80 82 14 (set (mem:SI (reg:DI 140 [ D.5914 ]) [0  S4 A8])
        (reg:SI 145)) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 145)
        (nil)))
(insn 82 81 83 14 (set (reg:DI 146 [ D.5911 ])
        (zero_extend:DI (subreg:SI (reg:DI 103 [ D.5911 ]) 0))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(insn 83 82 84 14 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg:DI 140 [ D.5914 ])
                    (reg:DI 146 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.5914 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 86 14 (parallel [
            (set (reg/f:DI 148)
                (plus:DI (reg:DI 147)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 147)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 84 87 14 (parallel [
            (set (reg:DI 150)
                (plus:DI (reg/v/f:DI 117 [ data ])
                    (reg:DI 146 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 14 (parallel [
            (set (reg/f:DI 151)
                (plus:DI (reg:DI 150)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 150)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 88 87 89 14 (set (reg:SI 152)
        (mem:SI (plus:DI (reg/f:DI 151)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151)
        (nil)))
(insn 89 88 92 14 (set (mem:SI (plus:DI (reg/f:DI 148)
                (const_int -8 [0xfffffffffffffff8])) [0  S4 A8])
        (reg:SI 152)) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/f:DI 148)
            (nil))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122

;; basic block 15, loop depth 0, count 0, freq 118, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [90.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u143(6){ }u144(7){ }u145(16){ }u146(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 92 89 163 15 51 "" [1 uses])
(note 163 92 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 163 94 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 103 [ D.5911 ]) 0)
            (const_int 0 [0]))) blake_ref.c:382 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 94 93 164 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 131)
;;  succ:       20 [50.0%] 
;;              16 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140

;; basic block 16, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 15, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117 140
;; lr  def 	 17 [flags] 153 154
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 17 [flags] 153 154
;; live  kill	 17 [flags]
(note 164 94 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 95 164 96 16 (set (reg:QI 153)
        (mem:QI (reg/v/f:DI 117 [ data ]) [0  S1 A8])) blake_ref.c:382 93 {*movqi_internal}
     (nil))
(insn 96 95 97 16 (set (mem:QI (reg:DI 140 [ D.5914 ]) [0  S1 A8])
        (reg:QI 153)) blake_ref.c:382 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 153)
        (nil)))
(insn 97 96 98 16 (parallel [
            (set (reg:SI 154)
                (and:SI (subreg:SI (reg:DI 103 [ D.5911 ]) 0)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154)
            (const_int 0 [0]))) blake_ref.c:382 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
(jump_insn 99 98 165 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9000 (nil)))
 -> 131)
;;  succ:       20 [90.0%] 
;;              18 [10.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140

;; basic block 18, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 16, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [10.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u159(6){ }u160(7){ }u161(16){ }u162(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117 140
;; lr  def 	 17 [flags] 156 157 160 161
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 156 157 160 161
;; live  kill	 17 [flags]
(note 165 99 100 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 100 165 102 18 (set (reg:DI 156 [ D.5911 ])
        (zero_extend:DI (subreg:SI (reg:DI 103 [ D.5911 ]) 0))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(insn 102 100 105 18 (parallel [
            (set (reg/f:DI 157)
                (plus:DI (reg:DI 140 [ D.5914 ])
                    (reg:DI 156 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.5914 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 102 106 18 (parallel [
            (set (reg/f:DI 160)
                (plus:DI (reg/v/f:DI 117 [ data ])
                    (reg:DI 156 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 156 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 18 (set (reg:HI 161)
        (mem:HI (plus:DI (reg/f:DI 160)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) blake_ref.c:382 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160)
        (nil)))
(insn 107 106 111 18 (set (mem:HI (plus:DI (reg/f:DI 157)
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 161)) blake_ref.c:382 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 161)
        (expr_list:REG_DEAD (reg/f:DI 157)
            (nil))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122

;; basic block 19, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u174(6){ }u175(7){ }u176(16){ }u177(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117 140
;; lr  def 	 17 [flags] 141 142 143 162 163 164 165 167 168 169 170 171 172
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122 140
;; live  gen 	 141 142 143 162 163 164 165 167 168 169 170 171 172
;; live  kill	 17 [flags]
(code_label 111 107 167 19 49 "" [1 uses])
(note 167 111 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 112 167 113 19 (set (reg:DI 162)
        (mem:DI (reg/v/f:DI 117 [ data ]) [0  S8 A8])) blake_ref.c:382 89 {*movdi_internal}
     (nil))
(insn 113 112 114 19 (set (mem:DI (reg:DI 140 [ D.5914 ]) [0  S8 A8])
        (reg:DI 162)) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 162)
        (nil)))
(insn 114 113 115 19 (set (reg:DI 163 [ D.5911 ])
        (zero_extend:DI (subreg:SI (reg:DI 103 [ D.5911 ]) 0))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(insn 115 114 116 19 (parallel [
            (set (reg:DI 164)
                (plus:DI (reg:DI 140 [ D.5914 ])
                    (reg:DI 163 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 116 115 118 19 (parallel [
            (set (reg/f:DI 165)
                (plus:DI (reg:DI 164)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 118 116 119 19 (parallel [
            (set (reg:DI 167)
                (plus:DI (reg/v/f:DI 117 [ data ])
                    (reg:DI 163 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 163 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 19 (parallel [
            (set (reg/f:DI 168)
                (plus:DI (reg:DI 167)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 167)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 19 (set (reg:DI 169)
        (mem:DI (plus:DI (reg/f:DI 168)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168)
        (nil)))
(insn 121 120 122 19 (set (mem:DI (plus:DI (reg/f:DI 165)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (reg:DI 169)) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 169)
        (expr_list:REG_DEAD (reg/f:DI 165)
            (nil))))
(insn 122 121 123 19 (parallel [
            (set (reg/f:DI 170)
                (plus:DI (reg:DI 140 [ D.5914 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 19 (parallel [
            (set (reg/f:DI 170)
                (and:DI (reg/f:DI 170)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 125 19 (parallel [
            (set (reg/f:DI 142 [ D.5914 ])
                (minus:DI (reg:DI 140 [ D.5914 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ D.5914 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 19 (parallel [
            (set (reg/f:DI 143 [ data ])
                (minus:DI (reg/v/f:DI 117 [ data ])
                    (reg/f:DI 142 [ D.5914 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 19 (parallel [
            (set (reg:SI 141 [ D.5911 ])
                (plus:SI (subreg:SI (reg:DI 103 [ D.5911 ]) 0)
                    (subreg:SI (reg/f:DI 142 [ D.5914 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 142 [ D.5914 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 19 (parallel [
            (set (reg:SI 141 [ D.5911 ])
                (and:SI (reg:SI 141 [ D.5911 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 128 127 129 19 (parallel [
            (set (reg:SI 171)
                (lshiftrt:SI (reg:SI 141 [ D.5911 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 141 [ D.5911 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 129 128 130 19 (set (reg:DI 172)
        (zero_extend:DI (reg:SI 171))) blake_ref.c:382 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 130 129 131 19 (parallel [
            (set (reg:DI 172)
                (const_int 0 [0]))
            (set (reg/f:DI 170)
                (plus:DI (ashift:DI (reg:DI 172)
                        (const_int 3 [0x3]))
                    (reg/f:DI 170)))
            (set (reg/f:DI 143 [ data ])
                (plus:DI (ashift:DI (reg:DI 172)
                        (const_int 3 [0x3]))
                    (reg/f:DI 143 [ data ])))
            (set (mem:BLK (reg/f:DI 170) [0  A64])
                (mem:BLK (reg/f:DI 143 [ data ]) [0  A8]))
            (use (reg:DI 172))
        ]) blake_ref.c:382 919 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg:DI 172)
        (expr_list:REG_UNUSED (reg/f:DI 170)
            (expr_list:REG_UNUSED (reg/f:DI 143 [ data ])
                (nil)))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122

;; basic block 20, loop depth 0, count 0, freq 262, maybe hot
;;  prev block 19, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              15 [50.0%] 
;;              18 [100.0%]  (FALLTHRU)
;;              19 [100.0%]  (FALLTHRU)
;;              16 [90.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 120 122
;; lr  def 	 17 [flags] 173 174 175
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 103 106 117 120 122
;; live  gen 	 17 [flags] 173 174 175
;; live  kill	 17 [flags]
(code_label 131 130 168 20 50 "" [2 uses])
(note 168 131 132 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 132 168 133 20 (parallel [
            (set (reg:SI 173 [ D.5910 ])
                (ashift:SI (reg/v:SI 88 [ left ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:384 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg/v:SI 88 [ left ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 20 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 173 [ D.5910 ])
                    (subreg:SI (reg/v:DI 122 [ databitlen ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:384 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 173 [ D.5910 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 20 (set (mem:SI (plus:DI (reg/v/f:DI 120 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (reg:SI 174)) blake_ref.c:384 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 135 134 136 20 (parallel [
            (set (reg:DI 175 [ D.5911 ])
                (and:DI (reg/v:DI 122 [ databitlen ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:387 380 {*anddi_1}
     (expr_list:REG_DEAD (reg/v:DI 122 [ databitlen ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 175 [ D.5911 ])
            (const_int 0 [0]))) blake_ref.c:387 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 175 [ D.5911 ])
        (nil)))
(jump_insn 137 136 138 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) blake_ref.c:387 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 149)
;;  succ:       22 [50.0%]  (FALLTHRU)
;;              24 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 106 117 120
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 106 117 120

;; basic block 22, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 20, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u222(6){ }u223(7){ }u224(16){ }u225(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 106 117 120
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 106 117 120
;; lr  def 	 17 [flags] 116 176 177
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 106 117 120
;; live  gen 	 116 176 177
;; live  kill	 17 [flags]
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 22 (set (reg:QI 116 [ D.5917 ])
        (mem:QI (plus:DI (reg/v/f:DI 117 [ data ])
                (reg:DI 103 [ D.5911 ])) [0 *_37+0 S1 A8])) blake_ref.c:388 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 117 [ data ])
        (nil)))
(insn 140 139 141 22 (parallel [
            (set (reg:DI 176)
                (plus:DI (reg/v/f:DI 120 [ state ])
                    (reg:DI 103 [ D.5911 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 120 [ state ])
        (expr_list:REG_DEAD (reg:DI 103 [ D.5911 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 141 140 143 22 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg:DI 176)
                    (reg:DI 106 [ D.5913 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 176)
        (expr_list:REG_DEAD (reg:DI 106 [ D.5913 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 143 141 146 22 (set (mem/j:QI (plus:DI (reg:DI 177)
                (const_int 216 [0xd8])) [0 state_1(D)->data64 S1 A8])
        (reg:QI 116 [ D.5917 ])) blake_ref.c:388 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_DEAD (reg:QI 116 [ D.5917 ])
            (nil))))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, count 0, freq 639, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [71.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u235(6){ }u236(7){ }u237(16){ }u238(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; live  gen 	
;; live  kill	
(code_label 146 143 147 23 48 "" [1 uses])
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 23 (set (mem:SI (plus:DI (reg/v/f:DI 120 [ state ])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:391 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 120 [ state ])
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 23, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%] 
;;              22 [100.0%]  (FALLTHRU)
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u240(6){ }u241(7){ }u242(16){ }u243(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 119
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	 0 [ax] 119
(code_label 149 148 150 24 53 "" [1 uses])
(note 150 149 153 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 153 150 154 24 (clobber (reg/i:SI 0 ax)) blake_ref.c:394 -1
     (expr_list:REG_UNUSED (reg/i:SI 0 ax)
        (nil)))
(insn 154 153 152 24 (clobber (reg:SI 119 [ <retval> ])) blake_ref.c:394 -1
     (nil))
(insn 152 154 155 24 (set (reg/i:SI 0 ax)
        (reg:SI 119 [ <retval> ])) blake_ref.c:394 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 119 [ <retval> ])
        (nil)))
(insn 155 152 0 24 (use (reg/i:SI 0 ax)) blake_ref.c:394 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function GetHashStateSize (GetHashStateSize, funcdef_no=10, decl_uid=3156, cgraph_uid=10, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


GetHashStateSize

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={1d,2u} r1={1d} r2={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} 
;;    total ref usage 22{13d,9u,0e} in 2{2 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 376 [0x178])) blake_ref.c:7 90 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) blake_ref.c:7 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Init (Init, funcdef_no=13, decl_uid=3182, cgraph_uid=13, symbol_order=21)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (plus:DI (reg/f:DI 104)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 104)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib store [24..32)
    trying store in insn=21 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
  mem: (plus:DI (reg/f:DI 104)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 104)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib store [32..40)
    trying store in insn=23 gid=-1[24..32)
    trying store in insn=21 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:DI (reg/f:DI 104)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 104)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib store [40..48)
    trying store in insn=25 gid=-1[32..40)
    trying store in insn=23 gid=-1[24..32)
    trying store in insn=21 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib store [16..24)
mems_found = 1, cannot_delete = false

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (plus:DI (reg/f:DI 110)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 110)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib store [24..32)
    trying store in insn=35 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (plus:DI (reg/f:DI 110)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 110)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib store [32..40)
    trying store in insn=37 gid=-1[24..32)
    trying store in insn=35 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (plus:DI (reg/f:DI 110)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 110)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib store [40..48)
    trying store in insn=39 gid=-1[32..40)
    trying store in insn=37 gid=-1[24..32)
    trying store in insn=35 gid=-1[16..24)
mems_found = 1, cannot_delete = false

**scanning insn=44
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=45
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=1:1 offset = 52
 processing cselib store [52..56)
    trying store in insn=44 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 56 [0x38]))
  varying cselib base=1:1 offset = 56
 processing cselib store [56..64)
    trying store in insn=45 gid=-1[52..56)
    trying store in insn=44 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:DI (reg/f:DI 122)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 122)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 112 [0x70]))
  varying cselib base=1:1 offset = 112
 processing cselib store [112..120)
    trying store in insn=50 gid=-1[56..64)
    trying store in insn=45 gid=-1[52..56)
    trying store in insn=44 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 120 [0x78]))
  varying cselib base=1:1 offset = 120
 processing cselib store [120..136)
    trying store in insn=54 gid=-1[112..120)
    trying store in insn=50 gid=-1[56..64)
    trying store in insn=45 gid=-1[52..56)
    trying store in insn=44 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib store [136..144)
mems_found = 1, cannot_delete = false

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
  mem: (plus:DI (reg/f:DI 129)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib store [144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
  mem: (plus:DI (reg/f:DI 129)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib store [152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
  mem: (plus:DI (reg/f:DI 129)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib store [160..168)
    trying store in insn=84 gid=-1[152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
  mem: (plus:DI (reg/f:DI 129)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib store [168..176)
    trying store in insn=86 gid=-1[160..168)
    trying store in insn=84 gid=-1[152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
  mem: (plus:DI (reg/f:DI 129)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib store [176..184)
    trying store in insn=88 gid=-1[168..176)
    trying store in insn=86 gid=-1[160..168)
    trying store in insn=84 gid=-1[152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
  mem: (plus:DI (reg/f:DI 129)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib store [184..192)
    trying store in insn=90 gid=-1[176..184)
    trying store in insn=88 gid=-1[168..176)
    trying store in insn=86 gid=-1[160..168)
    trying store in insn=84 gid=-1[152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:DI (reg/f:DI 129)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/f:DI 129)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib store [192..200)
    trying store in insn=92 gid=-1[184..192)
    trying store in insn=90 gid=-1[176..184)
    trying store in insn=88 gid=-1[168..176)
    trying store in insn=86 gid=-1[160..168)
    trying store in insn=84 gid=-1[152..160)
    trying store in insn=82 gid=-1[144..152)
    trying store in insn=80 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib store [136..144)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
  mem: (plus:DI (reg/f:DI 139)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib store [144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (plus:DI (reg/f:DI 139)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib store [152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
  mem: (plus:DI (reg/f:DI 139)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib store [160..168)
    trying store in insn=106 gid=-1[152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (plus:DI (reg/f:DI 139)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib store [168..176)
    trying store in insn=108 gid=-1[160..168)
    trying store in insn=106 gid=-1[152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
  mem: (plus:DI (reg/f:DI 139)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib store [176..184)
    trying store in insn=110 gid=-1[168..176)
    trying store in insn=108 gid=-1[160..168)
    trying store in insn=106 gid=-1[152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
  mem: (plus:DI (reg/f:DI 139)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib store [184..192)
    trying store in insn=112 gid=-1[176..184)
    trying store in insn=110 gid=-1[168..176)
    trying store in insn=108 gid=-1[160..168)
    trying store in insn=106 gid=-1[152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
  mem: (plus:DI (reg/f:DI 139)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/f:DI 139)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib store [192..200)
    trying store in insn=114 gid=-1[184..192)
    trying store in insn=112 gid=-1[176..184)
    trying store in insn=110 gid=-1[168..176)
    trying store in insn=108 gid=-1[160..168)
    trying store in insn=106 gid=-1[152..160)
    trying store in insn=104 gid=-1[144..152)
    trying store in insn=102 gid=-1[136..144)
mems_found = 1, cannot_delete = false

**scanning insn=119
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=120
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 208 [0xd0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 208 [0xd0]))
  varying cselib base=1:1 offset = 208
 processing cselib store [208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=125
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 216 [0xd8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 216 [0xd8]))
  varying cselib base=1:1 offset = 216
 processing cselib store [216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
  mem: (plus:DI (reg/f:DI 155)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 155)
    (const_int -16 [0xfffffffffffffff0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 272 [0x110]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 272 [0x110]))
  varying cselib base=1:1 offset = 272
 processing cselib store [272..280)
    trying store in insn=125 gid=-1[216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=138
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 344 [0x158]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 344 [0x158]))
  varying cselib base=1:1 offset = 344
 processing cselib store [344..352)
    trying store in insn=129 gid=-1[272..280)
    trying store in insn=125 gid=-1[216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=139
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 352 [0x160]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 352 [0x160]))
  varying cselib base=1:1 offset = 352
 processing cselib store [352..360)
    trying store in insn=138 gid=-1[344..352)
    trying store in insn=129 gid=-1[272..280)
    trying store in insn=125 gid=-1[216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=140
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 360 [0x168]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 360 [0x168]))
  varying cselib base=1:1 offset = 360
 processing cselib store [360..368)
    trying store in insn=139 gid=-1[352..360)
    trying store in insn=138 gid=-1[344..352)
    trying store in insn=129 gid=-1[272..280)
    trying store in insn=125 gid=-1[216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=141
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 368 [0x170]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 368 [0x170]))
  varying cselib base=1:1 offset = 368
 processing cselib store [368..376)
    trying store in insn=140 gid=-1[360..368)
    trying store in insn=139 gid=-1[352..360)
    trying store in insn=138 gid=-1[344..352)
    trying store in insn=129 gid=-1[272..280)
    trying store in insn=125 gid=-1[216..224)
    trying store in insn=120 gid=-1[208..216)
    trying store in insn=119 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=144
  mem: (reg/v/f:DI 100 [ state ])

   after canon_rtx address: (reg/v/f:DI 100 [ state ])

   after cselib_expand address: (reg/v/f:DI 100 [ state ])

   after canon_rtx address: (reg/v/f:DI 100 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=145
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
    trying store in insn=144 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=146
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib store [8..12)
    trying store in insn=145 gid=-1[4..8)
    trying store in insn=144 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=147
  mem: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 100 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib store [12..16)
    trying store in insn=146 gid=-1[8..12)
    trying store in insn=145 gid=-1[4..8)
    trying store in insn=144 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 17[flags]
;;  ref usage 	r0={1d,2u} r1={1d,1u} r2={1d,1u} r6={1d,13u} r7={1d,13u} r16={1d,12u,2e} r17={28d,4u} r20={1d,13u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} r88={2d,1u} r100={1d,29u} r101={1d,5u} r102={1d,1u} r103={1d,1u} r104={1d,3u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,3u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={2d,2u} r119={1d,1u} r122={1d,1u} r123={3d,4u} r124={1d,1u} r125={2d,2u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,7u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,7u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={2d,2u} r152={1d,1u} r155={1d,1u} r156={3d,4u} r157={1d,1u} r158={2d,2u} 
;;    total ref usage 273{102d,169u,2e} in 110{110 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 100 101 102 103
;; live  kill	 17 [flags]
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 100 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v:SI 101 [ hashbitlen ])
        (reg:SI 1 dx [ hashbitlen ])) blake_ref.c:203 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ hashbitlen ])
        (expr_list:REG_EQUIV (mem/c:SI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [2 hashbitlen+0 S4 A64])
            (nil))))
(note 4 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 4 11 2 (parallel [
            (set (reg:SI 102 [ D.5934 ])
                (plus:SI (reg/v:SI 101 [ hashbitlen ])
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:207 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 103 [ D.5934 ])
                (and:SI (reg:SI 102 [ D.5934 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:207 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 102 [ D.5934 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ D.5934 ])
            (const_int 0 [0]))) blake_ref.c:207 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.5934 ])
        (nil)))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) blake_ref.c:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 67)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 3, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 17 [flags]
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 101 [ hashbitlen ])
            (const_int 224 [0xe0]))) blake_ref.c:210 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) blake_ref.c:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 30)
;;  succ:       4 [28.0%]  (FALLTHRU)
;;              5 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 4, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [28.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 104 106 107 108 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 104 106 107 108 109
;; live  kill	 17 [flags]
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 20 4 (parallel [
            (set (reg/f:DI 104)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:211 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 18 21 4 (set (reg:DI 106 [ MEM[(void *)&IV224] ])
        (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(void *)&IV224]+0 S8 A256])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+0 S8 A8])
        (reg:DI 106 [ MEM[(void *)&IV224] ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ MEM[(void *)&IV224] ])
        (nil)))
(insn 22 21 23 4 (set (reg:DI 107 [ MEM[(void *)&IV224]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV224]+8 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (mem:DI (plus:DI (reg/f:DI 104)
                (const_int 8 [0x8])) [0 MEM[(void *)state_18(D) + 16B]+8 S8 A8])
        (reg:DI 107 [ MEM[(void *)&IV224]+8 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107 [ MEM[(void *)&IV224]+8 ])
        (nil)))
(insn 24 23 25 4 (set (reg:DI 108 [ MEM[(void *)&IV224]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV224]+16 S8 A128])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 25 24 26 4 (set (mem:DI (plus:DI (reg/f:DI 104)
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+16 S8 A8])
        (reg:DI 108 [ MEM[(void *)&IV224]+16 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ MEM[(void *)&IV224]+16 ])
        (nil)))
(insn 26 25 27 4 (set (reg:DI 109 [ MEM[(void *)&IV224]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV224]+24 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 27 26 30 4 (set (mem:DI (plus:DI (reg/f:DI 104)
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 16B]+24 S8 A8])
        (reg:DI 109 [ MEM[(void *)&IV224]+24 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ MEM[(void *)&IV224]+24 ])
        (expr_list:REG_DEAD (reg/f:DI 104)
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 5, loop depth 0, count 0, freq 111, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 110 112 113 114 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 110 112 113 114 115
;; live  kill	 17 [flags]
(code_label 30 27 31 5 72 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 5 (parallel [
            (set (reg/f:DI 110)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:213 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 32 35 5 (set (reg:DI 112 [ MEM[(void *)&IV256] ])
        (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(void *)&IV256]+0 S8 A256])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+0 S8 A8])
        (reg:DI 112 [ MEM[(void *)&IV256] ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ MEM[(void *)&IV256] ])
        (nil)))
(insn 36 35 37 5 (set (reg:DI 113 [ MEM[(void *)&IV256]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV256]+8 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (mem:DI (plus:DI (reg/f:DI 110)
                (const_int 8 [0x8])) [0 MEM[(void *)state_18(D) + 16B]+8 S8 A8])
        (reg:DI 113 [ MEM[(void *)&IV256]+8 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113 [ MEM[(void *)&IV256]+8 ])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 114 [ MEM[(void *)&IV256]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV256]+16 S8 A128])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (set (mem:DI (plus:DI (reg/f:DI 110)
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+16 S8 A8])
        (reg:DI 114 [ MEM[(void *)&IV256]+16 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114 [ MEM[(void *)&IV256]+16 ])
        (nil)))
(insn 40 39 41 5 (set (reg:DI 115 [ MEM[(void *)&IV256]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV256]+24 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 41 40 42 5 (set (mem:DI (plus:DI (reg/f:DI 110)
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 16B]+24 S8 A8])
        (reg:DI 115 [ MEM[(void *)&IV256]+24 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ MEM[(void *)&IV256]+24 ])
        (expr_list:REG_DEAD (reg/f:DI 110)
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 6, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 116 117 118 119 122 123 124 125 126
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 116 117 118 119 122 123 124 125 126
;; live  kill	 17 [flags]
(code_label 42 41 43 6 73 "" [0 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 48 [0x30])) [2 state_18(D)->t32+0 S4 A64])
        (const_int 0 [0])) blake_ref.c:215 90 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 52 [0x34])) [2 state_18(D)->t32+4 S4 A32])
        (const_int 0 [0])) blake_ref.c:216 90 {*movsi_internal}
     (nil))
(insn 46 45 49 6 (parallel [
            (set (reg/f:DI 116 [ D.5936 ])
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 46 50 6 (set (reg:DI 119)
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 50 49 53 6 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 56 [0x38])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 53 50 54 6 (parallel [
            (set (reg/f:DI 122)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 6 (set (mem:DI (plus:DI (reg/f:DI 122)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122)
        (nil)))
(insn 55 54 56 6 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 56 55 57 6 (parallel [
            (set (reg/f:DI 123)
                (and:DI (reg/f:DI 123)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 57 56 58 6 (parallel [
            (set (reg/f:DI 117 [ D.5936 ])
                (minus:DI (reg/f:DI 116 [ D.5936 ])
                    (reg/f:DI 123)))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.5936 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 6 (parallel [
            (set (reg:SI 118)
                (plus:SI (subreg:SI (reg/f:DI 117 [ D.5936 ]) 0)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.5936 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 59 58 60 6 (parallel [
            (set (reg:SI 118)
                (and:SI (reg:SI 118)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 6 (parallel [
            (set (reg:SI 124)
                (lshiftrt:SI (reg:SI 118)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 6 (set (reg:DI 125)
        (zero_extend:DI (reg:SI 124))) 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 124)
        (nil)))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 125)
                (const_int 0 [0]))
            (set (reg/f:DI 123)
                (plus:DI (ashift:DI (reg:DI 125)
                        (const_int 3 [0x3]))
                    (reg/f:DI 123)))
            (set (mem:BLK (reg/f:DI 123) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 119))
            (use (reg:DI 125))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 119)
        (expr_list:REG_UNUSED (reg:DI 125)
            (expr_list:REG_UNUSED (reg/f:DI 123)
                (nil)))))
(insn 63 62 64 6 (set (reg:V4SI 126)
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) blake_ref.c:221 1194 {*movv4si_internal}
     (nil))
(insn 64 63 67 6 (set (mem:V16QI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 120 [0x78])) [2 MEM[(unsigned int *)state_18(D) + 120B]+0 S16 A32])
        (unspec:V16QI [
                (subreg:V16QI (reg:V4SI 126) 0)
            ] UNSPEC_STOREU)) blake_ref.c:221 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V4SI 126)
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 7, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 88 127 128
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 17 [flags] 88 127 128
;; live  kill	 17 [flags]
(code_label 67 64 68 7 71 "" [1 uses])
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (parallel [
            (set (reg:SI 127 [ D.5934 ])
                (plus:SI (reg/v:SI 101 [ hashbitlen ])
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:227 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 5 7 (parallel [
            (set (reg:SI 128 [ D.5934 ])
                (and:SI (reg:SI 127 [ D.5934 ])
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:227 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 127 [ D.5934 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 5 70 71 7 (set (reg:SI 88 [ D.5935 ])
        (const_int 2 [0x2])) blake_ref.c:249 90 {*movsi_internal}
     (nil))
(insn 71 5 72 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 128 [ D.5934 ])
            (const_int 0 [0]))) blake_ref.c:227 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 128 [ D.5934 ])
        (nil)))
(jump_insn 72 71 73 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) blake_ref.c:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 148)
;;  succ:       8 [33.0%]  (FALLTHRU)
;;              13 [67.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 100 101

;; basic block 8, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [33.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 17 [flags]
;; live  kill	
(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 101 [ hashbitlen ])
            (const_int 384 [0x180]))) blake_ref.c:230 7 {*cmpsi_1}
     (nil))
(jump_insn 75 74 76 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) blake_ref.c:230 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 97)
;;  succ:       9 [28.0%]  (FALLTHRU)
;;              10 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 9, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [28.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u94(6){ }u95(7){ }u96(16){ }u97(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 129 131 132 133 134 135 136 137 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 129 131 132 133 134 135 136 137 138
;; live  kill	 17 [flags]
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 79 9 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:231 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 79 77 80 9 (set (reg:DI 131 [ MEM[(void *)&IV384] ])
        (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(void *)&IV384]+0 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 80 79 81 9 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 136 [0x88])) [0 MEM[(void *)state_18(D) + 136B]+0 S8 A8])
        (reg:DI 131 [ MEM[(void *)&IV384] ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131 [ MEM[(void *)&IV384] ])
        (nil)))
(insn 81 80 82 9 (set (reg:DI 132 [ MEM[(void *)&IV384]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV384]+8 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 82 81 83 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 8 [0x8])) [0 MEM[(void *)state_18(D) + 136B]+8 S8 A8])
        (reg:DI 132 [ MEM[(void *)&IV384]+8 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ MEM[(void *)&IV384]+8 ])
        (nil)))
(insn 83 82 84 9 (set (reg:DI 133 [ MEM[(void *)&IV384]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV384]+16 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 84 83 85 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 136B]+16 S8 A8])
        (reg:DI 133 [ MEM[(void *)&IV384]+16 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ MEM[(void *)&IV384]+16 ])
        (nil)))
(insn 85 84 86 9 (set (reg:DI 134 [ MEM[(void *)&IV384]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV384]+24 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 86 85 87 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 136B]+24 S8 A8])
        (reg:DI 134 [ MEM[(void *)&IV384]+24 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134 [ MEM[(void *)&IV384]+24 ])
        (nil)))
(insn 87 86 88 9 (set (reg:DI 135 [ MEM[(void *)&IV384]+32 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV384]+32 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 88 87 89 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 32 [0x20])) [0 MEM[(void *)state_18(D) + 136B]+32 S8 A8])
        (reg:DI 135 [ MEM[(void *)&IV384]+32 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ MEM[(void *)&IV384]+32 ])
        (nil)))
(insn 89 88 90 9 (set (reg:DI 136 [ MEM[(void *)&IV384]+40 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV384]+40 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 90 89 91 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 40 [0x28])) [0 MEM[(void *)state_18(D) + 136B]+40 S8 A8])
        (reg:DI 136 [ MEM[(void *)&IV384]+40 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136 [ MEM[(void *)&IV384]+40 ])
        (nil)))
(insn 91 90 92 9 (set (reg:DI 137 [ MEM[(void *)&IV384]+48 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV384]+48 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 92 91 93 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 48 [0x30])) [0 MEM[(void *)state_18(D) + 136B]+48 S8 A8])
        (reg:DI 137 [ MEM[(void *)&IV384]+48 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137 [ MEM[(void *)&IV384]+48 ])
        (nil)))
(insn 93 92 94 9 (set (reg:DI 138 [ MEM[(void *)&IV384]+56 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV384]+56 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 94 93 97 9 (set (mem:DI (plus:DI (reg/f:DI 129)
                (const_int 56 [0x38])) [0 MEM[(void *)state_18(D) + 136B]+56 S8 A8])
        (reg:DI 138 [ MEM[(void *)&IV384]+56 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 138 [ MEM[(void *)&IV384]+56 ])
        (expr_list:REG_DEAD (reg/f:DI 129)
            (nil))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 10, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 139 141 142 143 144 145 146 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 139 141 142 143 144 145 146 147 148
;; live  kill	 17 [flags]
(code_label 97 94 98 10 76 "" [1 uses])
(note 98 97 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 101 10 (parallel [
            (set (reg/f:DI 139)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:233 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 99 102 10 (set (reg:DI 141 [ MEM[(void *)&IV512] ])
        (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(void *)&IV512]+0 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 136 [0x88])) [0 MEM[(void *)state_18(D) + 136B]+0 S8 A8])
        (reg:DI 141 [ MEM[(void *)&IV512] ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141 [ MEM[(void *)&IV512] ])
        (nil)))
(insn 103 102 104 10 (set (reg:DI 142 [ MEM[(void *)&IV512]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV512]+8 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 8 [0x8])) [0 MEM[(void *)state_18(D) + 136B]+8 S8 A8])
        (reg:DI 142 [ MEM[(void *)&IV512]+8 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 142 [ MEM[(void *)&IV512]+8 ])
        (nil)))
(insn 105 104 106 10 (set (reg:DI 143 [ MEM[(void *)&IV512]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV512]+16 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 106 105 107 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 136B]+16 S8 A8])
        (reg:DI 143 [ MEM[(void *)&IV512]+16 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143 [ MEM[(void *)&IV512]+16 ])
        (nil)))
(insn 107 106 108 10 (set (reg:DI 144 [ MEM[(void *)&IV512]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV512]+24 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 108 107 109 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 136B]+24 S8 A8])
        (reg:DI 144 [ MEM[(void *)&IV512]+24 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144 [ MEM[(void *)&IV512]+24 ])
        (nil)))
(insn 109 108 110 10 (set (reg:DI 145 [ MEM[(void *)&IV512]+32 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV512]+32 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 110 109 111 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 32 [0x20])) [0 MEM[(void *)state_18(D) + 136B]+32 S8 A8])
        (reg:DI 145 [ MEM[(void *)&IV512]+32 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 145 [ MEM[(void *)&IV512]+32 ])
        (nil)))
(insn 111 110 112 10 (set (reg:DI 146 [ MEM[(void *)&IV512]+40 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV512]+40 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 112 111 113 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 40 [0x28])) [0 MEM[(void *)state_18(D) + 136B]+40 S8 A8])
        (reg:DI 146 [ MEM[(void *)&IV512]+40 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 146 [ MEM[(void *)&IV512]+40 ])
        (nil)))
(insn 113 112 114 10 (set (reg:DI 147 [ MEM[(void *)&IV512]+48 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV512]+48 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 114 113 115 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 48 [0x30])) [0 MEM[(void *)state_18(D) + 136B]+48 S8 A8])
        (reg:DI 147 [ MEM[(void *)&IV512]+48 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 147 [ MEM[(void *)&IV512]+48 ])
        (nil)))
(insn 115 114 116 10 (set (reg:DI 148 [ MEM[(void *)&IV512]+56 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV512]+56 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 116 115 117 10 (set (mem:DI (plus:DI (reg/f:DI 139)
                (const_int 56 [0x38])) [0 MEM[(void *)state_18(D) + 136B]+56 S8 A8])
        (reg:DI 148 [ MEM[(void *)&IV512]+56 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148 [ MEM[(void *)&IV512]+56 ])
        (expr_list:REG_DEAD (reg/f:DI 139)
            (nil))))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 11, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u152(6){ }u153(7){ }u154(16){ }u155(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 149 150 151 152 155 156 157 158
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 149 150 151 152 155 156 157 158
;; live  kill	 17 [flags]
(code_label 117 116 118 11 77 "" [0 uses])
(note 118 117 119 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 200 [0xc8])) [3 state_18(D)->t64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:235 89 {*movdi_internal}
     (nil))
(insn 120 119 121 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 208 [0xd0])) [3 state_18(D)->t64+8 S8 A64])
        (const_int 0 [0])) blake_ref.c:236 89 {*movdi_internal}
     (nil))
(insn 121 120 124 11 (parallel [
            (set (reg/f:DI 149 [ D.5936 ])
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 216 [0xd8])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 121 125 11 (set (reg:DI 152)
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 125 124 128 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 216 [0xd8])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 128 125 129 11 (parallel [
            (set (reg/f:DI 155)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 288 [0x120])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 129 128 130 11 (set (mem:DI (plus:DI (reg/f:DI 155)
                (const_int -16 [0xfffffffffffffff0])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155)
        (nil)))
(insn 130 129 131 11 (parallel [
            (set (reg/f:DI 156)
                (plus:DI (reg/v/f:DI 100 [ state ])
                    (const_int 224 [0xe0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 11 (parallel [
            (set (reg/f:DI 156)
                (and:DI (reg/f:DI 156)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 11 (parallel [
            (set (reg/f:DI 150 [ D.5936 ])
                (minus:DI (reg/f:DI 149 [ D.5936 ])
                    (reg/f:DI 156)))
            (clobber (reg:CC 17 flags))
        ]) 261 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 149 [ D.5936 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 133 132 134 11 (parallel [
            (set (reg:SI 151)
                (plus:SI (subreg:SI (reg/f:DI 150 [ D.5936 ]) 0)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:DI 150 [ D.5936 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 11 (parallel [
            (set (reg:SI 151)
                (and:SI (reg:SI 151)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 135 134 136 11 (parallel [
            (set (reg:SI 157)
                (lshiftrt:SI (reg:SI 151)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 11 (set (reg:DI 158)
        (zero_extend:DI (reg:SI 157))) 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 137 136 138 11 (parallel [
            (set (reg:DI 158)
                (const_int 0 [0]))
            (set (reg/f:DI 156)
                (plus:DI (ashift:DI (reg:DI 158)
                        (const_int 3 [0x3]))
                    (reg/f:DI 156)))
            (set (mem:BLK (reg/f:DI 156) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 152))
            (use (reg:DI 158))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 152)
        (expr_list:REG_UNUSED (reg:DI 158)
            (expr_list:REG_UNUSED (reg/f:DI 156)
                (nil)))))
(insn 138 137 139 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 344 [0x158])) [3 state_18(D)->salt64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:241 89 {*movdi_internal}
     (nil))
(insn 139 138 140 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 352 [0x160])) [3 state_18(D)->salt64+8 S8 A64])
        (const_int 0 [0])) blake_ref.c:242 89 {*movdi_internal}
     (nil))
(insn 140 139 141 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 360 [0x168])) [3 state_18(D)->salt64+16 S8 A64])
        (const_int 0 [0])) blake_ref.c:243 89 {*movdi_internal}
     (nil))
(insn 141 140 142 11 (set (mem:DI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 368 [0x170])) [3 state_18(D)->salt64+24 S8 A64])
        (const_int 0 [0])) blake_ref.c:244 89 {*movdi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101

;; basic block 12, loop depth 0, count 0, freq 205, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; live  gen 	 88
;; live  kill	
(code_label 142 141 143 12 74 "" [0 uses])
(note 143 142 144 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 12 (set (mem:SI (reg/v/f:DI 100 [ state ]) [2 state_18(D)->hashbitlen+0 S4 A64])
        (reg/v:SI 101 [ hashbitlen ])) blake_ref.c:251 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 101 [ hashbitlen ])
        (nil)))
(insn 145 144 146 12 (set (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 4 [0x4])) [2 state_18(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:252 90 {*movsi_internal}
     (nil))
(insn 146 145 147 12 (set (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 8 [0x8])) [2 state_18(D)->init+0 S4 A64])
        (const_int 1 [0x1])) blake_ref.c:253 90 {*movsi_internal}
     (nil))
(insn 147 146 6 12 (set (mem:SI (plus:DI (reg/v/f:DI 100 [ state ])
                (const_int 12 [0xc])) [2 state_18(D)->nullt+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:254 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ state ])
        (nil)))
(insn 6 147 148 12 (set (reg:SI 88 [ D.5935 ])
        (const_int 0 [0])) blake_ref.c:256 90 {*movsi_internal}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 13, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 12, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [67.0%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 148 6 149 13 75 "" [1 uses])
(note 149 148 154 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 154 149 155 13 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ D.5935 ])) blake_ref.c:257 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ D.5935 ])
        (nil)))
(insn 155 154 0 13 (use (reg/i:SI 0 ax)) blake_ref.c:257 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function AddSalt (AddSalt, funcdef_no=14, decl_uid=3185, cgraph_uid=14, symbol_order=22)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg:DI 2 cx [ state ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
        (const_int 8 [0x8])) [2 state_4(D)->init+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (reg/v/f:DI 143 [ state ])

   after canon_rtx address: (reg/v/f:DI 143 [ state ])

   after cselib_expand address: (reg/v/f:DI 143 [ state ])

   after canon_rtx address: (reg/v/f:DI 143 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 143 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (reg/v/f:DI 144 [ salt ])

   after canon_rtx address: (reg/v/f:DI 144 [ salt ])

   after cselib_expand address: (reg/v/f:DI 144 [ salt ])

   after canon_rtx address: (reg/v/f:DI 144 [ salt ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8])
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 120 [0x78]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 120 [0x78]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 120 [0x78]))
  varying cselib base=4:4 offset = 120
 processing cselib store [120..124)
mems_found = 1, cannot_delete = false

**scanning insn=19
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8])
 processing cselib load against insn 18
removing from active insn=18 has store
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 124 [0x7c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 124 [0x7c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 124 [0x7c]))
  varying cselib base=4:4 offset = 124
 processing cselib store [124..128)
mems_found = 1, cannot_delete = false

**scanning insn=22
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8])
 processing cselib load against insn 21
removing from active insn=21 has store
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 128 [0x80]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 128 [0x80]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 128 [0x80]))
  varying cselib base=4:4 offset = 128
 processing cselib store [128..132)
mems_found = 1, cannot_delete = false

**scanning insn=25
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 12 [0xc])) [0 MEM[(const BitSequence *)salt_7(D) + 12B]+0 S4 A8])
 processing cselib load against insn 24
removing from active insn=24 has store
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 132 [0x84]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 132 [0x84]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 132 [0x84]))
  varying cselib base=4:4 offset = 132
 processing cselib store [132..136)
mems_found = 1, cannot_delete = false

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=32
  mem: (reg/v/f:DI 144 [ salt ])

   after canon_rtx address: (reg/v/f:DI 144 [ salt ])

   after cselib_expand address: (reg/v/f:DI 144 [ salt ])

   after canon_rtx address: (reg/v/f:DI 144 [ salt ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:DI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8])
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 344 [0x158]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 344 [0x158]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 344 [0x158]))
  varying cselib base=4:4 offset = 344
 processing cselib store [344..352)
mems_found = 1, cannot_delete = false

**scanning insn=35
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 8 [0x8]))
  varying cselib base=1:1 offset = 8
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8])
 processing cselib load against insn 34
removing from active insn=34 has store
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 352 [0x160]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 352 [0x160]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 352 [0x160]))
  varying cselib base=4:4 offset = 352
 processing cselib store [352..360)
mems_found = 1, cannot_delete = false

**scanning insn=38
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8])
 processing cselib load against insn 37
removing from active insn=37 has store
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 360 [0x168]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 360 [0x168]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 360 [0x168]))
  varying cselib base=4:4 offset = 360
 processing cselib store [360..368)
mems_found = 1, cannot_delete = false

**scanning insn=41
  mem: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 144 [ salt ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
        (const_int 24 [0x18])) [0 MEM[(const BitSequence *)salt_7(D) + 24B]+0 S8 A8])
 processing cselib load against insn 40
removing from active insn=40 has store
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
  mem: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 368 [0x170]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 368 [0x170]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 143 [ state ])
    (const_int 368 [0x170]))
  varying cselib base=4:4 offset = 368
 processing cselib store [368..376)
mems_found = 1, cannot_delete = false

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


AddSalt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 17[flags]
;;  ref usage 	r0={1d,2u} r1={1d,1u} r2={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u,2e} r17={2d,2u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} r87={3d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r143={1d,10u} r144={1d,8u,6e} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 108{36d,64u,8e} in 35{35 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 143 144
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 143 144
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 143 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 144 [ salt ])
        (reg:DI 1 dx [ salt ])) blake_ref.c:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ salt ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 salt+0 S8 A64])
            (nil))))
(note 4 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 10 2 (set (reg:SI 87 [ D.5941 ])
        (const_int 1 [0x1])) blake_ref.c:269 90 {*movsi_internal}
     (nil))
(insn 10 5 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
                    (const_int 8 [0x8])) [2 state_4(D)->init+0 S4 A64])
            (const_int 1 [0x1]))) blake_ref.c:268 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) blake_ref.c:268 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 44)
;;  succ:       6 [62.2%] 
;;              3 [37.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 143 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 143 144

;; basic block 3, loop depth 0, count 0, freq 3782, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [37.8%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; live  gen 	 17 [flags]
;; live  kill	
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 143 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:271 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) blake_ref.c:271 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 30)
;;  succ:       4 [39.0%]  (FALLTHRU)
;;              5 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144

;; basic block 4, loop depth 0, count 0, freq 1475, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [39.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; lr  def 	 87 90 91 92 93 145 146 147 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; live  gen 	 87 90 91 92 93 145 146 147 148
;; live  kill	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 145 [ MEM[(const BitSequence *)salt_7(D)] ])
        (mem:SI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:SI 90 [ D.5943 ])
        (bswap:SI (reg:SI 145 [ MEM[(const BitSequence *)salt_7(D)] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 145 [ MEM[(const BitSequence *)salt_7(D)] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8]))
            (nil))))
(insn 18 17 19 4 (set (mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 120 [0x78])) [2 state_4(D)->salt32+0 S4 A64])
        (reg:SI 90 [ D.5943 ])) blake_ref.c:272 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ D.5943 ])
        (nil)))
(insn 19 18 20 4 (set (reg:SI 146 [ MEM[(const BitSequence *)salt_7(D) + 4B] ])
        (mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 91 [ D.5943 ])
        (bswap:SI (reg:SI 146 [ MEM[(const BitSequence *)salt_7(D) + 4B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 146 [ MEM[(const BitSequence *)salt_7(D) + 4B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
                        (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8]))
            (nil))))
(insn 21 20 22 4 (set (mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 124 [0x7c])) [2 state_4(D)->salt32+4 S4 A32])
        (reg:SI 91 [ D.5943 ])) blake_ref.c:273 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91 [ D.5943 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 147 [ MEM[(const BitSequence *)salt_7(D) + 8B] ])
        (mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8])) 90 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:SI 92 [ D.5943 ])
        (bswap:SI (reg:SI 147 [ MEM[(const BitSequence *)salt_7(D) + 8B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 147 [ MEM[(const BitSequence *)salt_7(D) + 8B] ])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8]))
            (nil))))
(insn 24 23 25 4 (set (mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 128 [0x80])) [2 state_4(D)->salt32+8 S4 A64])
        (reg:SI 92 [ D.5943 ])) blake_ref.c:274 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.5943 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 148 [ MEM[(const BitSequence *)salt_7(D) + 12B] ])
        (mem:SI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 12 [0xc])) [0 MEM[(const BitSequence *)salt_7(D) + 12B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 144 [ salt ])
        (nil)))
(insn 26 25 27 4 (set (reg:SI 93 [ D.5943 ])
        (bswap:SI (reg:SI 148 [ MEM[(const BitSequence *)salt_7(D) + 12B] ]))) 765 {*bswapsi2}
     (expr_list:REG_DEAD (reg:SI 148 [ MEM[(const BitSequence *)salt_7(D) + 12B] ])
        (nil)))
(insn 27 26 7 4 (set (mem:SI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 132 [0x84])) [2 state_4(D)->salt32+12 S4 A32])
        (reg:SI 93 [ D.5943 ])) blake_ref.c:275 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 143 [ state ])
        (expr_list:REG_DEAD (reg:SI 93 [ D.5943 ])
            (nil))))
(insn 7 27 30 4 (set (reg:SI 87 [ D.5941 ])
        (const_int 0 [0])) blake_ref.c:284 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 5, loop depth 0, count 0, freq 2307, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [61.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; lr  def 	 87 94 95 96 97 149 150 151 152
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 144
;; live  gen 	 87 94 95 96 97 149 150 151 152
;; live  kill	
(code_label 30 7 31 5 83 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 149 [ MEM[(const BitSequence *)salt_7(D)] ])
        (mem:DI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 33 32 34 5 (set (reg:DI 94 [ D.5944 ])
        (bswap:DI (reg:DI 149 [ MEM[(const BitSequence *)salt_7(D)] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 149 [ MEM[(const BitSequence *)salt_7(D)] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (reg/v/f:DI 144 [ salt ]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8]))
            (nil))))
(insn 34 33 35 5 (set (mem:DI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 344 [0x158])) [3 state_4(D)->salt64+0 S8 A64])
        (reg:DI 94 [ D.5944 ])) blake_ref.c:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.5944 ])
        (nil)))
(insn 35 34 36 5 (set (reg:DI 150 [ MEM[(const BitSequence *)salt_7(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg:DI 95 [ D.5944 ])
        (bswap:DI (reg:DI 150 [ MEM[(const BitSequence *)salt_7(D) + 8B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 150 [ MEM[(const BitSequence *)salt_7(D) + 8B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8]))
            (nil))))
(insn 37 36 38 5 (set (mem:DI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 352 [0x160])) [3 state_4(D)->salt64+8 S8 A64])
        (reg:DI 95 [ D.5944 ])) blake_ref.c:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ D.5944 ])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 151 [ MEM[(const BitSequence *)salt_7(D) + 16B] ])
        (mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (set (reg:DI 96 [ D.5944 ])
        (bswap:DI (reg:DI 151 [ MEM[(const BitSequence *)salt_7(D) + 16B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 151 [ MEM[(const BitSequence *)salt_7(D) + 16B] ])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
                        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8]))
            (nil))))
(insn 40 39 41 5 (set (mem:DI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 360 [0x168])) [3 state_4(D)->salt64+16 S8 A64])
        (reg:DI 96 [ D.5944 ])) blake_ref.c:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.5944 ])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 152 [ MEM[(const BitSequence *)salt_7(D) + 24B] ])
        (mem:DI (plus:DI (reg/v/f:DI 144 [ salt ])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)salt_7(D) + 24B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 144 [ salt ])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 97 [ D.5944 ])
        (bswap:DI (reg:DI 152 [ MEM[(const BitSequence *)salt_7(D) + 24B] ]))) 766 {*bswapdi2}
     (expr_list:REG_DEAD (reg:DI 152 [ MEM[(const BitSequence *)salt_7(D) + 24B] ])
        (nil)))
(insn 43 42 6 5 (set (mem:DI (plus:DI (reg/v/f:DI 143 [ state ])
                (const_int 368 [0x170])) [3 state_4(D)->salt64+24 S8 A64])
        (reg:DI 97 [ D.5944 ])) blake_ref.c:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 143 [ state ])
        (expr_list:REG_DEAD (reg:DI 97 [ D.5944 ])
            (nil))))
(insn 6 43 44 5 (set (reg:SI 87 [ D.5941 ])
        (const_int 0 [0])) blake_ref.c:284 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [62.2%] 
;;              4 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 44 6 45 6 82 "" [1 uses])
(note 45 44 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 45 51 6 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ D.5941 ])) blake_ref.c:285 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.5941 ])
        (nil)))
(insn 51 50 0 6 (use (reg/i:SI 0 ax)) blake_ref.c:285 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Update (Update, funcdef_no=17, decl_uid=3189, cgraph_uid=17, symbol_order=25)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (reg/v/f:DI 91 [ state ])

   after canon_rtx address: (reg/v/f:DI 91 [ state ])

   after cselib_expand address: (reg:DI 2 cx [ state ])

   after canon_rtx address: (reg:DI 2 cx [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 91 [ state ]) [2 state_2(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 91 [ state ])
        (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=0 offset=0 
 processing const load gid=0[0..1)

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=29
  mem: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 91 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 91 [ state ])
        (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Update

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d,2u} r1={5d,3u} r2={5d,3u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u,3e} r17={7d,5u} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={2d} r26={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={5d,3u} r38={3d} r39={2d} r40={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r91={1d,5u} r92={1d,2u} r93={1d,4u} 
;;    total ref usage 214{147d,64u,3e} in 23{21 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 91 92 93
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 17 [flags] 91 92 93
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 91 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ data ])
        (reg:DI 1 dx [ data ])) blake_ref.c:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 93 [ databitlen ])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 91 [ state ]) [2 state_2(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 24)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(6){ }u13(7){ }u14(16){ }u15(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 17 [flags]
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 93 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2071 (nil)))
 -> 16)
;;  succ:       4 [79.3%]  (FALLTHRU)
;;              5 [20.7%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93

;; basic block 4, loop depth 0, count 0, freq 3964, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [79.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 17 [flags]
;; live  kill	
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 91 [ state ])
                    (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 37)
;;  succ:       9 [72.0%] 
;;              5 [28.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93

;; basic block 5, loop depth 0, count 0, freq 2146, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [28.0%]  (FALLTHRU)
;;              3 [20.7%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 16 15 17 5 89 "" [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:DI 37 r8)
        (reg/v:DI 93 [ databitlen ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 93 [ databitlen ])
        (nil)))
(insn 19 18 20 5 (set (reg:DI 1 dx)
        (reg/v/f:DI 92 [ data ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ data ])
        (nil)))
(insn 20 19 21 5 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ state ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ state ])
        (nil)))
(call_insn 21 20 24 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 24 21 25 6 88 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 93 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 31)
;;  succ:       7 [71.0%]  (FALLTHRU)
;;              8 [29.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93

;; basic block 7, loop depth 0, count 0, freq 3550, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [71.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 17 [flags]
;; live  kill	
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 91 [ state ])
                    (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 31 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 37)
;;  succ:       9 [62.2%] 
;;              8 [37.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93

;; basic block 8, loop depth 0, count 0, freq 2793, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [37.8%]  (FALLTHRU)
;;              6 [29.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 93
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 31 30 32 8 91 "" [1 uses])
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:DI 37 r8)
        (reg/v:DI 93 [ databitlen ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 93 [ databitlen ])
        (nil)))
(insn 34 33 35 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 92 [ data ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ data ])
        (nil)))
(insn 35 34 36 8 (set (reg:DI 2 cx)
        (reg/v/f:DI 91 [ state ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ state ])
        (nil)))
(call_insn 36 35 37 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [62.2%] 
;;              8 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;;              4 [72.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(6){ }u59(7){ }u60(16){ }u61(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 37 36 38 9 90 "" [2 uses])
(note 38 37 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 43 38 44 9 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) blake_ref.c:403 90 {*movsi_internal}
     (nil))
(insn 44 43 0 9 (use (reg/i:SI 0 ax)) blake_ref.c:403 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Final (Final, funcdef_no=20, decl_uid=3192, cgraph_uid=20, symbol_order=28)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg:DI 2 cx [ state ])

   after canon_rtx address: (reg:DI 2 cx [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))
  gid=0 offset=-20 
 processing const base store gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=12
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -19 [0xffffffffffffffed]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -19 [0xffffffffffffffed]))
  gid=0 offset=-19 
 processing const base store gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=13
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -18 [0xffffffffffffffee]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -18 [0xffffffffffffffee]))
  gid=0 offset=-18 
 processing const base store gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=14
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -17 [0xffffffffffffffef]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -17 [0xffffffffffffffef]))
  gid=0 offset=-17 
 processing const base store gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=15
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=6:6 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
 processing cselib load against insn 14
 processing cselib load against insn 13
 processing cselib load against insn 12
 processing cselib load against insn 11
mems_found = 0, cannot_delete = true

**scanning insn=16
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=6:6 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
 processing cselib load against insn 14
 processing cselib load against insn 13
 processing cselib load against insn 12
 processing cselib load against insn 11
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 52 [0x34]))
  varying cselib base=6:6 offset = 52
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 52 [0x34])) [2 state_4(D)->t32+4 S4 A32])
 processing cselib load against insn 14
 processing cselib load against insn 13
 processing cselib load against insn 12
 processing cselib load against insn 11
mems_found = 0, cannot_delete = true

**scanning insn=1081
mems_found = 0, cannot_delete = true

**scanning insn=1082
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
  gid=0 offset=-16 
 processing const base store gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -15 [0xfffffffffffffff1]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -15 [0xfffffffffffffff1]))
  gid=0 offset=-15 
 processing const base store gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -14 [0xfffffffffffffff2]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -14 [0xfffffffffffffff2]))
  gid=0 offset=-14 
 processing const base store gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=32
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -13 [0xfffffffffffffff3]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -13 [0xfffffffffffffff3]))
  gid=0 offset=-13 
 processing const base store gid=0[-13..-12)
    trying store in insn=31 gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))
  gid=0 offset=-12 
 processing const base store gid=0[-12..-11)
    trying store in insn=32 gid=0[-13..-12)
    trying store in insn=31 gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -11 [0xfffffffffffffff5]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -11 [0xfffffffffffffff5]))
  gid=0 offset=-11 
 processing const base store gid=0[-11..-10)
    trying store in insn=34 gid=0[-12..-11)
    trying store in insn=32 gid=0[-13..-12)
    trying store in insn=31 gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -10 [0xfffffffffffffff6]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -10 [0xfffffffffffffff6]))
  gid=0 offset=-10 
 processing const base store gid=0[-10..-9)
    trying store in insn=36 gid=0[-11..-10)
    trying store in insn=34 gid=0[-12..-11)
    trying store in insn=32 gid=0[-13..-12)
    trying store in insn=31 gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=39
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -9 [0xfffffffffffffff7]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -9 [0xfffffffffffffff7]))
  gid=0 offset=-9 
 processing const base store gid=0[-9..-8)
    trying store in insn=38 gid=0[-10..-9)
    trying store in insn=36 gid=0[-11..-10)
    trying store in insn=34 gid=0[-12..-11)
    trying store in insn=32 gid=0[-13..-12)
    trying store in insn=31 gid=0[-14..-13)
    trying store in insn=29 gid=0[-15..-14)
    trying store in insn=27 gid=0[-16..-15)
    trying store in insn=14 gid=0[-17..-16)
    trying store in insn=13 gid=0[-18..-17)
    trying store in insn=12 gid=0[-19..-18)
    trying store in insn=11 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=57
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=4:4 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=67
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=4:4 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=78
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=102
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=106 has store

**scanning insn=111
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=3:3 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=113
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=132
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=1:1 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=139
mems_found = 0, cannot_delete = true

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=137 has store

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=150
mems_found = 0, cannot_delete = true

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=161
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=164
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 659))
        (reg/v/f:DI 633 [ state ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 659))
        (reg/v/f:DI 633 [ state ]))
    (const_int 56 [0x38]))
  varying cselib base=18:17614 offset = 56
 processing cselib load mem:(mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
            (reg:DI 669 [ D.6033 ]))
        (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=169
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 659))
        (reg/v/f:DI 633 [ state ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 659))
        (reg/v/f:DI 633 [ state ]))
    (const_int 56 [0x38]))
  varying cselib base=18:17614 offset = 56
 processing cselib store [56..57)
mems_found = 1, cannot_delete = false

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 669 [ D.6033 ]))
    (const_int 56 [0x38]))
  varying cselib base=6:77 offset = 56
 processing cselib store [56..57)
mems_found = 1, cannot_delete = false

**scanning insn=182
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=5:5 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=192
mems_found = 0, cannot_delete = true

**scanning insn=193
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=196
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=3:3 offset = 4
 processing cselib store [4..8)
    trying store in insn=193 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=197
mems_found = 0, cannot_delete = true

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=200
mems_found = 0, cannot_delete = true

**scanning insn=201
mems_found = 0, cannot_delete = true

**scanning insn=202
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=205
mems_found = 0, cannot_delete = true

**scanning insn=206
mems_found = 0, cannot_delete = true

**scanning insn=207
mems_found = 0, cannot_delete = true

**scanning insn=210
mems_found = 0, cannot_delete = true

**scanning insn=211
mems_found = 0, cannot_delete = true

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=213
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=214
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=215
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=224
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=225
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=3:3 offset = 4
 processing cselib store [4..8)
    trying store in insn=224 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=229
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=225 has store
removing from active insn=224 has store

**scanning insn=230
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=233
mems_found = 0, cannot_delete = true

**scanning insn=234
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=230 has store

**scanning insn=235
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=3:3 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=236
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
 processing cselib load against insn 235
mems_found = 0, cannot_delete = true

**scanning insn=237
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 235
mems_found = 0, cannot_delete = true

**scanning insn=242
mems_found = 0, cannot_delete = true

**scanning insn=243
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=246
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=3:3 offset = 4
 processing cselib store [4..8)
    trying store in insn=243 gid=-1[48..52)
mems_found = 1, cannot_delete = false

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=256
mems_found = 0, cannot_delete = true

**scanning insn=257
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=261
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=263
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=264
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=267
mems_found = 0, cannot_delete = true

**scanning insn=268
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=271
mems_found = 0, cannot_delete = true

**scanning insn=272
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=268 has store

**scanning insn=273
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=3:3 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=274
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
 processing cselib load against insn 273
mems_found = 0, cannot_delete = true

**scanning insn=275
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 273
mems_found = 0, cannot_delete = true

**scanning insn=278
mems_found = 0, cannot_delete = true

**scanning insn=279
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=280
mems_found = 0, cannot_delete = true

**scanning insn=281
mems_found = 0, cannot_delete = true

**scanning insn=283
mems_found = 0, cannot_delete = true

**scanning insn=284
mems_found = 0, cannot_delete = true

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=286
mems_found = 0, cannot_delete = true

**scanning insn=287
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=288
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=4:4 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=295
mems_found = 0, cannot_delete = true

**scanning insn=296
mems_found = 0, cannot_delete = true

**scanning insn=297
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=298
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=4:4 offset = 48
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=301
mems_found = 0, cannot_delete = true

**scanning insn=302
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=303
mems_found = 0, cannot_delete = true

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=306
mems_found = 0, cannot_delete = true

**scanning insn=307
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=302 has store

**scanning insn=310
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=311
mems_found = 0, cannot_delete = true

**scanning insn=312
  mem: (reg/v/f:DI 634 [ hashval ])

   after canon_rtx address: (reg/v/f:DI 634 [ hashval ])

   after cselib_expand address: (reg/v/f:DI 634 [ hashval ])

   after canon_rtx address: (reg/v/f:DI 634 [ hashval ])
  varying cselib base=5:5 offset = 0
 processing cselib store [0..1)
mems_found = 1, cannot_delete = false

**scanning insn=313
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
 processing cselib load against insn 312
removing from active insn=312 has store
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))
  varying cselib base=5:5 offset = 1
 processing cselib store [1..2)
mems_found = 1, cannot_delete = false

**scanning insn=316
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
 processing cselib load against insn 315
removing from active insn=315 has store
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))
  varying cselib base=5:5 offset = 2
 processing cselib store [2..3)
mems_found = 1, cannot_delete = false

**scanning insn=319
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 16 [0x10]))
  varying cselib base=1:1 offset = 16
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
 processing cselib load against insn 318
removing from active insn=318 has store
mems_found = 0, cannot_delete = true

**scanning insn=320
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))
  varying cselib base=5:5 offset = 3
 processing cselib store [3..4)
mems_found = 1, cannot_delete = false

**scanning insn=321
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))
  varying cselib base=1:1 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
 processing cselib load against insn 320
removing from active insn=320 has store
mems_found = 0, cannot_delete = true

**scanning insn=322
mems_found = 0, cannot_delete = true

**scanning insn=323
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))
  varying cselib base=5:5 offset = 4
 processing cselib store [4..5)
mems_found = 1, cannot_delete = false

**scanning insn=324
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))
  varying cselib base=1:1 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
 processing cselib load against insn 323
removing from active insn=323 has store
mems_found = 0, cannot_delete = true

**scanning insn=325
mems_found = 0, cannot_delete = true

**scanning insn=326
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))
  varying cselib base=5:5 offset = 5
 processing cselib store [5..6)
mems_found = 1, cannot_delete = false

**scanning insn=327
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))
  varying cselib base=1:1 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
 processing cselib load against insn 326
removing from active insn=326 has store
mems_found = 0, cannot_delete = true

**scanning insn=328
mems_found = 0, cannot_delete = true

**scanning insn=329
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))
  varying cselib base=5:5 offset = 6
 processing cselib store [6..7)
mems_found = 1, cannot_delete = false

**scanning insn=330
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 20 [0x14]))
  varying cselib base=1:1 offset = 20
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
 processing cselib load against insn 329
removing from active insn=329 has store
mems_found = 0, cannot_delete = true

**scanning insn=331
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))
  varying cselib base=5:5 offset = 7
 processing cselib store [7..8)
mems_found = 1, cannot_delete = false

**scanning insn=332
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
 processing cselib load against insn 331
removing from active insn=331 has store
mems_found = 0, cannot_delete = true

**scanning insn=333
mems_found = 0, cannot_delete = true

**scanning insn=334
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))
  varying cselib base=5:5 offset = 8
 processing cselib store [8..9)
mems_found = 1, cannot_delete = false

**scanning insn=335
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
 processing cselib load against insn 334
removing from active insn=334 has store
mems_found = 0, cannot_delete = true

**scanning insn=336
mems_found = 0, cannot_delete = true

**scanning insn=337
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))
  varying cselib base=5:5 offset = 9
 processing cselib store [9..10)
mems_found = 1, cannot_delete = false

**scanning insn=338
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
 processing cselib load against insn 337
removing from active insn=337 has store
mems_found = 0, cannot_delete = true

**scanning insn=339
mems_found = 0, cannot_delete = true

**scanning insn=340
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))
  varying cselib base=5:5 offset = 10
 processing cselib store [10..11)
mems_found = 1, cannot_delete = false

**scanning insn=341
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 24 [0x18]))
  varying cselib base=1:1 offset = 24
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
 processing cselib load against insn 340
removing from active insn=340 has store
mems_found = 0, cannot_delete = true

**scanning insn=342
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))
  varying cselib base=5:5 offset = 11
 processing cselib store [11..12)
mems_found = 1, cannot_delete = false

**scanning insn=343
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))
  varying cselib base=1:1 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
 processing cselib load against insn 342
removing from active insn=342 has store
mems_found = 0, cannot_delete = true

**scanning insn=344
mems_found = 0, cannot_delete = true

**scanning insn=345
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))
  varying cselib base=5:5 offset = 12
 processing cselib store [12..13)
mems_found = 1, cannot_delete = false

**scanning insn=346
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))
  varying cselib base=1:1 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
 processing cselib load against insn 345
removing from active insn=345 has store
mems_found = 0, cannot_delete = true

**scanning insn=347
mems_found = 0, cannot_delete = true

**scanning insn=348
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))
  varying cselib base=5:5 offset = 13
 processing cselib store [13..14)
mems_found = 1, cannot_delete = false

**scanning insn=349
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))
  varying cselib base=1:1 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
 processing cselib load against insn 348
removing from active insn=348 has store
mems_found = 0, cannot_delete = true

**scanning insn=350
mems_found = 0, cannot_delete = true

**scanning insn=351
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))
  varying cselib base=5:5 offset = 14
 processing cselib store [14..15)
mems_found = 1, cannot_delete = false

**scanning insn=352
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 28 [0x1c]))
  varying cselib base=1:1 offset = 28
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
 processing cselib load against insn 351
removing from active insn=351 has store
mems_found = 0, cannot_delete = true

**scanning insn=353
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))
  varying cselib base=5:5 offset = 15
 processing cselib store [15..16)
mems_found = 1, cannot_delete = false

**scanning insn=354
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
 processing cselib load against insn 353
removing from active insn=353 has store
mems_found = 0, cannot_delete = true

**scanning insn=355
mems_found = 0, cannot_delete = true

**scanning insn=356
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))
  varying cselib base=5:5 offset = 16
 processing cselib store [16..17)
mems_found = 1, cannot_delete = false

**scanning insn=357
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
 processing cselib load against insn 356
removing from active insn=356 has store
mems_found = 0, cannot_delete = true

**scanning insn=358
mems_found = 0, cannot_delete = true

**scanning insn=359
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))
  varying cselib base=5:5 offset = 17
 processing cselib store [17..18)
mems_found = 1, cannot_delete = false

**scanning insn=360
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
 processing cselib load against insn 359
removing from active insn=359 has store
mems_found = 0, cannot_delete = true

**scanning insn=361
mems_found = 0, cannot_delete = true

**scanning insn=362
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))
  varying cselib base=5:5 offset = 18
 processing cselib store [18..19)
mems_found = 1, cannot_delete = false

**scanning insn=363
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 32 [0x20]))
  varying cselib base=1:1 offset = 32
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
 processing cselib load against insn 362
removing from active insn=362 has store
mems_found = 0, cannot_delete = true

**scanning insn=364
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))
  varying cselib base=5:5 offset = 19
 processing cselib store [19..20)
mems_found = 1, cannot_delete = false

**scanning insn=365
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
 processing cselib load against insn 364
removing from active insn=364 has store
mems_found = 0, cannot_delete = true

**scanning insn=366
mems_found = 0, cannot_delete = true

**scanning insn=367
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))
  varying cselib base=5:5 offset = 20
 processing cselib store [20..21)
mems_found = 1, cannot_delete = false

**scanning insn=368
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
 processing cselib load against insn 367
removing from active insn=367 has store
mems_found = 0, cannot_delete = true

**scanning insn=369
mems_found = 0, cannot_delete = true

**scanning insn=370
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))
  varying cselib base=5:5 offset = 21
 processing cselib store [21..22)
mems_found = 1, cannot_delete = false

**scanning insn=371
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
 processing cselib load against insn 370
removing from active insn=370 has store
mems_found = 0, cannot_delete = true

**scanning insn=372
mems_found = 0, cannot_delete = true

**scanning insn=373
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))
  varying cselib base=5:5 offset = 22
 processing cselib store [22..23)
mems_found = 1, cannot_delete = false

**scanning insn=374
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 36 [0x24]))
  varying cselib base=1:1 offset = 36
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
 processing cselib load against insn 373
removing from active insn=373 has store
mems_found = 0, cannot_delete = true

**scanning insn=375
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))
  varying cselib base=5:5 offset = 23
 processing cselib store [23..24)
mems_found = 1, cannot_delete = false

**scanning insn=376
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
 processing cselib load against insn 375
removing from active insn=375 has store
mems_found = 0, cannot_delete = true

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=378
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))
  varying cselib base=5:5 offset = 24
 processing cselib store [24..25)
mems_found = 1, cannot_delete = false

**scanning insn=379
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
 processing cselib load against insn 378
removing from active insn=378 has store
mems_found = 0, cannot_delete = true

**scanning insn=380
mems_found = 0, cannot_delete = true

**scanning insn=381
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))
  varying cselib base=5:5 offset = 25
 processing cselib store [25..26)
mems_found = 1, cannot_delete = false

**scanning insn=382
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
 processing cselib load against insn 381
removing from active insn=381 has store
mems_found = 0, cannot_delete = true

**scanning insn=383
mems_found = 0, cannot_delete = true

**scanning insn=384
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))
  varying cselib base=5:5 offset = 26
 processing cselib store [26..27)
mems_found = 1, cannot_delete = false

**scanning insn=385
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 40 [0x28]))
  varying cselib base=1:1 offset = 40
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
 processing cselib load against insn 384
removing from active insn=384 has store
mems_found = 0, cannot_delete = true

**scanning insn=386
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))
  varying cselib base=5:5 offset = 27
 processing cselib store [27..28)
mems_found = 1, cannot_delete = false

**scanning insn=387
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 386
removing from active insn=386 has store
mems_found = 0, cannot_delete = true

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=390
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))
  varying cselib base=1:1 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=391
mems_found = 0, cannot_delete = true

**scanning insn=392
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))
  varying cselib base=5:5 offset = 28
 processing cselib store [28..29)
mems_found = 1, cannot_delete = false

**scanning insn=393
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))
  varying cselib base=1:1 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
 processing cselib load against insn 392
removing from active insn=392 has store
mems_found = 0, cannot_delete = true

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=395
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))
  varying cselib base=5:5 offset = 29
 processing cselib store [29..30)
mems_found = 1, cannot_delete = false

**scanning insn=396
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))
  varying cselib base=1:1 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
 processing cselib load against insn 395
removing from active insn=395 has store
mems_found = 0, cannot_delete = true

**scanning insn=397
mems_found = 0, cannot_delete = true

**scanning insn=398
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))
  varying cselib base=5:5 offset = 30
 processing cselib store [30..31)
mems_found = 1, cannot_delete = false

**scanning insn=399
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 44 [0x2c]))
  varying cselib base=1:1 offset = 44
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
 processing cselib load against insn 398
removing from active insn=398 has store
mems_found = 0, cannot_delete = true

**scanning insn=400
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))
  varying cselib base=5:5 offset = 31
 processing cselib store [31..32)
mems_found = 1, cannot_delete = false

**scanning insn=407
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -20 [0xffffffffffffffec]))
  gid=0 offset=-20 
 processing const base store gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=408
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -19 [0xffffffffffffffed]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -19 [0xffffffffffffffed]))
  gid=0 offset=-19 
 processing const base store gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=409
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -18 [0xffffffffffffffee]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -18 [0xffffffffffffffee]))
  gid=0 offset=-18 
 processing const base store gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=410
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -17 [0xffffffffffffffef]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -17 [0xffffffffffffffef]))
  gid=0 offset=-17 
 processing const base store gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=411
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=6:6 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
 processing cselib load against insn 410
 processing cselib load against insn 409
 processing cselib load against insn 408
 processing cselib load against insn 407
mems_found = 0, cannot_delete = true

**scanning insn=412
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=6:6 offset = 4
 processing cselib load mem:(mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
 processing cselib load against insn 410
 processing cselib load against insn 409
 processing cselib load against insn 408
 processing cselib load against insn 407
mems_found = 0, cannot_delete = true

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=414
mems_found = 0, cannot_delete = true

**scanning insn=415
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 208 [0xd0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 208 [0xd0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 208 [0xd0]))
  varying cselib base=6:6 offset = 208
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 208 [0xd0])) [3 state_4(D)->t64+8 S8 A64])
 processing cselib load against insn 410
 processing cselib load against insn 409
 processing cselib load against insn 408
 processing cselib load against insn 407
mems_found = 0, cannot_delete = true

**scanning insn=1083
mems_found = 0, cannot_delete = true

**scanning insn=1084
mems_found = 0, cannot_delete = true

**scanning insn=422
mems_found = 0, cannot_delete = true

**scanning insn=424
mems_found = 0, cannot_delete = true

**scanning insn=425
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
  gid=0 offset=-16 
 processing const base store gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=426
mems_found = 0, cannot_delete = true

**scanning insn=427
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -15 [0xfffffffffffffff1]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -15 [0xfffffffffffffff1]))
  gid=0 offset=-15 
 processing const base store gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=428
mems_found = 0, cannot_delete = true

**scanning insn=429
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -14 [0xfffffffffffffff2]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -14 [0xfffffffffffffff2]))
  gid=0 offset=-14 
 processing const base store gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=430
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -13 [0xfffffffffffffff3]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -13 [0xfffffffffffffff3]))
  gid=0 offset=-13 
 processing const base store gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=432
mems_found = 0, cannot_delete = true

**scanning insn=433
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -12 [0xfffffffffffffff4]))
  gid=0 offset=-12 
 processing const base store gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=434
mems_found = 0, cannot_delete = true

**scanning insn=435
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -11 [0xfffffffffffffff5]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -11 [0xfffffffffffffff5]))
  gid=0 offset=-11 
 processing const base store gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=436
mems_found = 0, cannot_delete = true

**scanning insn=437
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -10 [0xfffffffffffffff6]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -10 [0xfffffffffffffff6]))
  gid=0 offset=-10 
 processing const base store gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=438
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -9 [0xfffffffffffffff7]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -9 [0xfffffffffffffff7]))
  gid=0 offset=-9 
 processing const base store gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=439
mems_found = 0, cannot_delete = true

**scanning insn=441
mems_found = 0, cannot_delete = true

**scanning insn=442
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
  gid=0 offset=-8 
 processing const base store gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=443
mems_found = 0, cannot_delete = true

**scanning insn=444
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -7 [0xfffffffffffffff9]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -7 [0xfffffffffffffff9]))
  gid=0 offset=-7 
 processing const base store gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=445
mems_found = 0, cannot_delete = true

**scanning insn=446
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -6 [0xfffffffffffffffa]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -6 [0xfffffffffffffffa]))
  gid=0 offset=-6 
 processing const base store gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=447
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -5 [0xfffffffffffffffb]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -5 [0xfffffffffffffffb]))
  gid=0 offset=-5 
 processing const base store gid=0[-5..-4)
    trying store in insn=446 gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=449
mems_found = 0, cannot_delete = true

**scanning insn=450
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -4 [0xfffffffffffffffc]))
  gid=0 offset=-4 
 processing const base store gid=0[-4..-3)
    trying store in insn=447 gid=0[-5..-4)
    trying store in insn=446 gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=451
mems_found = 0, cannot_delete = true

**scanning insn=452
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -3 [0xfffffffffffffffd]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -3 [0xfffffffffffffffd]))
  gid=0 offset=-3 
 processing const base store gid=0[-3..-2)
    trying store in insn=450 gid=0[-4..-3)
    trying store in insn=447 gid=0[-5..-4)
    trying store in insn=446 gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=453
mems_found = 0, cannot_delete = true

**scanning insn=454
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -2 [0xfffffffffffffffe]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -2 [0xfffffffffffffffe]))
  gid=0 offset=-2 
 processing const base store gid=0[-2..-1)
    trying store in insn=452 gid=0[-3..-2)
    trying store in insn=450 gid=0[-4..-3)
    trying store in insn=447 gid=0[-5..-4)
    trying store in insn=446 gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=455
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -1 [0xffffffffffffffff]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -1 [0xffffffffffffffff]))
  gid=0 offset=-1 
 processing const base store gid=0[-1..0)
    trying store in insn=454 gid=0[-2..-1)
    trying store in insn=452 gid=0[-3..-2)
    trying store in insn=450 gid=0[-4..-3)
    trying store in insn=447 gid=0[-5..-4)
    trying store in insn=446 gid=0[-6..-5)
    trying store in insn=444 gid=0[-7..-6)
    trying store in insn=442 gid=0[-8..-7)
    trying store in insn=438 gid=0[-9..-8)
    trying store in insn=437 gid=0[-10..-9)
    trying store in insn=435 gid=0[-11..-10)
    trying store in insn=433 gid=0[-12..-11)
    trying store in insn=430 gid=0[-13..-12)
    trying store in insn=429 gid=0[-14..-13)
    trying store in insn=427 gid=0[-15..-14)
    trying store in insn=425 gid=0[-16..-15)
    trying store in insn=410 gid=0[-17..-16)
    trying store in insn=409 gid=0[-18..-17)
    trying store in insn=408 gid=0[-19..-18)
    trying store in insn=407 gid=0[-20..-19)
mems_found = 1, cannot_delete = false

**scanning insn=457
mems_found = 0, cannot_delete = true

**scanning insn=458
mems_found = 0, cannot_delete = true

**scanning insn=459
mems_found = 0, cannot_delete = true

**scanning insn=461
mems_found = 0, cannot_delete = true

**scanning insn=462
mems_found = 0, cannot_delete = true

**scanning insn=464
mems_found = 0, cannot_delete = true

**scanning insn=465
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=466
mems_found = 0, cannot_delete = true

**scanning insn=467
mems_found = 0, cannot_delete = true

**scanning insn=469
mems_found = 0, cannot_delete = true

**scanning insn=470
mems_found = 0, cannot_delete = true

**scanning insn=471
mems_found = 0, cannot_delete = true

**scanning insn=472
mems_found = 0, cannot_delete = true

**scanning insn=473
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=474
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=4:4 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=479
mems_found = 0, cannot_delete = true

**scanning insn=480
mems_found = 0, cannot_delete = true

**scanning insn=481
mems_found = 0, cannot_delete = true

**scanning insn=482
mems_found = 0, cannot_delete = true

**scanning insn=483
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=484
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=4:4 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=489
mems_found = 0, cannot_delete = true

**scanning insn=490
mems_found = 0, cannot_delete = true

**scanning insn=492
mems_found = 0, cannot_delete = true

**scanning insn=493
mems_found = 0, cannot_delete = true

**scanning insn=495
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=500
mems_found = 0, cannot_delete = true

**scanning insn=501
mems_found = 0, cannot_delete = true

**scanning insn=502
mems_found = 0, cannot_delete = true

**scanning insn=503
mems_found = 0, cannot_delete = true

**scanning insn=504
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=7:7 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=505
mems_found = 0, cannot_delete = true

**scanning insn=506
mems_found = 0, cannot_delete = true

**scanning insn=507
mems_found = 0, cannot_delete = true

**scanning insn=508
mems_found = 0, cannot_delete = true

**scanning insn=509
mems_found = 0, cannot_delete = true

**scanning insn=510
mems_found = 0, cannot_delete = true

**scanning insn=511
mems_found = 0, cannot_delete = true

**scanning insn=512
mems_found = 0, cannot_delete = true

**scanning insn=515
mems_found = 0, cannot_delete = true

**scanning insn=516
mems_found = 0, cannot_delete = true

**scanning insn=517
mems_found = 0, cannot_delete = true

**scanning insn=518
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=519
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=522
mems_found = 0, cannot_delete = true

**scanning insn=523
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=524
mems_found = 0, cannot_delete = true

**scanning insn=525
mems_found = 0, cannot_delete = true

**scanning insn=526
mems_found = 0, cannot_delete = true

**scanning insn=527
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)
removing from active insn=523 has store

**scanning insn=528
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=3:3 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=530
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=531
mems_found = 0, cannot_delete = true

**scanning insn=532
mems_found = 0, cannot_delete = true

**scanning insn=534
mems_found = 0, cannot_delete = true

**scanning insn=535
mems_found = 0, cannot_delete = true

**scanning insn=536
mems_found = 0, cannot_delete = true

**scanning insn=537
mems_found = 0, cannot_delete = true

**scanning insn=538
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=543
mems_found = 0, cannot_delete = true

**scanning insn=544
mems_found = 0, cannot_delete = true

**scanning insn=546
mems_found = 0, cannot_delete = true

**scanning insn=547
mems_found = 0, cannot_delete = true

**scanning insn=548
mems_found = 0, cannot_delete = true

**scanning insn=549
mems_found = 0, cannot_delete = true

**scanning insn=550
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=555
mems_found = 0, cannot_delete = true

**scanning insn=556
mems_found = 0, cannot_delete = true

**scanning insn=557
mems_found = 0, cannot_delete = true

**scanning insn=558
mems_found = 0, cannot_delete = true

**scanning insn=559
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=562
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=563
mems_found = 0, cannot_delete = true

**scanning insn=566
mems_found = 0, cannot_delete = true

**scanning insn=567
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=568
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 567
mems_found = 0, cannot_delete = true

**scanning insn=569
mems_found = 0, cannot_delete = true

**scanning insn=571
mems_found = 0, cannot_delete = true

**scanning insn=572
mems_found = 0, cannot_delete = true

**scanning insn=573
mems_found = 0, cannot_delete = true

**scanning insn=574
mems_found = 0, cannot_delete = true

**scanning insn=575
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=580
mems_found = 0, cannot_delete = true

**scanning insn=581
mems_found = 0, cannot_delete = true

**scanning insn=582
mems_found = 0, cannot_delete = true

**scanning insn=583
mems_found = 0, cannot_delete = true

**scanning insn=584
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=590
mems_found = 0, cannot_delete = true

**scanning insn=591
mems_found = 0, cannot_delete = true

**scanning insn=592
mems_found = 0, cannot_delete = true

**scanning insn=593
mems_found = 0, cannot_delete = true

**scanning insn=595
mems_found = 0, cannot_delete = true

**scanning insn=596
mems_found = 0, cannot_delete = true

**scanning insn=597
mems_found = 0, cannot_delete = true

**scanning insn=598
mems_found = 0, cannot_delete = true

**scanning insn=599
mems_found = 0, cannot_delete = true

**scanning insn=601
mems_found = 0, cannot_delete = true

**scanning insn=602
mems_found = 0, cannot_delete = true

**scanning insn=603
mems_found = 0, cannot_delete = true

**scanning insn=604
mems_found = 0, cannot_delete = true

**scanning insn=605
mems_found = 0, cannot_delete = true

**scanning insn=606
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after cselib_expand address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 787))
        (reg/v/f:DI 633 [ state ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 787))
        (reg/v/f:DI 633 [ state ]))
    (const_int 216 [0xd8]))
  varying cselib base=18:17614 offset = 216
 processing cselib load mem:(mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
            (reg:DI 794 [ D.6033 ]))
        (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=607
mems_found = 0, cannot_delete = true

**scanning insn=608
mems_found = 0, cannot_delete = true

**scanning insn=609
mems_found = 0, cannot_delete = true

**scanning insn=611
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after cselib_expand address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 787))
        (reg/v/f:DI 633 [ state ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (sign_extend:DI (reg:SI 787))
        (reg/v/f:DI 633 [ state ]))
    (const_int 216 [0xd8]))
  varying cselib base=18:17614 offset = 216
 processing cselib store [216..217)
mems_found = 1, cannot_delete = false

**scanning insn=612
mems_found = 0, cannot_delete = true

**scanning insn=613
mems_found = 0, cannot_delete = true

**scanning insn=614
mems_found = 0, cannot_delete = true

**scanning insn=616
mems_found = 0, cannot_delete = true

**scanning insn=617
mems_found = 0, cannot_delete = true

**scanning insn=620
mems_found = 0, cannot_delete = true

**scanning insn=621
  mem: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after cselib_expand address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))

   after canon_rtx address: (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (reg:DI 794 [ D.6033 ]))
    (const_int 216 [0xd8]))
  varying cselib base=6:77 offset = 216
 processing cselib store [216..217)
mems_found = 1, cannot_delete = false

**scanning insn=624
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=625
mems_found = 0, cannot_delete = true

**scanning insn=626
mems_found = 0, cannot_delete = true

**scanning insn=627
mems_found = 0, cannot_delete = true

**scanning insn=628
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
    trying store in insn=624 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=633
mems_found = 0, cannot_delete = true

**scanning insn=634
mems_found = 0, cannot_delete = true

**scanning insn=636
mems_found = 0, cannot_delete = true

**scanning insn=637
mems_found = 0, cannot_delete = true

**scanning insn=638
mems_found = 0, cannot_delete = true

**scanning insn=639
mems_found = 0, cannot_delete = true

**scanning insn=640
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=7:7 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=641
mems_found = 0, cannot_delete = true

**scanning insn=642
mems_found = 0, cannot_delete = true

**scanning insn=643
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=7:7 offset = 4
 processing cselib store [4..8)
    trying store in insn=640 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=645
mems_found = 0, cannot_delete = true

**scanning insn=646
mems_found = 0, cannot_delete = true

**scanning insn=647
mems_found = 0, cannot_delete = true

**scanning insn=648
mems_found = 0, cannot_delete = true

**scanning insn=649
mems_found = 0, cannot_delete = true

**scanning insn=650
mems_found = 0, cannot_delete = true

**scanning insn=651
mems_found = 0, cannot_delete = true

**scanning insn=652
mems_found = 0, cannot_delete = true

**scanning insn=653
mems_found = 0, cannot_delete = true

**scanning insn=654
mems_found = 0, cannot_delete = true

**scanning insn=657
mems_found = 0, cannot_delete = true

**scanning insn=658
mems_found = 0, cannot_delete = true

**scanning insn=659
mems_found = 0, cannot_delete = true

**scanning insn=660
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=661
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=662
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=667
mems_found = 0, cannot_delete = true

**scanning insn=668
mems_found = 0, cannot_delete = true

**scanning insn=670
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=671
mems_found = 0, cannot_delete = true

**scanning insn=672
mems_found = 0, cannot_delete = true

**scanning insn=673
mems_found = 0, cannot_delete = true

**scanning insn=674
mems_found = 0, cannot_delete = true

**scanning insn=675
mems_found = 0, cannot_delete = true

**scanning insn=676
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
    trying store in insn=670 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=677
mems_found = 0, cannot_delete = true

**scanning insn=678
mems_found = 0, cannot_delete = true

**scanning insn=679
mems_found = 0, cannot_delete = true

**scanning insn=680
  mem: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)

   after canon_rtx address: (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
  gid=3 offset=0 
 processing const load gid=3[0..1)
removing from active insn=676 has store
removing from active insn=670 has store

**scanning insn=681
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=1:1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=682
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
 processing cselib load against insn 681
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib store [200..208)
    trying store in insn=681 gid=-1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=683
mems_found = 0, cannot_delete = true

**scanning insn=684
mems_found = 0, cannot_delete = true

**scanning insn=685
mems_found = 0, cannot_delete = true

**scanning insn=686
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)
removing from active insn=682 has store
removing from active insn=681 has store

**scanning insn=687
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=1:1 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=688
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=1:1 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
 processing cselib load against insn 687
mems_found = 0, cannot_delete = true

**scanning insn=689
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 687
mems_found = 0, cannot_delete = true

**scanning insn=694
mems_found = 0, cannot_delete = true

**scanning insn=695
mems_found = 0, cannot_delete = true

**scanning insn=696
mems_found = 0, cannot_delete = true

**scanning insn=697
mems_found = 0, cannot_delete = true

**scanning insn=698
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=7:7 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=699
mems_found = 0, cannot_delete = true

**scanning insn=700
mems_found = 0, cannot_delete = true

**scanning insn=701
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 4 [0x4]))
  varying cselib base=7:7 offset = 4
 processing cselib store [4..8)
    trying store in insn=698 gid=-1[200..208)
mems_found = 1, cannot_delete = false

**scanning insn=703
mems_found = 0, cannot_delete = true

**scanning insn=704
mems_found = 0, cannot_delete = true

**scanning insn=705
mems_found = 0, cannot_delete = true

**scanning insn=706
mems_found = 0, cannot_delete = true

**scanning insn=707
mems_found = 0, cannot_delete = true

**scanning insn=708
mems_found = 0, cannot_delete = true

**scanning insn=709
mems_found = 0, cannot_delete = true

**scanning insn=710
mems_found = 0, cannot_delete = true

**scanning insn=711
mems_found = 0, cannot_delete = true

**scanning insn=712
mems_found = 0, cannot_delete = true

**scanning insn=715
mems_found = 0, cannot_delete = true

**scanning insn=716
mems_found = 0, cannot_delete = true

**scanning insn=717
mems_found = 0, cannot_delete = true

**scanning insn=718
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=719
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=722
mems_found = 0, cannot_delete = true

**scanning insn=723
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=724
mems_found = 0, cannot_delete = true

**scanning insn=725
mems_found = 0, cannot_delete = true

**scanning insn=726
mems_found = 0, cannot_delete = true

**scanning insn=727
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)
removing from active insn=723 has store

**scanning insn=728
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 12 [0xc]))
  varying cselib base=3:3 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = false

**scanning insn=729
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
 processing cselib load against insn 728
mems_found = 0, cannot_delete = true

**scanning insn=730
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=3:3 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 728
mems_found = 0, cannot_delete = true

**scanning insn=733
mems_found = 0, cannot_delete = true

**scanning insn=734
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=735
mems_found = 0, cannot_delete = true

**scanning insn=736
mems_found = 0, cannot_delete = true

**scanning insn=738
mems_found = 0, cannot_delete = true

**scanning insn=739
mems_found = 0, cannot_delete = true

**scanning insn=740
mems_found = 0, cannot_delete = true

**scanning insn=741
mems_found = 0, cannot_delete = true

**scanning insn=742
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=743
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=4:4 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=744
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=4:4 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=749
mems_found = 0, cannot_delete = true

**scanning insn=750
mems_found = 0, cannot_delete = true

**scanning insn=751
mems_found = 0, cannot_delete = true

**scanning insn=752
mems_found = 0, cannot_delete = true

**scanning insn=753
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=754
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=4:4 offset = 200
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=755
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=4:4 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=758
mems_found = 0, cannot_delete = true

**scanning insn=759
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=3:3 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=761
mems_found = 0, cannot_delete = true

**scanning insn=762
mems_found = 0, cannot_delete = true

**scanning insn=768
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=769
mems_found = 0, cannot_delete = true

**scanning insn=770
mems_found = 0, cannot_delete = true

**scanning insn=771
  mem: (reg/v/f:DI 634 [ hashval ])

   after canon_rtx address: (reg/v/f:DI 634 [ hashval ])

   after cselib_expand address: (reg/v/f:DI 634 [ hashval ])

   after canon_rtx address: (reg/v/f:DI 634 [ hashval ])
  varying cselib base=6:6 offset = 0
 processing cselib store [0..1)
mems_found = 1, cannot_delete = false

**scanning insn=772
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 771
removing from active insn=771 has store
mems_found = 0, cannot_delete = true

**scanning insn=773
mems_found = 0, cannot_delete = true

**scanning insn=774
mems_found = 0, cannot_delete = true

**scanning insn=775
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 1 [0x1]))
  varying cselib base=6:6 offset = 1
 processing cselib store [1..2)
mems_found = 1, cannot_delete = false

**scanning insn=776
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 775
removing from active insn=775 has store
mems_found = 0, cannot_delete = true

**scanning insn=777
mems_found = 0, cannot_delete = true

**scanning insn=778
mems_found = 0, cannot_delete = true

**scanning insn=779
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 2 [0x2]))
  varying cselib base=6:6 offset = 2
 processing cselib store [2..3)
mems_found = 1, cannot_delete = false

**scanning insn=780
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 779
removing from active insn=779 has store
mems_found = 0, cannot_delete = true

**scanning insn=781
mems_found = 0, cannot_delete = true

**scanning insn=782
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 3 [0x3]))
  varying cselib base=6:6 offset = 3
 processing cselib store [3..4)
mems_found = 1, cannot_delete = false

**scanning insn=783
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 782
removing from active insn=782 has store
mems_found = 0, cannot_delete = true

**scanning insn=784
mems_found = 0, cannot_delete = true

**scanning insn=785
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 4 [0x4]))
  varying cselib base=6:6 offset = 4
 processing cselib store [4..5)
mems_found = 1, cannot_delete = false

**scanning insn=786
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 785
removing from active insn=785 has store
mems_found = 0, cannot_delete = true

**scanning insn=787
mems_found = 0, cannot_delete = true

**scanning insn=788
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 5 [0x5]))
  varying cselib base=6:6 offset = 5
 processing cselib store [5..6)
mems_found = 1, cannot_delete = false

**scanning insn=789
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 788
removing from active insn=788 has store
mems_found = 0, cannot_delete = true

**scanning insn=790
mems_found = 0, cannot_delete = true

**scanning insn=791
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 6 [0x6]))
  varying cselib base=6:6 offset = 6
 processing cselib store [6..7)
mems_found = 1, cannot_delete = false

**scanning insn=792
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 136 [0x88]))
  varying cselib base=1:1 offset = 136
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
 processing cselib load against insn 791
removing from active insn=791 has store
mems_found = 0, cannot_delete = true

**scanning insn=793
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 7 [0x7]))
  varying cselib base=6:6 offset = 7
 processing cselib store [7..8)
mems_found = 1, cannot_delete = false

**scanning insn=794
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 793
removing from active insn=793 has store
mems_found = 0, cannot_delete = true

**scanning insn=795
mems_found = 0, cannot_delete = true

**scanning insn=796
mems_found = 0, cannot_delete = true

**scanning insn=797
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 8 [0x8]))
  varying cselib base=6:6 offset = 8
 processing cselib store [8..9)
mems_found = 1, cannot_delete = false

**scanning insn=798
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 797
removing from active insn=797 has store
mems_found = 0, cannot_delete = true

**scanning insn=799
mems_found = 0, cannot_delete = true

**scanning insn=800
mems_found = 0, cannot_delete = true

**scanning insn=801
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 9 [0x9]))
  varying cselib base=6:6 offset = 9
 processing cselib store [9..10)
mems_found = 1, cannot_delete = false

**scanning insn=802
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 801
removing from active insn=801 has store
mems_found = 0, cannot_delete = true

**scanning insn=803
mems_found = 0, cannot_delete = true

**scanning insn=804
mems_found = 0, cannot_delete = true

**scanning insn=805
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 10 [0xa]))
  varying cselib base=6:6 offset = 10
 processing cselib store [10..11)
mems_found = 1, cannot_delete = false

**scanning insn=806
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 805
removing from active insn=805 has store
mems_found = 0, cannot_delete = true

**scanning insn=807
mems_found = 0, cannot_delete = true

**scanning insn=808
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 11 [0xb]))
  varying cselib base=6:6 offset = 11
 processing cselib store [11..12)
mems_found = 1, cannot_delete = false

**scanning insn=809
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 808
removing from active insn=808 has store
mems_found = 0, cannot_delete = true

**scanning insn=810
mems_found = 0, cannot_delete = true

**scanning insn=811
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 12 [0xc]))
  varying cselib base=6:6 offset = 12
 processing cselib store [12..13)
mems_found = 1, cannot_delete = false

**scanning insn=812
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 811
removing from active insn=811 has store
mems_found = 0, cannot_delete = true

**scanning insn=813
mems_found = 0, cannot_delete = true

**scanning insn=814
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 13 [0xd]))
  varying cselib base=6:6 offset = 13
 processing cselib store [13..14)
mems_found = 1, cannot_delete = false

**scanning insn=815
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 814
removing from active insn=814 has store
mems_found = 0, cannot_delete = true

**scanning insn=816
mems_found = 0, cannot_delete = true

**scanning insn=817
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 14 [0xe]))
  varying cselib base=6:6 offset = 14
 processing cselib store [14..15)
mems_found = 1, cannot_delete = false

**scanning insn=818
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 144 [0x90]))
  varying cselib base=1:1 offset = 144
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
 processing cselib load against insn 817
removing from active insn=817 has store
mems_found = 0, cannot_delete = true

**scanning insn=819
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 15 [0xf]))
  varying cselib base=6:6 offset = 15
 processing cselib store [15..16)
mems_found = 1, cannot_delete = false

**scanning insn=820
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 819
removing from active insn=819 has store
mems_found = 0, cannot_delete = true

**scanning insn=821
mems_found = 0, cannot_delete = true

**scanning insn=822
mems_found = 0, cannot_delete = true

**scanning insn=823
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 16 [0x10]))
  varying cselib base=6:6 offset = 16
 processing cselib store [16..17)
mems_found = 1, cannot_delete = false

**scanning insn=824
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 823
removing from active insn=823 has store
mems_found = 0, cannot_delete = true

**scanning insn=825
mems_found = 0, cannot_delete = true

**scanning insn=826
mems_found = 0, cannot_delete = true

**scanning insn=827
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 17 [0x11]))
  varying cselib base=6:6 offset = 17
 processing cselib store [17..18)
mems_found = 1, cannot_delete = false

**scanning insn=828
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 827
removing from active insn=827 has store
mems_found = 0, cannot_delete = true

**scanning insn=829
mems_found = 0, cannot_delete = true

**scanning insn=830
mems_found = 0, cannot_delete = true

**scanning insn=831
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 18 [0x12]))
  varying cselib base=6:6 offset = 18
 processing cselib store [18..19)
mems_found = 1, cannot_delete = false

**scanning insn=832
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 831
removing from active insn=831 has store
mems_found = 0, cannot_delete = true

**scanning insn=833
mems_found = 0, cannot_delete = true

**scanning insn=834
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 19 [0x13]))
  varying cselib base=6:6 offset = 19
 processing cselib store [19..20)
mems_found = 1, cannot_delete = false

**scanning insn=835
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 834
removing from active insn=834 has store
mems_found = 0, cannot_delete = true

**scanning insn=836
mems_found = 0, cannot_delete = true

**scanning insn=837
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 20 [0x14]))
  varying cselib base=6:6 offset = 20
 processing cselib store [20..21)
mems_found = 1, cannot_delete = false

**scanning insn=838
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 837
removing from active insn=837 has store
mems_found = 0, cannot_delete = true

**scanning insn=839
mems_found = 0, cannot_delete = true

**scanning insn=840
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 21 [0x15]))
  varying cselib base=6:6 offset = 21
 processing cselib store [21..22)
mems_found = 1, cannot_delete = false

**scanning insn=841
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 840
removing from active insn=840 has store
mems_found = 0, cannot_delete = true

**scanning insn=842
mems_found = 0, cannot_delete = true

**scanning insn=843
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 22 [0x16]))
  varying cselib base=6:6 offset = 22
 processing cselib store [22..23)
mems_found = 1, cannot_delete = false

**scanning insn=844
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 152 [0x98]))
  varying cselib base=1:1 offset = 152
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
 processing cselib load against insn 843
removing from active insn=843 has store
mems_found = 0, cannot_delete = true

**scanning insn=845
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 23 [0x17]))
  varying cselib base=6:6 offset = 23
 processing cselib store [23..24)
mems_found = 1, cannot_delete = false

**scanning insn=846
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 845
removing from active insn=845 has store
mems_found = 0, cannot_delete = true

**scanning insn=847
mems_found = 0, cannot_delete = true

**scanning insn=848
mems_found = 0, cannot_delete = true

**scanning insn=849
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 24 [0x18]))
  varying cselib base=6:6 offset = 24
 processing cselib store [24..25)
mems_found = 1, cannot_delete = false

**scanning insn=850
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 849
removing from active insn=849 has store
mems_found = 0, cannot_delete = true

**scanning insn=851
mems_found = 0, cannot_delete = true

**scanning insn=852
mems_found = 0, cannot_delete = true

**scanning insn=853
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 25 [0x19]))
  varying cselib base=6:6 offset = 25
 processing cselib store [25..26)
mems_found = 1, cannot_delete = false

**scanning insn=854
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 853
removing from active insn=853 has store
mems_found = 0, cannot_delete = true

**scanning insn=855
mems_found = 0, cannot_delete = true

**scanning insn=856
mems_found = 0, cannot_delete = true

**scanning insn=857
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 26 [0x1a]))
  varying cselib base=6:6 offset = 26
 processing cselib store [26..27)
mems_found = 1, cannot_delete = false

**scanning insn=858
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 857
removing from active insn=857 has store
mems_found = 0, cannot_delete = true

**scanning insn=859
mems_found = 0, cannot_delete = true

**scanning insn=860
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 27 [0x1b]))
  varying cselib base=6:6 offset = 27
 processing cselib store [27..28)
mems_found = 1, cannot_delete = false

**scanning insn=861
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 860
removing from active insn=860 has store
mems_found = 0, cannot_delete = true

**scanning insn=862
mems_found = 0, cannot_delete = true

**scanning insn=863
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 28 [0x1c]))
  varying cselib base=6:6 offset = 28
 processing cselib store [28..29)
mems_found = 1, cannot_delete = false

**scanning insn=864
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 863
removing from active insn=863 has store
mems_found = 0, cannot_delete = true

**scanning insn=865
mems_found = 0, cannot_delete = true

**scanning insn=866
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 29 [0x1d]))
  varying cselib base=6:6 offset = 29
 processing cselib store [29..30)
mems_found = 1, cannot_delete = false

**scanning insn=867
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 866
removing from active insn=866 has store
mems_found = 0, cannot_delete = true

**scanning insn=868
mems_found = 0, cannot_delete = true

**scanning insn=869
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 30 [0x1e]))
  varying cselib base=6:6 offset = 30
 processing cselib store [30..31)
mems_found = 1, cannot_delete = false

**scanning insn=870
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 160 [0xa0]))
  varying cselib base=1:1 offset = 160
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
 processing cselib load against insn 869
removing from active insn=869 has store
mems_found = 0, cannot_delete = true

**scanning insn=871
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 31 [0x1f]))
  varying cselib base=6:6 offset = 31
 processing cselib store [31..32)
mems_found = 1, cannot_delete = false

**scanning insn=872
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 871
removing from active insn=871 has store
mems_found = 0, cannot_delete = true

**scanning insn=873
mems_found = 0, cannot_delete = true

**scanning insn=874
mems_found = 0, cannot_delete = true

**scanning insn=875
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 32 [0x20]))
  varying cselib base=6:6 offset = 32
 processing cselib store [32..33)
mems_found = 1, cannot_delete = false

**scanning insn=876
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 875
removing from active insn=875 has store
mems_found = 0, cannot_delete = true

**scanning insn=877
mems_found = 0, cannot_delete = true

**scanning insn=878
mems_found = 0, cannot_delete = true

**scanning insn=879
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 33 [0x21]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 33 [0x21]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 33 [0x21]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 33 [0x21]))
  varying cselib base=6:6 offset = 33
 processing cselib store [33..34)
mems_found = 1, cannot_delete = false

**scanning insn=880
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 879
removing from active insn=879 has store
mems_found = 0, cannot_delete = true

**scanning insn=881
mems_found = 0, cannot_delete = true

**scanning insn=882
mems_found = 0, cannot_delete = true

**scanning insn=883
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 34 [0x22]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 34 [0x22]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 34 [0x22]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 34 [0x22]))
  varying cselib base=6:6 offset = 34
 processing cselib store [34..35)
mems_found = 1, cannot_delete = false

**scanning insn=884
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 883
removing from active insn=883 has store
mems_found = 0, cannot_delete = true

**scanning insn=885
mems_found = 0, cannot_delete = true

**scanning insn=886
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 35 [0x23]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 35 [0x23]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 35 [0x23]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 35 [0x23]))
  varying cselib base=6:6 offset = 35
 processing cselib store [35..36)
mems_found = 1, cannot_delete = false

**scanning insn=887
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 886
removing from active insn=886 has store
mems_found = 0, cannot_delete = true

**scanning insn=888
mems_found = 0, cannot_delete = true

**scanning insn=889
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 36 [0x24]))
  varying cselib base=6:6 offset = 36
 processing cselib store [36..37)
mems_found = 1, cannot_delete = false

**scanning insn=890
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 889
removing from active insn=889 has store
mems_found = 0, cannot_delete = true

**scanning insn=891
mems_found = 0, cannot_delete = true

**scanning insn=892
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 37 [0x25]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 37 [0x25]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 37 [0x25]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 37 [0x25]))
  varying cselib base=6:6 offset = 37
 processing cselib store [37..38)
mems_found = 1, cannot_delete = false

**scanning insn=893
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 892
removing from active insn=892 has store
mems_found = 0, cannot_delete = true

**scanning insn=894
mems_found = 0, cannot_delete = true

**scanning insn=895
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 38 [0x26]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 38 [0x26]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 38 [0x26]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 38 [0x26]))
  varying cselib base=6:6 offset = 38
 processing cselib store [38..39)
mems_found = 1, cannot_delete = false

**scanning insn=896
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 168 [0xa8]))
  varying cselib base=1:1 offset = 168
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
 processing cselib load against insn 895
removing from active insn=895 has store
mems_found = 0, cannot_delete = true

**scanning insn=897
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 39 [0x27]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 39 [0x27]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 39 [0x27]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 39 [0x27]))
  varying cselib base=6:6 offset = 39
 processing cselib store [39..40)
mems_found = 1, cannot_delete = false

**scanning insn=898
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 897
removing from active insn=897 has store
mems_found = 0, cannot_delete = true

**scanning insn=899
mems_found = 0, cannot_delete = true

**scanning insn=900
mems_found = 0, cannot_delete = true

**scanning insn=901
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 40 [0x28]))
  varying cselib base=6:6 offset = 40
 processing cselib store [40..41)
mems_found = 1, cannot_delete = false

**scanning insn=902
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 901
removing from active insn=901 has store
mems_found = 0, cannot_delete = true

**scanning insn=903
mems_found = 0, cannot_delete = true

**scanning insn=904
mems_found = 0, cannot_delete = true

**scanning insn=905
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 41 [0x29]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 41 [0x29]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 41 [0x29]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 41 [0x29]))
  varying cselib base=6:6 offset = 41
 processing cselib store [41..42)
mems_found = 1, cannot_delete = false

**scanning insn=906
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 905
removing from active insn=905 has store
mems_found = 0, cannot_delete = true

**scanning insn=907
mems_found = 0, cannot_delete = true

**scanning insn=908
mems_found = 0, cannot_delete = true

**scanning insn=909
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 42 [0x2a]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 42 [0x2a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 42 [0x2a]))
  varying cselib base=6:6 offset = 42
 processing cselib store [42..43)
mems_found = 1, cannot_delete = false

**scanning insn=910
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 909
removing from active insn=909 has store
mems_found = 0, cannot_delete = true

**scanning insn=911
mems_found = 0, cannot_delete = true

**scanning insn=912
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 43 [0x2b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 43 [0x2b]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 43 [0x2b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 43 [0x2b]))
  varying cselib base=6:6 offset = 43
 processing cselib store [43..44)
mems_found = 1, cannot_delete = false

**scanning insn=913
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 912
removing from active insn=912 has store
mems_found = 0, cannot_delete = true

**scanning insn=914
mems_found = 0, cannot_delete = true

**scanning insn=915
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 44 [0x2c]))
  varying cselib base=6:6 offset = 44
 processing cselib store [44..45)
mems_found = 1, cannot_delete = false

**scanning insn=916
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 915
removing from active insn=915 has store
mems_found = 0, cannot_delete = true

**scanning insn=917
mems_found = 0, cannot_delete = true

**scanning insn=918
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 45 [0x2d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 45 [0x2d]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 45 [0x2d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 45 [0x2d]))
  varying cselib base=6:6 offset = 45
 processing cselib store [45..46)
mems_found = 1, cannot_delete = false

**scanning insn=919
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 918
removing from active insn=918 has store
mems_found = 0, cannot_delete = true

**scanning insn=920
mems_found = 0, cannot_delete = true

**scanning insn=921
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 46 [0x2e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 46 [0x2e]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 46 [0x2e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 46 [0x2e]))
  varying cselib base=6:6 offset = 46
 processing cselib store [46..47)
mems_found = 1, cannot_delete = false

**scanning insn=922
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 176 [0xb0]))
  varying cselib base=1:1 offset = 176
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
 processing cselib load against insn 921
removing from active insn=921 has store
mems_found = 0, cannot_delete = true

**scanning insn=923
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 47 [0x2f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 47 [0x2f]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 47 [0x2f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 47 [0x2f]))
  varying cselib base=6:6 offset = 47
 processing cselib store [47..48)
mems_found = 1, cannot_delete = false

**scanning insn=924
  mem: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])

   after cselib_expand address: (reg/v/f:DI 633 [ state ])

   after canon_rtx address: (reg/v/f:DI 633 [ state ])
  varying cselib base=1:1 offset = 0
 processing cselib load mem:(mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
 processing cselib load against insn 923
removing from active insn=923 has store
mems_found = 0, cannot_delete = true

**scanning insn=925
mems_found = 0, cannot_delete = true

**scanning insn=927
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
mems_found = 0, cannot_delete = true

**scanning insn=928
mems_found = 0, cannot_delete = true

**scanning insn=929
mems_found = 0, cannot_delete = true

**scanning insn=930
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 48 [0x30]))
  varying cselib base=6:6 offset = 48
 processing cselib store [48..49)
mems_found = 1, cannot_delete = false

**scanning insn=931
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 930
removing from active insn=930 has store
mems_found = 0, cannot_delete = true

**scanning insn=932
mems_found = 0, cannot_delete = true

**scanning insn=933
mems_found = 0, cannot_delete = true

**scanning insn=934
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 49 [0x31]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 49 [0x31]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 49 [0x31]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 49 [0x31]))
  varying cselib base=6:6 offset = 49
 processing cselib store [49..50)
mems_found = 1, cannot_delete = false

**scanning insn=935
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 934
removing from active insn=934 has store
mems_found = 0, cannot_delete = true

**scanning insn=936
mems_found = 0, cannot_delete = true

**scanning insn=937
mems_found = 0, cannot_delete = true

**scanning insn=938
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 50 [0x32]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 50 [0x32]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 50 [0x32]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 50 [0x32]))
  varying cselib base=6:6 offset = 50
 processing cselib store [50..51)
mems_found = 1, cannot_delete = false

**scanning insn=939
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 938
removing from active insn=938 has store
mems_found = 0, cannot_delete = true

**scanning insn=940
mems_found = 0, cannot_delete = true

**scanning insn=941
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 51 [0x33]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 51 [0x33]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 51 [0x33]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 51 [0x33]))
  varying cselib base=6:6 offset = 51
 processing cselib store [51..52)
mems_found = 1, cannot_delete = false

**scanning insn=942
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 941
removing from active insn=941 has store
mems_found = 0, cannot_delete = true

**scanning insn=943
mems_found = 0, cannot_delete = true

**scanning insn=944
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 52 [0x34]))
  varying cselib base=6:6 offset = 52
 processing cselib store [52..53)
mems_found = 1, cannot_delete = false

**scanning insn=945
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 944
removing from active insn=944 has store
mems_found = 0, cannot_delete = true

**scanning insn=946
mems_found = 0, cannot_delete = true

**scanning insn=947
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 53 [0x35]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 53 [0x35]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 53 [0x35]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 53 [0x35]))
  varying cselib base=6:6 offset = 53
 processing cselib store [53..54)
mems_found = 1, cannot_delete = false

**scanning insn=948
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 947
removing from active insn=947 has store
mems_found = 0, cannot_delete = true

**scanning insn=949
mems_found = 0, cannot_delete = true

**scanning insn=950
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 54 [0x36]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 54 [0x36]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 54 [0x36]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 54 [0x36]))
  varying cselib base=6:6 offset = 54
 processing cselib store [54..55)
mems_found = 1, cannot_delete = false

**scanning insn=951
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 184 [0xb8]))
  varying cselib base=1:1 offset = 184
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
 processing cselib load against insn 950
removing from active insn=950 has store
mems_found = 0, cannot_delete = true

**scanning insn=952
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 55 [0x37]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 55 [0x37]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 55 [0x37]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 55 [0x37]))
  varying cselib base=6:6 offset = 55
 processing cselib store [55..56)
mems_found = 1, cannot_delete = false

**scanning insn=953
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 952
removing from active insn=952 has store
mems_found = 0, cannot_delete = true

**scanning insn=954
mems_found = 0, cannot_delete = true

**scanning insn=955
mems_found = 0, cannot_delete = true

**scanning insn=956
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 56 [0x38]))
  varying cselib base=6:6 offset = 56
 processing cselib store [56..57)
mems_found = 1, cannot_delete = false

**scanning insn=957
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 956
removing from active insn=956 has store
mems_found = 0, cannot_delete = true

**scanning insn=958
mems_found = 0, cannot_delete = true

**scanning insn=959
mems_found = 0, cannot_delete = true

**scanning insn=960
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 57 [0x39]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 57 [0x39]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 57 [0x39]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 57 [0x39]))
  varying cselib base=6:6 offset = 57
 processing cselib store [57..58)
mems_found = 1, cannot_delete = false

**scanning insn=961
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 960
removing from active insn=960 has store
mems_found = 0, cannot_delete = true

**scanning insn=962
mems_found = 0, cannot_delete = true

**scanning insn=963
mems_found = 0, cannot_delete = true

**scanning insn=964
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 58 [0x3a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 58 [0x3a]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 58 [0x3a]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 58 [0x3a]))
  varying cselib base=6:6 offset = 58
 processing cselib store [58..59)
mems_found = 1, cannot_delete = false

**scanning insn=965
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 964
removing from active insn=964 has store
mems_found = 0, cannot_delete = true

**scanning insn=966
mems_found = 0, cannot_delete = true

**scanning insn=967
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 59 [0x3b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 59 [0x3b]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 59 [0x3b]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 59 [0x3b]))
  varying cselib base=6:6 offset = 59
 processing cselib store [59..60)
mems_found = 1, cannot_delete = false

**scanning insn=968
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 967
removing from active insn=967 has store
mems_found = 0, cannot_delete = true

**scanning insn=969
mems_found = 0, cannot_delete = true

**scanning insn=970
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 60 [0x3c]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 60 [0x3c]))
  varying cselib base=6:6 offset = 60
 processing cselib store [60..61)
mems_found = 1, cannot_delete = false

**scanning insn=971
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 970
removing from active insn=970 has store
mems_found = 0, cannot_delete = true

**scanning insn=972
mems_found = 0, cannot_delete = true

**scanning insn=973
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 61 [0x3d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 61 [0x3d]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 61 [0x3d]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 61 [0x3d]))
  varying cselib base=6:6 offset = 61
 processing cselib store [61..62)
mems_found = 1, cannot_delete = false

**scanning insn=974
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 973
removing from active insn=973 has store
mems_found = 0, cannot_delete = true

**scanning insn=975
mems_found = 0, cannot_delete = true

**scanning insn=976
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 62 [0x3e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 62 [0x3e]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 62 [0x3e]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 62 [0x3e]))
  varying cselib base=6:6 offset = 62
 processing cselib store [62..63)
mems_found = 1, cannot_delete = false

**scanning insn=977
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 192 [0xc0]))
  varying cselib base=1:1 offset = 192
 processing cselib load mem:(mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
        (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
 processing cselib load against insn 976
removing from active insn=976 has store
mems_found = 0, cannot_delete = true

**scanning insn=978
  mem: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 63 [0x3f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 63 [0x3f]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 63 [0x3f]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 634 [ hashval ])
    (const_int 63 [0x3f]))
  varying cselib base=6:6 offset = 63
 processing cselib store [63..64)
mems_found = 1, cannot_delete = false

**scanning insn=988
mems_found = 0, cannot_delete = true

**scanning insn=989
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 48 [0x30]))
  varying cselib base=3:3 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = false

**scanning insn=990
mems_found = 0, cannot_delete = true

**scanning insn=991
mems_found = 0, cannot_delete = true

**scanning insn=992
mems_found = 0, cannot_delete = true

**scanning insn=993
mems_found = 0, cannot_delete = true

**scanning insn=994
mems_found = 0, cannot_delete = true

**scanning insn=995
mems_found = 0, cannot_delete = true

**scanning insn=996
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)
removing from active insn=989 has store

**scanning insn=1002
mems_found = 0, cannot_delete = true

**scanning insn=1003
mems_found = 0, cannot_delete = true

**scanning insn=1004
mems_found = 0, cannot_delete = true

**scanning insn=1005
mems_found = 0, cannot_delete = true

**scanning insn=1006
  mem: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after cselib_expand address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))

   after canon_rtx address: (plus:DI (reg/v/f:DI 633 [ state ])
    (const_int 200 [0xc8]))
  varying cselib base=7:7 offset = 200
 processing cselib store [200..208)
mems_found = 1, cannot_delete = false

**scanning insn=1007
mems_found = 0, cannot_delete = true

**scanning insn=1008
mems_found = 0, cannot_delete = true

**scanning insn=1009
mems_found = 0, cannot_delete = true

**scanning insn=1010
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)
removing from active insn=1006 has store

**scanning insn=1015
mems_found = 0, cannot_delete = true

**scanning insn=1016
mems_found = 0, cannot_delete = false
group 0 is frame related group 0(20+0): n 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 84 n_edges 123 count 84 (    1)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 0 )->[2]->( 3 47 )
  in:   9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 2 )->[3]->( 4 22 )
  in:   9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  kill: 
  out:  

( 3 )->[4]->( 5 8 )
  in:   
  gen:  
  kill: 
  out:  

( 4 )->[5]->( 6 7 )
  in:   
  gen:  
  kill: 
  out:  

( 5 )->[6]->( 21 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 5 )->[7]->( 21 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 4 )->[8]->( 9 11 )
  in:   
  gen:  
  kill: 
  out:  

( 8 )->[9]->( 10 95 )
  in:   
  gen:  
  kill: 
  out:  

( 9 )->[10]->( 95 )
  in:   
  gen:  
  kill: 
  out:  

( 8 )->[11]->( 15 13 )
  in:   
  gen:  
  kill: 
  out:  

( 11 )->[13]->( 16 15 )
  in:   
  gen:  
  kill: 
  out:  

( 13 11 )->[15]->( 16 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 15 13 )->[16]->( 17 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 16 95 )->[17]->( 18 19 )
  in:   
  gen:  
  kill: 
  out:  

( 17 )->[18]->( 20 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 17 )->[19]->( 20 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 18 19 )->[20]->( 21 )
  in:   
  gen:  
  kill: 
  out:  

( 6 7 20 )->[21]->( 45 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 3 )->[22]->( 23 27 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 22 )->[23]->( 26 25 )
  in:   
  gen:  
  kill: 
  out:  

( 23 )->[25]->( 26 )
  in:   
  gen:  
  kill: 
  out:  

( 23 25 )->[26]->( 44 )
  in:   
  gen:  
  kill: 
  out:  

( 22 )->[27]->( 28 33 )
  in:   
  gen:  
  kill: 
  out:  

( 27 )->[28]->( 32 30 )
  in:   
  gen:  
  kill: 
  out:  

( 28 )->[30]->( 41 32 )
  in:   
  gen:  
  kill: 
  out:  

( 30 28 )->[32]->( 41 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 27 )->[33]->( 34 35 )
  in:   
  gen:  
  kill: 
  out:  

( 33 )->[34]->( 41 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 33 )->[35]->( 39 37 )
  in:   
  gen:  
  kill: 
  out:  

( 35 )->[37]->( 40 39 )
  in:   
  gen:  
  kill: 
  out:  

( 37 35 )->[39]->( 40 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 39 37 )->[40]->( 41 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 32 34 40 30 )->[41]->( 42 43 )
  in:   
  gen:  
  kill: 
  out:  

( 41 )->[42]->( 44 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 41 )->[43]->( 44 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 26 42 43 )->[44]->( 45 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 21 44 )->[45]->( 46 97 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 45 )->[46]->( 97 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 2 )->[47]->( 48 70 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  kill: 
  out:  

( 47 )->[48]->( 49 52 )
  in:   
  gen:  
  kill: 
  out:  

( 48 )->[49]->( 50 51 )
  in:   
  gen:  
  kill: 
  out:  

( 49 )->[50]->( 67 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 49 )->[51]->( 67 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 48 )->[52]->( 53 55 )
  in:   
  gen:  
  kill: 
  out:  

( 52 )->[53]->( 54 96 )
  in:   
  gen:  
  kill: 
  out:  

( 53 )->[54]->( 96 )
  in:   
  gen:  
  kill: 
  out:  

( 52 )->[55]->( 59 57 )
  in:   
  gen:  
  kill: 
  out:  

( 55 )->[57]->( 60 59 )
  in:   
  gen:  
  kill: 
  out:  

( 57 55 )->[59]->( 60 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 59 57 )->[60]->( 61 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 60 96 )->[61]->( 62 63 )
  in:   
  gen:  
  kill: 
  out:  

( 61 )->[62]->( 66 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 61 )->[63]->( 64 65 )
  in:   
  gen:  
  kill: 
  out:  

( 63 )->[64]->( 66 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 63 )->[65]->( 66 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 62 65 64 )->[66]->( 67 )
  in:   
  gen:  
  kill: 
  out:  

( 50 51 66 )->[67]->( 68 69 )
  in:   
  gen:  
  kill: 
  out:  

( 67 92 )->[68]->( 93 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 67 74 92 )->[69]->( 93 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 47 )->[70]->( 71 75 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 70 )->[71]->( 74 73 )
  in:   
  gen:  
  kill: 
  out:  

( 71 )->[73]->( 74 )
  in:   
  gen:  
  kill: 
  out:  

( 71 73 )->[74]->( 69 )
  in:   
  gen:  
  kill: 
  out:  

( 70 )->[75]->( 76 81 )
  in:   
  gen:  
  kill: 
  out:  

( 75 )->[76]->( 80 78 )
  in:   
  gen:  
  kill: 
  out:  

( 76 )->[78]->( 89 80 )
  in:   
  gen:  
  kill: 
  out:  

( 78 76 )->[80]->( 89 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 75 )->[81]->( 82 83 )
  in:   
  gen:  
  kill: 
  out:  

( 81 )->[82]->( 89 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 81 )->[83]->( 87 85 )
  in:   
  gen:  
  kill: 
  out:  

( 83 )->[85]->( 88 87 )
  in:   
  gen:  
  kill: 
  out:  

( 85 83 )->[87]->( 88 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 87 85 )->[88]->( 89 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 88 80 82 78 )->[89]->( 90 91 )
  in:   
  gen:  
  kill: 
  out:  

( 89 )->[90]->( 92 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 89 )->[91]->( 92 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 91 90 )->[92]->( 68 69 )
  in:   
  gen:  
  kill: 
  out:  

( 69 68 )->[93]->( 94 97 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 93 )->[94]->( 97 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 10 9 )->[95]->( 17 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 54 53 )->[96]->( 61 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 94 45 46 93 )->[97]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 97 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 9
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 8
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 7
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 3
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 2
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 42
  v:  
starting to process insn 41
  v:  
starting to process insn 40
  v:  
starting to process insn 39
  v:  
starting to process insn 38
  v:  9
i = -10, index = 10
failing at i = -10
starting to process insn 37
  v:  9, 10
starting to process insn 36
  v:  9, 10
i = -11, index = 11
failing at i = -11
starting to process insn 35
  v:  9, 10, 11
starting to process insn 34
  v:  9, 10, 11
i = -12, index = 12
failing at i = -12
starting to process insn 33
  v:  9, 10, 11, 12
starting to process insn 32
  v:  9, 10, 11, 12
i = -13, index = 13
failing at i = -13
starting to process insn 31
  v:  9, 10, 11, 12, 13
i = -14, index = 14
failing at i = -14
starting to process insn 30
  v:  9, 10, 11, 12, 13, 14
starting to process insn 29
  v:  9, 10, 11, 12, 13, 14
i = -15, index = 15
failing at i = -15
starting to process insn 28
  v:  9, 10, 11, 12, 13, 14, 15
starting to process insn 27
  v:  9, 10, 11, 12, 13, 14, 15
i = -16, index = 16
failing at i = -16
starting to process insn 26
  v:  9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 1082
  v:  9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 1081
  v:  9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 19
  v:  9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 18
  v:  9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 16
  v:  9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 15
  v:  9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 14
  v:  9, 10, 11, 12, 13, 14, 15, 16
i = -17, index = 17
failing at i = -17
starting to process insn 13
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17
i = -18, index = 18
failing at i = -18
starting to process insn 12
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18
i = -19, index = 19
failing at i = -19
starting to process insn 11
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
i = -20, index = 20
failing at i = -20
starting to process insn 45
  v:  
starting to process insn 44
  v:  
starting to process insn 50
  v:  
starting to process insn 49
  v:  
starting to process insn 48
  v:  
starting to process insn 47
  v:  
starting to process insn 57
  v:  
regular read
starting to process insn 56
  v:  
non-frame wild read
starting to process insn 55
  v:  
starting to process insn 54
  v:  
starting to process insn 53
  v:  
starting to process insn 52
  v:  
starting to process insn 67
  v:  
regular read
starting to process insn 66
  v:  
non-frame wild read
starting to process insn 65
  v:  
starting to process insn 64
  v:  
starting to process insn 63
  v:  
starting to process insn 62
  v:  
starting to process insn 73
  v:  
starting to process insn 72
  v:  
starting to process insn 76
  v:  
starting to process insn 75
  v:  
starting to process insn 78
  v:  
starting to process insn 91
  v:  
starting to process insn 90
  v:  
starting to process insn 89
  v:  
starting to process insn 88
  v:  
starting to process insn 87
  v:  
starting to process insn 86
  v:  
starting to process insn 85
  v:  
starting to process insn 84
  v:  
starting to process insn 83
  v:  
starting to process insn 95
  v:  
starting to process insn 94
  v:  
starting to process insn 93
  v:  
starting to process insn 92
  v:  
starting to process insn 102
  v:  
regular read
starting to process insn 101
  v:  
non-frame wild read
starting to process insn 100
  v:  
starting to process insn 99
  v:  
starting to process insn 98
  v:  
starting to process insn 111
  v:  
starting to process insn 110
  v:  
non-frame wild read
starting to process insn 109
  v:  
starting to process insn 108
  v:  
starting to process insn 107
  v:  
starting to process insn 106
  v:  
starting to process insn 105
  v:  
starting to process insn 114
  v:  
starting to process insn 113
  v:  
regular read
starting to process insn 120
  v:  
non-frame wild read
starting to process insn 119
  v:  
starting to process insn 118
  v:  
starting to process insn 117
  v:  
starting to process insn 116
  v:  
starting to process insn 129
  v:  
non-frame wild read
starting to process insn 128
  v:  
starting to process insn 127
  v:  
starting to process insn 126
  v:  
starting to process insn 125
  v:  
starting to process insn 133
  v:  
starting to process insn 132
  v:  
regular read
starting to process insn 142
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
non-frame wild read
starting to process insn 141
  v:  
starting to process insn 140
  v:  
starting to process insn 139
  v:  
starting to process insn 138
  v:  
starting to process insn 137
  v:  
starting to process insn 136
  v:  
starting to process insn 172
  v:  
starting to process insn 171
  v:  
starting to process insn 170
  v:  
starting to process insn 169
  v:  
starting to process insn 167
  v:  
starting to process insn 166
  v:  
starting to process insn 165
  v:  
starting to process insn 164
  v:  
regular read
starting to process insn 163
  v:  
starting to process insn 162
  v:  
starting to process insn 161
  v:  
starting to process insn 160
  v:  
starting to process insn 159
  v:  
starting to process insn 157
  v:  
starting to process insn 156
  v:  
starting to process insn 155
  v:  
starting to process insn 154
  v:  
starting to process insn 153
  v:  
starting to process insn 151
  v:  
starting to process insn 150
  v:  
starting to process insn 149
  v:  
starting to process insn 148
  v:  
starting to process insn 175
  v:  
starting to process insn 174
  v:  
starting to process insn 179
  v:  
starting to process insn 178
  v:  
starting to process insn 184
  v:  
starting to process insn 183
  v:  
starting to process insn 182
  v:  
starting to process insn 190
  v:  
starting to process insn 189
  v:  
starting to process insn 203
  v:  
starting to process insn 202
  v:  
starting to process insn 201
  v:  
starting to process insn 200
  v:  
starting to process insn 199
  v:  
starting to process insn 198
  v:  
starting to process insn 197
  v:  
starting to process insn 196
  v:  
starting to process insn 195
  v:  
starting to process insn 194
  v:  
starting to process insn 193
  v:  
starting to process insn 192
  v:  
starting to process insn 207
  v:  
starting to process insn 206
  v:  
starting to process insn 205
  v:  
starting to process insn 204
  v:  
starting to process insn 215
  v:  
regular read
starting to process insn 214
  v:  
regular read
starting to process insn 213
  v:  
non-frame wild read
starting to process insn 212
  v:  
starting to process insn 211
  v:  
starting to process insn 210
  v:  
starting to process insn 221
  v:  
starting to process insn 220
  v:  
starting to process insn 237
  v:  
regular read
starting to process insn 236
  v:  
regular read
starting to process insn 235
  v:  
starting to process insn 234
  v:  
non-frame wild read
starting to process insn 233
  v:  
starting to process insn 232
  v:  
starting to process insn 231
  v:  
starting to process insn 230
  v:  
regular read
starting to process insn 229
  v:  
non-frame wild read
starting to process insn 228
  v:  
starting to process insn 227
  v:  
starting to process insn 226
  v:  
starting to process insn 225
  v:  
starting to process insn 224
  v:  
starting to process insn 223
  v:  
starting to process insn 253
  v:  
starting to process insn 252
  v:  
starting to process insn 251
  v:  
starting to process insn 250
  v:  
starting to process insn 249
  v:  
starting to process insn 248
  v:  
starting to process insn 247
  v:  
starting to process insn 246
  v:  
starting to process insn 245
  v:  
starting to process insn 244
  v:  
starting to process insn 243
  v:  
starting to process insn 242
  v:  
starting to process insn 257
  v:  
starting to process insn 256
  v:  
starting to process insn 255
  v:  
starting to process insn 254
  v:  
starting to process insn 264
  v:  
regular read
starting to process insn 263
  v:  
non-frame wild read
starting to process insn 262
  v:  
starting to process insn 261
  v:  
starting to process insn 260
  v:  
starting to process insn 275
  v:  
regular read
starting to process insn 274
  v:  
regular read
starting to process insn 273
  v:  
starting to process insn 272
  v:  
non-frame wild read
starting to process insn 271
  v:  
starting to process insn 270
  v:  
starting to process insn 269
  v:  
starting to process insn 268
  v:  
starting to process insn 267
  v:  
starting to process insn 281
  v:  
starting to process insn 280
  v:  
starting to process insn 279
  v:  
starting to process insn 278
  v:  
starting to process insn 288
  v:  
regular read
starting to process insn 287
  v:  
non-frame wild read
starting to process insn 286
  v:  
starting to process insn 285
  v:  
starting to process insn 284
  v:  
starting to process insn 283
  v:  
starting to process insn 298
  v:  
regular read
starting to process insn 297
  v:  
non-frame wild read
starting to process insn 296
  v:  
starting to process insn 295
  v:  
starting to process insn 294
  v:  
starting to process insn 293
  v:  
starting to process insn 307
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
non-frame wild read
starting to process insn 306
  v:  
starting to process insn 305
  v:  
starting to process insn 304
  v:  
starting to process insn 303
  v:  
starting to process insn 302
  v:  
starting to process insn 301
  v:  
starting to process insn 388
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 387
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 386
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 385
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 384
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 383
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 382
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 381
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 380
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 379
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 378
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 377
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 376
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 375
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 374
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 373
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 372
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 371
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 370
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 369
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 368
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 367
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 366
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 365
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 364
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 363
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 362
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 361
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 360
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 359
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 358
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 357
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 356
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 355
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 354
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 353
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 352
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 351
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 350
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 349
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 348
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 347
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 346
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 345
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 344
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 343
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 342
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 341
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 340
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 339
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 338
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 337
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 336
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 335
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 334
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 333
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 332
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 331
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 330
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 329
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 328
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 327
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 326
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 325
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 324
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 323
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 322
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 321
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 320
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 319
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 318
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 317
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 316
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 315
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 314
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 313
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 312
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 311
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 310
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 400
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 399
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 398
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 397
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 396
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 395
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 394
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 393
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 392
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 391
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 390
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 459
  v:  
starting to process insn 458
  v:  
starting to process insn 457
  v:  
starting to process insn 455
  v:  
starting to process insn 454
  v:  1
i = -2, index = 2
failing at i = -2
starting to process insn 453
  v:  1, 2
starting to process insn 452
  v:  1, 2
i = -3, index = 3
failing at i = -3
starting to process insn 451
  v:  1, 2, 3
starting to process insn 450
  v:  1, 2, 3
i = -4, index = 4
failing at i = -4
starting to process insn 449
  v:  1, 2, 3, 4
starting to process insn 447
  v:  1, 2, 3, 4
i = -5, index = 5
failing at i = -5
starting to process insn 446
  v:  1, 2, 3, 4, 5
i = -6, index = 6
failing at i = -6
starting to process insn 445
  v:  1, 2, 3, 4, 5, 6
starting to process insn 444
  v:  1, 2, 3, 4, 5, 6
i = -7, index = 7
failing at i = -7
starting to process insn 443
  v:  1, 2, 3, 4, 5, 6, 7
starting to process insn 442
  v:  1, 2, 3, 4, 5, 6, 7
i = -8, index = 8
failing at i = -8
starting to process insn 441
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 439
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 438
  v:  1, 2, 3, 4, 5, 6, 7, 8
i = -9, index = 9
failing at i = -9
starting to process insn 437
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9
i = -10, index = 10
failing at i = -10
starting to process insn 436
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10
starting to process insn 435
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10
i = -11, index = 11
failing at i = -11
starting to process insn 434
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
starting to process insn 433
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
i = -12, index = 12
failing at i = -12
starting to process insn 432
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
starting to process insn 430
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
i = -13, index = 13
failing at i = -13
starting to process insn 429
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
i = -14, index = 14
failing at i = -14
starting to process insn 428
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
starting to process insn 427
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
i = -15, index = 15
failing at i = -15
starting to process insn 426
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
starting to process insn 425
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
i = -16, index = 16
failing at i = -16
starting to process insn 424
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 422
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 1084
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 1083
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 415
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 414
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 413
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 412
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 411
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 410
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
i = -17, index = 17
failing at i = -17
starting to process insn 409
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
i = -18, index = 18
failing at i = -18
starting to process insn 408
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
i = -19, index = 19
failing at i = -19
starting to process insn 407
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
i = -20, index = 20
failing at i = -20
starting to process insn 462
  v:  
starting to process insn 461
  v:  
starting to process insn 467
  v:  
starting to process insn 466
  v:  
starting to process insn 465
  v:  
starting to process insn 464
  v:  
starting to process insn 474
  v:  
regular read
starting to process insn 473
  v:  
non-frame wild read
starting to process insn 472
  v:  
starting to process insn 471
  v:  
starting to process insn 470
  v:  
starting to process insn 469
  v:  
starting to process insn 484
  v:  
regular read
starting to process insn 483
  v:  
non-frame wild read
starting to process insn 482
  v:  
starting to process insn 481
  v:  
starting to process insn 480
  v:  
starting to process insn 479
  v:  
starting to process insn 490
  v:  
starting to process insn 489
  v:  
starting to process insn 493
  v:  
starting to process insn 492
  v:  
starting to process insn 495
  v:  
starting to process insn 508
  v:  
starting to process insn 507
  v:  
starting to process insn 506
  v:  
starting to process insn 505
  v:  
starting to process insn 504
  v:  
starting to process insn 503
  v:  
starting to process insn 502
  v:  
starting to process insn 501
  v:  
starting to process insn 500
  v:  
starting to process insn 512
  v:  
starting to process insn 511
  v:  
starting to process insn 510
  v:  
starting to process insn 509
  v:  
starting to process insn 519
  v:  
regular read
starting to process insn 518
  v:  
non-frame wild read
starting to process insn 517
  v:  
starting to process insn 516
  v:  
starting to process insn 515
  v:  
starting to process insn 528
  v:  
starting to process insn 527
  v:  
non-frame wild read
starting to process insn 526
  v:  
starting to process insn 525
  v:  
starting to process insn 524
  v:  
starting to process insn 523
  v:  
starting to process insn 522
  v:  
starting to process insn 532
  v:  
starting to process insn 531
  v:  
starting to process insn 530
  v:  
regular read
starting to process insn 538
  v:  
non-frame wild read
starting to process insn 537
  v:  
starting to process insn 536
  v:  
starting to process insn 535
  v:  
starting to process insn 534
  v:  
starting to process insn 544
  v:  
starting to process insn 543
  v:  
starting to process insn 550
  v:  
non-frame wild read
starting to process insn 549
  v:  
starting to process insn 548
  v:  
starting to process insn 547
  v:  
starting to process insn 546
  v:  
starting to process insn 559
  v:  
non-frame wild read
starting to process insn 558
  v:  
starting to process insn 557
  v:  
starting to process insn 556
  v:  
starting to process insn 555
  v:  
starting to process insn 563
  v:  
starting to process insn 562
  v:  
regular read
starting to process insn 569
  v:  
starting to process insn 568
  v:  
regular read
starting to process insn 567
  v:  
starting to process insn 566
  v:  
starting to process insn 575
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
non-frame wild read
starting to process insn 574
  v:  
starting to process insn 573
  v:  
starting to process insn 572
  v:  
starting to process insn 571
  v:  
starting to process insn 584
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
non-frame wild read
starting to process insn 583
  v:  
starting to process insn 582
  v:  
starting to process insn 581
  v:  
starting to process insn 580
  v:  
starting to process insn 614
  v:  
starting to process insn 613
  v:  
starting to process insn 612
  v:  
starting to process insn 611
  v:  
starting to process insn 609
  v:  
starting to process insn 608
  v:  
starting to process insn 607
  v:  
starting to process insn 606
  v:  
regular read
starting to process insn 605
  v:  
starting to process insn 604
  v:  
starting to process insn 603
  v:  
starting to process insn 602
  v:  
starting to process insn 601
  v:  
starting to process insn 599
  v:  
starting to process insn 598
  v:  
starting to process insn 597
  v:  
starting to process insn 596
  v:  
starting to process insn 595
  v:  
starting to process insn 593
  v:  
starting to process insn 592
  v:  
starting to process insn 591
  v:  
starting to process insn 590
  v:  
starting to process insn 617
  v:  
starting to process insn 616
  v:  
starting to process insn 621
  v:  
starting to process insn 620
  v:  
starting to process insn 628
  v:  
starting to process insn 627
  v:  
starting to process insn 626
  v:  
starting to process insn 625
  v:  
starting to process insn 624
  v:  
starting to process insn 634
  v:  
starting to process insn 633
  v:  
starting to process insn 650
  v:  
starting to process insn 649
  v:  
starting to process insn 648
  v:  
starting to process insn 647
  v:  
starting to process insn 646
  v:  
starting to process insn 645
  v:  
starting to process insn 643
  v:  
starting to process insn 642
  v:  
starting to process insn 641
  v:  
starting to process insn 640
  v:  
starting to process insn 639
  v:  
starting to process insn 638
  v:  
starting to process insn 637
  v:  
starting to process insn 636
  v:  
starting to process insn 654
  v:  
starting to process insn 653
  v:  
starting to process insn 652
  v:  
starting to process insn 651
  v:  
starting to process insn 662
  v:  
regular read
starting to process insn 661
  v:  
regular read
starting to process insn 660
  v:  
non-frame wild read
starting to process insn 659
  v:  
starting to process insn 658
  v:  
starting to process insn 657
  v:  
starting to process insn 668
  v:  
starting to process insn 667
  v:  
starting to process insn 689
  v:  
regular read
starting to process insn 688
  v:  
regular read
starting to process insn 687
  v:  
starting to process insn 686
  v:  
non-frame wild read
starting to process insn 685
  v:  
starting to process insn 684
  v:  
starting to process insn 683
  v:  
starting to process insn 682
  v:  
regular read
starting to process insn 681
  v:  
starting to process insn 680
  v:  
non-frame wild read
starting to process insn 679
  v:  
starting to process insn 678
  v:  
starting to process insn 677
  v:  
starting to process insn 676
  v:  
starting to process insn 675
  v:  
starting to process insn 674
  v:  
starting to process insn 673
  v:  
starting to process insn 672
  v:  
starting to process insn 671
  v:  
starting to process insn 670
  v:  
starting to process insn 708
  v:  
starting to process insn 707
  v:  
starting to process insn 706
  v:  
starting to process insn 705
  v:  
starting to process insn 704
  v:  
starting to process insn 703
  v:  
starting to process insn 701
  v:  
starting to process insn 700
  v:  
starting to process insn 699
  v:  
starting to process insn 698
  v:  
starting to process insn 697
  v:  
starting to process insn 696
  v:  
starting to process insn 695
  v:  
starting to process insn 694
  v:  
starting to process insn 712
  v:  
starting to process insn 711
  v:  
starting to process insn 710
  v:  
starting to process insn 709
  v:  
starting to process insn 719
  v:  
regular read
starting to process insn 718
  v:  
non-frame wild read
starting to process insn 717
  v:  
starting to process insn 716
  v:  
starting to process insn 715
  v:  
starting to process insn 730
  v:  
regular read
starting to process insn 729
  v:  
regular read
starting to process insn 728
  v:  
starting to process insn 727
  v:  
non-frame wild read
starting to process insn 726
  v:  
starting to process insn 725
  v:  
starting to process insn 724
  v:  
starting to process insn 723
  v:  
starting to process insn 722
  v:  
starting to process insn 736
  v:  
starting to process insn 735
  v:  
starting to process insn 734
  v:  
starting to process insn 733
  v:  
starting to process insn 744
  v:  
regular read
starting to process insn 743
  v:  
regular read
starting to process insn 742
  v:  
non-frame wild read
starting to process insn 741
  v:  
starting to process insn 740
  v:  
starting to process insn 739
  v:  
starting to process insn 738
  v:  
starting to process insn 755
  v:  
regular read
starting to process insn 754
  v:  
regular read
starting to process insn 753
  v:  
non-frame wild read
starting to process insn 752
  v:  
starting to process insn 751
  v:  
starting to process insn 750
  v:  
starting to process insn 749
  v:  
starting to process insn 762
  v:  
starting to process insn 761
  v:  
starting to process insn 759
  v:  
starting to process insn 758
  v:  
starting to process insn 925
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 924
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 923
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 922
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 921
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 920
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 919
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 918
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 917
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 916
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 915
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 914
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 913
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 912
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 911
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 910
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 909
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 908
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 907
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 906
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 905
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 904
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 903
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 902
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 901
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 900
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 899
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 898
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 897
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 896
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 895
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 894
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 893
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 892
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 891
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 890
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 889
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 888
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 887
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 886
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 885
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 884
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 883
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 882
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 881
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 880
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 879
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 878
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 877
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 876
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 875
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 874
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 873
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 872
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 871
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 870
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 869
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 868
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 867
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 866
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 865
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 864
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 863
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 862
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 861
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 860
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 859
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 858
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 857
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 856
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 855
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 854
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 853
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 852
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 851
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 850
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 849
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 848
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 847
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 846
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 845
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 844
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 843
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 842
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 841
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 840
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 839
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 838
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 837
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 836
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 835
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 834
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 833
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 832
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 831
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 830
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 829
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 828
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 827
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 826
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 825
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 824
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 823
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 822
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 821
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 820
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 819
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 818
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 817
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 816
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 815
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 814
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 813
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 812
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 811
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 810
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 809
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 808
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 807
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 806
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 805
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 804
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 803
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 802
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 801
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 800
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 799
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 798
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 797
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 796
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 795
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 794
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 793
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 792
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 791
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 790
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 789
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 788
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 787
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 786
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 785
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 784
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 783
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 782
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 781
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 780
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 779
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 778
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 777
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 776
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 775
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 774
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 773
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 772
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 771
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 770
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 769
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 768
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 978
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 977
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 976
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 975
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 974
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 973
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 972
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 971
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 970
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 969
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 968
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 967
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 966
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 965
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 964
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 963
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 962
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 961
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 960
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 959
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 958
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 957
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 956
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 955
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 954
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 953
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 952
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 951
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 950
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 949
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 948
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 947
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 946
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 945
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 944
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 943
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 942
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 941
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 940
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 939
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 938
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 937
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 936
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 935
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 934
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 933
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 932
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 931
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 930
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 929
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 928
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 927
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 996
  v:  
non-frame wild read
starting to process insn 995
  v:  
starting to process insn 994
  v:  
starting to process insn 993
  v:  
starting to process insn 992
  v:  
starting to process insn 991
  v:  
starting to process insn 990
  v:  
starting to process insn 989
  v:  
starting to process insn 988
  v:  
starting to process insn 1010
  v:  
non-frame wild read
starting to process insn 1009
  v:  
starting to process insn 1008
  v:  
starting to process insn 1007
  v:  
starting to process insn 1006
  v:  
starting to process insn 1005
  v:  
starting to process insn 1004
  v:  
starting to process insn 1003
  v:  
starting to process insn 1002
  v:  
starting to process insn 1016
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 1015
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Final

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={34d,2u} r1={67d,34u} r2={67d,34u} r6={1d,83u} r7={1d,116u} r8={33d} r9={33d} r10={33d} r11={33d} r12={33d} r13={33d} r14={33d} r15={33d} r16={1d,82u,2e} r17={315d,56u} r18={33d} r19={33d} r20={1d,132u,17e} r21={34d} r22={34d} r23={34d} r24={34d} r25={32d} r26={32d} r29={32d} r30={32d} r31={32d} r32={32d} r33={32d} r34={32d} r35={32d} r36={32d} r37={66d,32u} r38={34d} r39={33d} r40={33d} r53={33d} r54={33d} r55={33d} r56={33d} r57={33d} r58={33d} r59={33d} r60={33d} r61={33d} r62={33d} r63={33d} r64={33d} r65={33d} r66={33d} r67={33d} r68={33d} r69={33d} r70={33d} r71={33d} r72={33d} r73={33d} r74={33d} r75={33d} r76={33d} r77={33d} r78={33d} r79={33d} r80={33d} r87={3d,1u} r88={1d,3u} r89={1d,19u,3e} r91={1d,10u} r92={2d,5u} r109={2d,2u} r111={1d,2u} r115={3d,1u} r128={1d,2u} r137={1d,3u,1e} r139={1d,2u} r143={2d,2u} r146={1d,3u,1e} r148={1d,2u} r241={1d,8u} r242={1d,21u,6e} r243={1d,2u} r244={1d,6u} r245={2d,6u} r246={1d,4u} r263={1d,4u} r283={2d,1u} r287={1d,3u} r288={2d,2u} r290={1d,2u} r292={3d,1u} r298={1d,2u,1e} r305={1d,2u} r317={1d,3u,1e} r319={1d,2u} r327={2d,2u} r330={1d,3u,1e} r332={1d,2u} r594={2d,1u} r603={1d,2u} r609={4d,2u} r612={7d,7u} r616={4d,2u} r633={1d,220u,58e} r634={1d,96u} r635={1d,1u} r636={1d,1u} r637={1d,1u} r638={1d,1u} r639={1d,1u} r640={1d,1u} r641={1d,1u} r642={1d,1u} r643={1d,1u} r644={1d,1u} r645={1d,1u} r646={1d,1u} r648={1d,1u} r650={1d,1u} r651={1d,1u} r652={1d,1u} r653={1d,1u} r654={1d,1u} r655={1d,1u} r656={1d,1u} r657={1d,1u} r658={1d,1u} r659={1d,1u} r660={1d,1u} r661={1d,2u} r662={1d,1u} r663={1d,1u} r664={1d,3u,2e} r665={1d,1u,1e} r666={1d,1u} r667={1d,1u} r668={1d,1u} r669={1d,3u} r670={1d,1u} r671={1d,1u} r672={1d,1u} r674={1d,1u} r676={1d,1u} r677={1d,1u} r678={1d,1u} r679={1d,1u} r680={1d,1u} r682={1d,1u} r684={1d,1u} r685={1d,1u} r686={1d,1u} r687={1d,1u} r688={1d,1u} r690={1d,1u} r692={1d,1u} r693={1d,1u} r694={1d,1u} r695={1d,1u} r696={1d,1u} r697={1d,1u} r698={1d,1u} r699={1d,1u} r700={1d,1u} r701={1d,1u} r702={1d,1u} r703={1d,1u} r704={1d,1u} r705={1d,1u} r706={1d,1u} r707={1d,1u} r708={1d,1u} r709={1d,1u} r710={1d,1u} r711={1d,1u} r712={1d,1u} r713={1d,1u} r714={1d,1u} r715={1d,1u} r716={1d,1u} r717={1d,1u} r718={1d,1u} r719={1d,1u} r720={1d,1u} r721={1d,1u} r722={1d,1u} r723={1d,1u} r724={1d,1u} r725={1d,1u} r726={1d,1u} r727={1d,1u} r728={1d,1u} r729={1d,1u} r730={1d,1u} r731={1d,1u} r732={1d,1u} r733={1d,1u} r734={1d,1u} r735={1d,1u} r736={1d,1u} r737={1d,1u} r738={1d,1u} r739={1d,1u} r740={1d,1u} r741={1d,1u} r742={1d,1u} r743={1d,1u} r744={1d,1u} r745={1d,1u} r746={1d,1u} r747={1d,1u} r748={1d,1u} r749={1d,1u} r750={1d,1u} r751={1d,1u} r752={1d,1u} r753={1d,1u} r754={1d,1u} r755={1d,1u} r756={1d,1u} r757={1d,1u} r758={1d,1u} r759={1d,1u} r760={1d,1u} r761={1d,1u} r762={1d,1u} r763={1d,1u} r764={1d,1u} r765={1d,1u} r766={1d,1u} r767={1d,1u} r768={1d,1u} r769={1d,1u} r770={1d,1u} r771={1d,1u} r772={1d,1u} r774={1d,1u} r776={1d,1u} r777={1d,1u} r778={1d,1u} r779={1d,1u} r780={1d,1u} r781={1d,1u} r782={1d,1u} r783={1d,1u} r784={1d,1u} r785={1d,1u} r786={1d,1u} r787={1d,1u} r788={1d,1u} r789={1d,2u} r790={1d,1u} r791={1d,1u} r792={1d,2u,2e} r793={1d,1u} r794={1d,3u} r795={1d,1u} r796={1d,1u} r797={1d,1u} r798={1d,1u} r799={1d,1u} r801={1d,1u} r803={1d,1u} r804={1d,1u} r805={1d,1u} r806={1d,1u} r807={1d,1u} r808={1d,2u} r809={1d,1u} r810={1d,1u} r811={1d,1u} r814={1d,1u} r816={1d,1u} r817={1d,1u} r818={1d,1u} r819={1d,1u} r820={1d,1u} r821={1d,1u} r822={1d,1u} r823={1d,1u} r824={1d,2u} r825={1d,1u} r826={1d,1u} r827={1d,1u} r830={1d,1u} r832={1d,1u} r833={1d,1u} r834={1d,1u} r835={1d,1u} r836={1d,1u} r837={1d,1u} r838={1d,1u} r839={1d,1u} r840={1d,1u} r841={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,1u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r850={1d,1u} r851={1d,1u} r852={1d,1u} r853={1d,1u} r854={1d,1u} r855={1d,1u} r856={1d,1u} r857={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,1u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r871={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,1u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r880={1d,1u} r881={1d,1u} r882={1d,1u} r883={1d,1u} r884={1d,1u} r885={1d,1u} r886={1d,1u} r887={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r891={1d,1u} r892={1d,1u} r893={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r898={1d,1u} r899={1d,1u} r900={1d,1u} r901={1d,1u} r902={1d,1u} r903={1d,1u} r904={1d,1u} r905={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r909={1d,1u} r910={1d,1u} r911={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r916={1d,1u} r917={1d,1u} r918={1d,1u} r919={1d,1u} r920={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r925={1d,1u} r926={1d,1u} r927={1d,1u} r928={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r932={1d,1u} r933={1d,1u} r934={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r939={1d,1u} r940={1d,1u} r941={1d,1u} r942={1d,1u} r943={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r948={1d,1u} r949={1d,1u} r950={1d,1u} r951={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r955={1d,1u} r956={1d,1u} r957={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r962={1d,1u} r963={1d,1u} r964={1d,1u} r965={1d,1u} r966={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r971={1d,1u} r972={1d,1u} r973={1d,1u} r974={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r978={1d,1u} r979={1d,1u} r980={1d,1u} r981={1d,1u} r983={1d,1u} r984={1d,1u} r985={1d,1u} r986={1d,1u} r987={1d,1u} r988={1d,1u} r989={1d,1u} 
;;    total ref usage 4242{2765d,1381u,96e} in 805{772 regular + 33 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 612 633 634
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 612 633 634
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 633 [ state ])
        (reg:DI 2 cx [ state ])) blake_ref.c:653 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 634 [ hashval ])
        (reg:DI 1 dx [ hashval ])) blake_ref.c:653 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ hashval ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 hashval+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) blake_ref.c:655 90 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 612 [ D.6033 ])
            (const_int 383 [0x17f]))) blake_ref.c:655 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 405)
            (pc))) blake_ref.c:655 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 405)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              47 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags] 88 89 91 92 635 636 637 638 639 640 641
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634
;; live  gen 	 17 [flags] 88 89 91 92 635 636 637 638 639 640 641
;; live  kill	 17 [flags]
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 zz+0 S1 A32])
        (const_int 0 [0])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 12 11 13 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed])) [0 zo+0 S1 A8])
        (const_int 1 [0x1])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 13 12 14 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -18 [0xffffffffffffffee])) [0 oz+0 S1 A16])
        (const_int -128 [0xffffffffffffff80])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 14 13 15 3 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -17 [0xffffffffffffffef])) [0 oo+0 S1 A8])
        (const_int -127 [0xffffffffffffff81])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:SI 88 [ D.6032 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) blake_ref.c:416 90 {*movsi_internal}
     (nil))
(insn 16 15 18 3 (set (reg:SI 89 [ D.6033 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])) blake_ref.c:416 90 {*movsi_internal}
     (nil))
(insn 18 16 19 3 (parallel [
            (set (reg/v:SI 91 [ low ])
                (plus:SI (reg:SI 88 [ D.6032 ])
                    (reg:SI 89 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:416 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 1081 3 (set (reg/v:SI 92 [ high ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 52 [0x34])) [2 state_4(D)->t32+4 S4 A32])) blake_ref.c:417 90 {*movsi_internal}
     (nil))
(insn 1081 19 1082 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 91 [ low ])
            (reg:SI 89 [ D.6033 ]))) blake_ref.c:419 7 {*cmpsi_1}
     (nil))
(insn 1082 1081 26 3 (parallel [
            (set (reg/v:SI 92 [ high ])
                (plus:SI (plus:SI (ltu:SI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg/v:SI 92 [ high ]))
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:419 284 {addsi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 1082 27 3 (parallel [
            (set (reg:SI 635 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 92 [ high ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 msglen+0 S1 A128])
        (subreg:QI (reg:SI 635 [ D.6032 ]) 0)) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 635 [ D.6032 ])
        (nil)))
(insn 28 27 29 3 (parallel [
            (set (reg:SI 636 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 92 [ high ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -15 [0xfffffffffffffff1])) [0 msglen+1 S1 A8])
        (subreg:QI (reg:SI 636 [ D.6032 ]) 0)) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 636 [ D.6032 ])
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg:SI 637 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 92 [ high ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 msglen+2 S1 A16])
        (subreg:QI (reg:SI 637 [ D.6032 ]) 0)) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 637 [ D.6032 ])
        (nil)))
(insn 32 31 33 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 msglen+3 S1 A8])
        (subreg:QI (reg/v:SI 92 [ high ]) 0)) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:SI 92 [ high ])
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg:SI 638 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 91 [ low ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 35 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 msglen+4 S1 A32])
        (subreg:QI (reg:SI 638 [ D.6032 ]) 0)) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 638 [ D.6032 ])
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg:SI 639 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 91 [ low ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 37 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -11 [0xfffffffffffffff5])) [0 msglen+5 S1 A8])
        (subreg:QI (reg:SI 639 [ D.6032 ]) 0)) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 639 [ D.6032 ])
        (nil)))
(insn 37 36 38 3 (parallel [
            (set (reg:SI 640 [ D.6032 ])
                (lshiftrt:SI (reg/v:SI 91 [ low ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 msglen+6 S1 A16])
        (subreg:QI (reg:SI 640 [ D.6032 ]) 0)) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 640 [ D.6032 ])
        (nil)))
(insn 39 38 40 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7])) [0 msglen+7 S1 A8])
        (subreg:QI (reg/v:SI 91 [ low ]) 0)) blake_ref.c:421 93 {*movqi_internal}
     (nil))
(insn 40 39 41 3 (parallel [
            (set (reg:SI 641 [ D.6035 ])
                (and:SI (reg:SI 89 [ D.6033 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:423 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 41 40 42 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 641 [ D.6035 ])
            (const_int 0 [0]))) blake_ref.c:423 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 641 [ D.6035 ])
        (nil)))
(jump_insn 42 41 43 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) blake_ref.c:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 145)
;;  succ:       4 [50.0%]  (FALLTHRU)
;;              22 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634

;; basic block 4, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [50.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u62(6){ }u63(7){ }u64(16){ }u65(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.6033 ])
            (const_int 440 [0x1b8]))) blake_ref.c:426 7 {*cmpsi_1}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) blake_ref.c:426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 70)
;;  succ:       5 [28.0%]  (FALLTHRU)
;;              8 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634

;; basic block 5, loop depth 0, count 0, freq 546, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [28.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 612 633
;; lr  def 	 17 [flags] 642
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 612 633 634
;; live  gen 	 17 [flags] 642
;; live  kill	 17 [flags]
(note 46 45 47 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 5 (parallel [
            (set (reg:SI 642)
                (plus:SI (reg:SI 88 [ D.6032 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:428 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6032 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 48 47 49 5 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 642)) blake_ref.c:428 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 642)
        (nil)))
(insn 49 48 50 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 224 [0xe0]))) blake_ref.c:429 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 50 49 51 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) blake_ref.c:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 60)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 6, loop depth 0, count 0, freq 153, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 643
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 115 643
;; live  kill	 17 [flags]
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (parallel [
            (set (reg/f:DI 643)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -18 [0xffffffffffffffee])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 6 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:DI 1 dx)
        (reg/f:DI 643)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 643)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -18 [0xffffffffffffffee]))
            (nil))))
(insn 55 54 56 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 56 55 57 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 57 56 60 6 (set (reg:SI 115 [ D.6032 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634

;; basic block 7, loop depth 0, count 0, freq 393, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(6){ }u91(7){ }u92(16){ }u93(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 115 644
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 115 644
;; live  kill	 17 [flags]
(code_label 60 57 61 7 97 "" [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (parallel [
            (set (reg/f:DI 644)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 63 62 64 7 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 64 63 65 7 (set (reg:DI 1 dx)
        (reg/f:DI 644)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 644)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -17 [0xffffffffffffffef]))
            (nil))))
(insn 65 64 66 7 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 67 66 70 7 (set (reg:SI 115 [ D.6032 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634

;; basic block 8, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [72.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 70 67 71 8 96 "" [1 uses])
(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.6033 ])
            (const_int 439 [0x1b7]))) blake_ref.c:435 7 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) blake_ref.c:435 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 81)
;;  succ:       9 [50.0%]  (FALLTHRU)
;;              11 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634

;; basic block 9, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(note 74 73 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.6033 ])
            (const_int 0 [0]))) blake_ref.c:437 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 986)
            (pc))) blake_ref.c:437 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 986)
;;  succ:       10 [50.0%]  (FALLTHRU)
;;              95 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634

;; basic block 10, loop depth 0, count 0, freq 351, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	
;; live  kill	
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 81 10 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:438 90 {*movsi_internal}
     (nil))
;;  succ:       95 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634

;; basic block 11, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 10, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633
;; lr  def 	 17 [flags] 109 111 645 646 648
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 17 [flags] 109 111 645 646 648
;; live  kill	 17 [flags]
(code_label 81 78 82 11 99 "" [1 uses])
(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (parallel [
            (set (reg:SI 109 [ D.6032 ])
                (plus:SI (reg/v:SI 91 [ low ])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:445 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 91 [ low ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 84 83 85 11 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 109 [ D.6032 ])) blake_ref.c:445 90 {*movsi_internal}
     (nil))
(insn 85 84 86 11 (set (reg:SI 646)
        (const_int 512 [0x200])) blake_ref.c:446 90 {*movsi_internal}
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg:SI 645 [ D.6033 ])
                (minus:SI (reg:SI 646)
                    (reg:SI 89 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:446 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 646)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 512 [0x200])
                    (reg:SI 89 [ D.6033 ]))
                (nil)))))
(insn 87 86 88 11 (set (reg:DI 111 [ D.6036 ])
        (sign_extend:DI (reg:SI 645 [ D.6033 ]))) blake_ref.c:446 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 645 [ D.6033 ])
        (nil)))
(insn 88 87 89 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 111 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(insn 89 88 90 11 (set (reg:QI 648 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 90 89 91 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 648 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 648 [ D.6038 ])
        (nil)))
(jump_insn 91 90 1018 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1030)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1030)
;;  succ:       15 [14.0%] 
;;              13 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 109 111 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 109 111 633 634

;; basic block 13, loop depth 0, count 0, freq 604, maybe hot
;;  prev block 11, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [86.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u134(6){ }u135(7){ }u136(16){ }u137(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 109 111 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags] 650
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 109 111 633 634
;; live  gen 	 17 [flags] 650
;; live  kill	
(note 1018 91 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 92 1018 93 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ D.6033 ])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6033 ])
        (nil)))
(insn 93 92 94 13 (set (reg:QI 650 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 94 93 95 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 650 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 650 [ D.6038 ])
        (nil)))
(jump_insn 95 94 1030 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 103)
;;  succ:       16 [83.7%] 
;;              15 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 633 634

;; basic block 15, loop depth 0, count 0, freq 343, maybe hot
;; Invalid sum of incoming frequencies 196, should be 343
;;  prev block 13, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [16.3%]  (FALLTHRU)
;;              11 [14.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 109
;; live  kill	
(code_label 1030 95 97 15 146 "" [1 uses])
(note 97 1030 98 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 15 (set (reg:DI 37 r8)
        (reg:DI 111 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111 [ D.6036 ])
        (nil)))
(insn 99 98 100 15 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 100 99 101 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 101 100 102 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 102 101 103 15 (set (reg:SI 109 [ D.6032 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 633 634

;; basic block 16, loop depth 0, count 0, freq 702, maybe hot
;; Invalid sum of incoming frequencies 849, should be 702
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              13 [83.7%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(6){ }u154(7){ }u155(16){ }u156(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 651
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 651
;; live  kill	 17 [flags]
(code_label 103 102 104 16 101 "" [1 uses])
(note 104 103 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 16 (parallel [
            (set (reg:SI 651)
                (plus:SI (reg:SI 109 [ D.6032 ])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:447 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 109 [ D.6032 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 16 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 651)) blake_ref.c:447 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 651)
        (nil)))
(insn 107 106 108 16 (set (reg:DI 37 r8)
        (const_int 440 [0x1b8])) 89 {*movdi_internal}
     (nil))
(insn 108 107 109 16 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 109 108 110 16 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 110 109 111 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 111 110 997 16 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:449 90 {*movsi_internal}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 17, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              95 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u166(6){ }u167(7){ }u168(16){ }u169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 997 111 112 17 144 "" [0 uses])
(note 112 997 113 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 224 [0xe0]))) blake_ref.c:451 7 {*cmpsi_1}
     (nil))
(jump_insn 114 113 115 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) blake_ref.c:451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 123)
;;  succ:       18 [28.0%]  (FALLTHRU)
;;              19 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 18, loop depth 0, count 0, freq 393, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [28.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 652
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 652
;; live  kill	 17 [flags]
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 18 (parallel [
            (set (reg/f:DI 652)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 117 116 118 18 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 118 117 119 18 (set (reg:DI 1 dx)
        (reg/f:DI 652)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 652)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec]))
            (nil))))
(insn 119 118 120 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 120 119 123 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 19, loop depth 0, count 0, freq 1011, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [72.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u184(6){ }u185(7){ }u186(16){ }u187(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 653
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 653
;; live  kill	 17 [flags]
(code_label 123 120 124 19 103 "" [1 uses])
(note 124 123 125 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 19 (parallel [
            (set (reg/f:DI 653)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19 [0xffffffffffffffed])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 19 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 127 126 128 19 (set (reg:DI 1 dx)
        (reg/f:DI 653)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 653)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed]))
            (nil))))
(insn 128 127 129 19 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 129 128 130 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 20, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u196(6){ }u197(7){ }u198(16){ }u199(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags] 115 654
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 115 654
;; live  kill	 17 [flags]
(code_label 130 129 131 20 104 "" [0 uses])
(note 131 130 132 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 20 (set (reg:SI 654 [ state_4(D)->t32 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) blake_ref.c:455 90 {*movsi_internal}
     (nil))
(insn 133 132 134 20 (parallel [
            (set (reg:SI 115 [ D.6032 ])
                (plus:SI (reg:SI 654 [ state_4(D)->t32 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:455 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 654 [ state_4(D)->t32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                    (const_int -8 [0xfffffffffffffff8]))
                (nil)))))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634

;; basic block 21, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              7 [100.0%]  (FALLTHRU)
;;              20 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u203(6){ }u204(7){ }u205(16){ }u206(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 655 656
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 655 656
;; live  kill	 17 [flags]
(code_label 134 133 135 21 98 "" [0 uses])
(note 135 134 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 21 (parallel [
            (set (reg:SI 655)
                (plus:SI (reg:SI 115 [ D.6032 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:457 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 115 [ D.6032 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 137 136 138 21 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 655)) blake_ref.c:457 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 655)
        (nil)))
(insn 138 137 139 21 (parallel [
            (set (reg/f:DI 656)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 139 138 140 21 (set (reg:DI 37 r8)
        (const_int 64 [0x40])) 89 {*movdi_internal}
     (nil))
(insn 140 139 141 21 (set (reg:DI 1 dx)
        (reg/f:DI 656)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 656)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 141 140 142 21 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 142 141 145 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       45 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 22, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 633
;; lr  def 	 17 [flags] 128 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 674
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 612 633 634
;; live  gen 	 17 [flags] 128 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 674
;; live  kill	 17 [flags]
(code_label 145 142 146 22 95 "" [1 uses])
(note 146 145 148 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 148 146 149 22 (parallel [
            (set (reg:SI 658)
                (plus:SI (reg:SI 89 [ D.6033 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 149 148 150 22 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 89 [ D.6033 ])
            (const_int 0 [0]))) blake_ref.c:464 3 {*cmpsi_ccno_1}
     (nil))
(insn 150 149 151 22 (set (reg:SI 657 [ D.6033 ])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 658)
            (reg:SI 89 [ D.6033 ]))) blake_ref.c:464 951 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 658)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 151 150 153 22 (parallel [
            (set (reg:SI 659)
                (ashiftrt:SI (reg:SI 657 [ D.6033 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 657 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 89 [ D.6033 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 153 151 154 22 (parallel [
            (set (reg:SI 660)
                (ashiftrt:SI (reg:SI 89 [ D.6033 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 538 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 154 153 155 22 (parallel [
            (set (reg:SI 661)
                (lshiftrt:SI (reg:SI 660)
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 660)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 22 (parallel [
            (set (reg:SI 662)
                (plus:SI (reg:SI 89 [ D.6033 ])
                    (reg:SI 661)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 156 155 157 22 (parallel [
            (set (reg:SI 663)
                (and:SI (reg:SI 662)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 662)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 157 156 159 22 (parallel [
            (set (reg:SI 664)
                (minus:SI (reg:SI 663)
                    (reg:SI 661)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 663)
        (expr_list:REG_DEAD (reg:SI 661)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 159 157 160 22 (set (reg:SI 666)
        (const_int 8 [0x8])) blake_ref.c:465 90 {*movsi_internal}
     (nil))
(insn 160 159 161 22 (parallel [
            (set (reg:SI 665 [ D.6033 ])
                (minus:SI (reg:SI 666)
                    (reg:SI 664)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 666)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 8 [0x8])
                    (reg:SI 664))
                (nil)))))
(insn 161 160 162 22 (set (reg:SI 668)
        (const_int 255 [0xff])) blake_ref.c:465 90 {*movsi_internal}
     (nil))
(insn 162 161 163 22 (parallel [
            (set (reg:SI 667 [ D.6033 ])
                (ashift:SI (reg:SI 668)
                    (subreg:QI (reg:SI 665 [ D.6033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 668)
        (expr_list:REG_DEAD (reg:SI 665 [ D.6033 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (ashift:SI (const_int 255 [0xff])
                        (subreg:QI (reg:SI 665 [ D.6033 ]) 0))
                    (nil))))))
(insn 163 162 164 22 (set (reg:DI 669 [ D.6033 ])
        (sign_extend:DI (reg:SI 659))) blake_ref.c:464 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 659)
        (nil)))
(insn 164 163 165 22 (parallel [
            (set (reg:QI 670 [ D.6037 ])
                (and:QI (subreg:QI (reg:SI 667 [ D.6033 ]) 0)
                    (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                                (reg:DI 669 [ D.6033 ]))
                            (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 384 {*andqi_1}
     (expr_list:REG_DEAD (reg:SI 667 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 22 (set (reg:SI 672)
        (const_int 128 [0x80])) blake_ref.c:465 90 {*movsi_internal}
     (nil))
(insn 166 165 167 22 (parallel [
            (set (reg:SI 671 [ D.6033 ])
                (ashiftrt:SI (reg:SI 672)
                    (subreg:QI (reg:SI 664) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 672)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (const_int 128 [0x80])
                    (subreg:QI (reg:SI 664) 0))
                (nil)))))
(insn 167 166 169 22 (parallel [
            (set (reg:QI 128 [ D.6034 ])
                (xor:QI (reg:QI 670 [ D.6037 ])
                    (subreg:QI (reg:SI 671 [ D.6033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:SI 671 [ D.6033 ])
        (expr_list:REG_DEAD (reg:QI 670 [ D.6037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 169 167 170 22 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                    (reg:DI 669 [ D.6033 ]))
                (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])
        (reg:QI 128 [ D.6034 ])) blake_ref.c:465 93 {*movqi_internal}
     (nil))
(insn 170 169 171 22 (parallel [
            (set (reg:SI 674 [ D.6035 ])
                (plus:SI (reg:SI 89 [ D.6033 ])
                    (const_int -441 [0xfffffffffffffe47])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:467 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 171 170 172 22 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 674 [ D.6035 ])
            (const_int 5 [0x5]))) blake_ref.c:467 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 674 [ D.6035 ])
        (nil)))
(jump_insn 172 171 173 22 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) blake_ref.c:467 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 187)
;;  succ:       23 [50.0%]  (FALLTHRU)
;;              27 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 128 612 633 634 664 669
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 128 612 633 634 664 669

;; basic block 23, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 22, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [50.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u258(6){ }u259(7){ }u260(16){ }u261(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 612 633 634 664 669
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 612 633 634 664 669
;; live  gen 	 17 [flags]
;; live  kill	
(note 173 172 174 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 224 [0xe0]))) blake_ref.c:469 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 175 174 176 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 180)
            (pc))) blake_ref.c:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 180)
;;  succ:       26 [28.0%] 
;;              25 [72.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 633 634 664 669
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 633 634 664 669

;; basic block 25, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 23, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [72.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u264(6){ }u265(7){ }u266(16){ }u267(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 633 634 664 669
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 633 669
;; lr  def 	 17 [flags] 676
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 128 633 634 664 669
;; live  gen 	 676
;; live  kill	 17 [flags]
(note 176 175 178 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 178 176 179 25 (parallel [
            (set (reg:QI 676)
                (xor:QI (reg:QI 128 [ D.6034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:472 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 128 [ D.6034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 179 178 180 25 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                    (reg:DI 669 [ D.6033 ]))
                (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])
        (reg:QI 676)) blake_ref.c:472 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 676)
        (expr_list:REG_DEAD (reg:DI 669 [ D.6033 ])
            (nil))))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 633 634 664
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 633 634 664

;; basic block 26, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [28.0%] 
;;              25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u273(6){ }u274(7){ }u275(16){ }u276(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 633 634 664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 633 664
;; lr  def 	 17 [flags] 87 677
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 633 634 664
;; live  gen 	 87 677
;; live  kill	 17 [flags]
(code_label 180 179 181 26 107 "" [1 uses])
(note 181 180 182 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 26 (parallel [
            (set (reg:SI 677 [ D.6032 ])
                (plus:SI (reg:SI 88 [ D.6032 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:473 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 88 [ D.6032 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 26 (parallel [
            (set (reg:SI 87 [ D.6031 ])
                (plus:SI (reg:SI 677 [ D.6032 ])
                    (reg:SI 664)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:473 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 677 [ D.6032 ])
        (expr_list:REG_DEAD (reg:SI 664)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 184 183 187 26 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 448 [0x1c0])) blake_ref.c:475 90 {*movsi_internal}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634

;; basic block 27, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 187 184 188 27 106 "" [1 uses])
(note 188 187 189 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.6033 ])
            (const_int 439 [0x1b7]))) blake_ref.c:478 7 {*cmpsi_1}
     (nil))
(jump_insn 190 189 191 27 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 218)
            (pc))) blake_ref.c:478 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 218)
;;  succ:       28 [29.0%]  (FALLTHRU)
;;              33 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634

;; basic block 28, loop depth 0, count 0, freq 283, maybe hot
;;  prev block 27, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [29.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u287(6){ }u288(7){ }u289(16){ }u290(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633
;; lr  def 	 17 [flags] 137 139 609 678 679 680 682
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 612 633 634
;; live  gen 	 17 [flags] 137 139 609 678 679 680 682
;; live  kill	 17 [flags]
(note 191 190 192 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 28 (parallel [
            (set (reg:SI 609 [ D.6031 ])
                (plus:SI (reg/v:SI 91 [ low ])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:480 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 91 [ low ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 28 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 609 [ D.6031 ])) blake_ref.c:480 90 {*movsi_internal}
     (nil))
(insn 194 193 195 28 (parallel [
            (set (reg:SI 678 [ D.6035 ])
                (and:SI (reg:SI 89 [ D.6033 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:481 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 195 194 196 28 (parallel [
            (set (reg:SI 137 [ D.6033 ])
                (plus:SI (reg:SI 678 [ D.6035 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:481 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 678 [ D.6035 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 196 195 197 28 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 137 [ D.6033 ])) blake_ref.c:481 90 {*movsi_internal}
     (nil))
(insn 197 196 198 28 (set (reg:SI 680)
        (const_int 440 [0x1b8])) blake_ref.c:482 90 {*movsi_internal}
     (nil))
(insn 198 197 199 28 (parallel [
            (set (reg:SI 679 [ D.6033 ])
                (minus:SI (reg:SI 680)
                    (reg:SI 137 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:482 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 680)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 440 [0x1b8])
                    (reg:SI 137 [ D.6033 ]))
                (nil)))))
(insn 199 198 200 28 (set (reg:DI 139 [ D.6036 ])
        (sign_extend:DI (reg:SI 679 [ D.6033 ]))) blake_ref.c:482 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 679 [ D.6033 ])
        (nil)))
(insn 200 199 201 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 139 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(insn 201 200 202 28 (set (reg:QI 682 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 202 201 203 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 682 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 682 [ D.6038 ])
        (nil)))
(jump_insn 203 202 1020 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1031)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1031)
;;  succ:       32 [14.0%] 
;;              30 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137 139 609 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137 139 609 612 633 634

;; basic block 30, loop depth 0, count 0, freq 243, maybe hot
;;  prev block 28, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [86.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u305(6){ }u306(7){ }u307(16){ }u308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137 139 609 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137
;; lr  def 	 17 [flags] 684
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 137 139 609 612 633 634
;; live  gen 	 17 [flags] 684
;; live  kill	
(note 1020 203 204 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 204 1020 205 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 137 [ D.6033 ])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ D.6033 ])
        (nil)))
(insn 205 204 206 30 (set (reg:QI 684 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 206 205 207 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 684 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 684 [ D.6038 ])
        (nil)))
(jump_insn 207 206 1031 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 276)
;;  succ:       41 [83.7%] 
;;              32 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139 609 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139 609 612 633 634

;; basic block 32, loop depth 0, count 0, freq 61, maybe hot
;;  prev block 30, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 [16.3%]  (FALLTHRU)
;;              28 [14.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u313(6){ }u314(7){ }u315(16){ }u316(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 609 612
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 139 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 609 612
;; live  kill	
(code_label 1031 207 209 32 147 "" [1 uses])
(note 209 1031 210 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 32 (set (reg:DI 37 r8)
        (reg:DI 139 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139 [ D.6036 ])
        (nil)))
(insn 211 210 212 32 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 212 211 213 32 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 213 212 214 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 214 213 215 32 (set (reg:SI 609 [ D.6031 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 215 214 218 32 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634

;; basic block 33, loop depth 0, count 0, freq 692, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [71.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u325(6){ }u326(7){ }u327(16){ }u328(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 218 215 219 33 109 "" [1 uses])
(note 219 218 220 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 220 219 221 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ D.6033 ])
            (const_int 504 [0x1f8]))) blake_ref.c:485 7 {*cmpsi_1}
     (nil))
(jump_insn 221 220 222 33 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) blake_ref.c:485 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 240)
;;  succ:       34 [29.0%]  (FALLTHRU)
;;              35 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634

;; basic block 34, loop depth 0, count 0, freq 201, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [29.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u331(6){ }u332(7){ }u333(16){ }u334(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 609 612 685
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 609 612 685
;; live  kill	 17 [flags]
(note 222 221 223 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 223 222 224 34 (parallel [
            (set (reg:SI 685)
                (plus:SI (reg/v:SI 91 [ low ])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:487 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 91 [ low ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 34 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 685)) blake_ref.c:487 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 685)
        (nil)))
(insn 225 224 226 34 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 512 [0x200])) blake_ref.c:488 90 {*movsi_internal}
     (nil))
(insn 226 225 227 34 (set (reg:DI 37 r8)
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 227 226 228 34 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 228 227 229 34 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 229 228 230 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 230 229 231 34 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:490 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 231 230 232 34 (set (reg:DI 37 r8)
        (const_int 440 [0x1b8])) 89 {*movdi_internal}
     (nil))
(insn 232 231 233 34 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 233 232 234 34 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 234 233 235 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 235 234 236 34 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:492 90 {*movsi_internal}
     (nil))
(insn 236 235 237 34 (set (reg:SI 609 [ D.6031 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 237 236 240 34 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634

;; basic block 35, loop depth 0, count 0, freq 491, maybe hot
;;  prev block 34, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 [71.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u354(6){ }u355(7){ }u356(16){ }u357(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633
;; lr  def 	 17 [flags] 143 146 148 686 687 688 690
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 17 [flags] 143 146 148 686 687 688 690
;; live  kill	 17 [flags]
(code_label 240 237 241 35 112 "" [1 uses])
(note 241 240 242 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 35 (parallel [
            (set (reg:SI 143 [ D.6032 ])
                (plus:SI (reg/v:SI 91 [ low ])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:496 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 91 [ low ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 243 242 244 35 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 143 [ D.6032 ])) blake_ref.c:496 90 {*movsi_internal}
     (nil))
(insn 244 243 245 35 (parallel [
            (set (reg:SI 686 [ D.6035 ])
                (and:SI (reg:SI 89 [ D.6033 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:498 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 89 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 245 244 246 35 (parallel [
            (set (reg:SI 146 [ D.6033 ])
                (plus:SI (reg:SI 686 [ D.6035 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:498 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 686 [ D.6035 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 246 245 247 35 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 146 [ D.6033 ])) blake_ref.c:498 90 {*movsi_internal}
     (nil))
(insn 247 246 248 35 (set (reg:SI 688)
        (const_int 512 [0x200])) blake_ref.c:499 90 {*movsi_internal}
     (nil))
(insn 248 247 249 35 (parallel [
            (set (reg:SI 687 [ D.6033 ])
                (minus:SI (reg:SI 688)
                    (reg:SI 146 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:499 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 688)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 512 [0x200])
                    (reg:SI 146 [ D.6033 ]))
                (nil)))))
(insn 249 248 250 35 (set (reg:DI 148 [ D.6036 ])
        (sign_extend:DI (reg:SI 687 [ D.6033 ]))) blake_ref.c:499 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 687 [ D.6033 ])
        (nil)))
(insn 250 249 251 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 146 [ D.6033 ])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 146 [ D.6033 ])
        (nil)))
(insn 251 250 252 35 (set (reg:QI 690 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 252 251 253 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 690 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 690 [ D.6038 ])
        (nil)))
(jump_insn 253 252 1022 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1032)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1032)
;;  succ:       39 [14.0%] 
;;              37 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634

;; basic block 37, loop depth 0, count 0, freq 422, maybe hot
;;  prev block 35, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 [86.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u372(6){ }u373(7){ }u374(16){ }u375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 17 [flags] 692
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634
;; live  gen 	 17 [flags] 692
;; live  kill	
(note 1022 253 254 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 254 1022 255 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 148 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(insn 255 254 256 37 (set (reg:QI 692 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:295 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 256 255 257 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 692 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:295 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 692 [ D.6038 ])
        (nil)))
(jump_insn 257 256 1032 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 265)
;;  succ:       40 [83.7%] 
;;              39 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 148 633 634

;; basic block 39, loop depth 0, count 0, freq 240, maybe hot
;; Invalid sum of incoming frequencies 138, should be 240
;;  prev block 37, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [16.3%]  (FALLTHRU)
;;              35 [14.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(6){ }u381(7){ }u382(16){ }u383(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 143
;; live  kill	
(code_label 1032 257 259 39 148 "" [1 uses])
(note 259 1032 260 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 39 (set (reg:DI 37 r8)
        (reg:DI 148 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 148 [ D.6036 ])
        (nil)))
(insn 261 260 262 39 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 262 261 263 39 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 263 262 264 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 264 263 265 39 (set (reg:SI 143 [ D.6032 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 633 634

;; basic block 40, loop depth 0, count 0, freq 491, maybe hot
;; Invalid sum of incoming frequencies 593, should be 491
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 [100.0%]  (FALLTHRU)
;;              37 [83.7%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u391(6){ }u392(7){ }u393(16){ }u394(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 609 612 693
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 609 612 693
;; live  kill	 17 [flags]
(code_label 265 264 266 40 113 "" [1 uses])
(note 266 265 267 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 40 (parallel [
            (set (reg:SI 693)
                (plus:SI (reg:SI 143 [ D.6032 ])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:500 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 143 [ D.6032 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 268 267 269 40 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 693)) blake_ref.c:500 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 693)
        (nil)))
(insn 269 268 270 40 (set (reg:DI 37 r8)
        (const_int 440 [0x1b8])) 89 {*movdi_internal}
     (nil))
(insn 270 269 271 40 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 271 270 272 40 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 272 271 273 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 273 272 274 40 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:502 90 {*movsi_internal}
     (nil))
(insn 274 273 275 40 (set (reg:SI 609 [ D.6031 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 275 274 276 40 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       41 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634

;; basic block 41, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [100.0%]  (FALLTHRU)
;;              34 [100.0%]  (FALLTHRU)
;;              40 [100.0%]  (FALLTHRU)
;;              30 [83.7%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u406(6){ }u407(7){ }u408(16){ }u409(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633
;; lr  def 	 17 [flags] 694
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 609 612 633 634
;; live  gen 	 17 [flags] 694
;; live  kill	 17 [flags]
(code_label 276 275 277 41 110 "" [1 uses])
(note 277 276 278 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 41 (parallel [
            (set (reg:SI 694)
                (plus:SI (reg:SI 609 [ D.6031 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:505 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 609 [ D.6031 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 279 278 280 41 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 694)) blake_ref.c:505 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 694)
        (nil)))
(insn 280 279 281 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 224 [0xe0]))) blake_ref.c:506 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 281 280 282 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 291)
            (pc))) blake_ref.c:506 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 291)
;;  succ:       42 [28.0%]  (FALLTHRU)
;;              43 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 42, loop depth 0, count 0, freq 273, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [28.0%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u415(6){ }u416(7){ }u417(16){ }u418(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 695
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 87 695
;; live  kill	 17 [flags]
(note 282 281 283 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 42 (parallel [
            (set (reg/f:DI 695)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 284 283 285 42 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 285 284 286 42 (set (reg:DI 1 dx)
        (reg/f:DI 695)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 695)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec]))
            (nil))))
(insn 286 285 287 42 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 287 286 288 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 288 287 291 42 (set (reg:SI 87 [ D.6031 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634

;; basic block 43, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [72.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u428(6){ }u429(7){ }u430(16){ }u431(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 696
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 87 696
;; live  kill	 17 [flags]
(code_label 291 288 292 43 115 "" [1 uses])
(note 292 291 293 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 43 (parallel [
            (set (reg/f:DI 696)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19 [0xffffffffffffffed])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 294 293 295 43 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 295 294 296 43 (set (reg:DI 1 dx)
        (reg/f:DI 696)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 696)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed]))
            (nil))))
(insn 296 295 297 43 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 297 296 298 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 298 297 299 43 (set (reg:SI 87 [ D.6031 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634

;; basic block 44, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%]  (FALLTHRU)
;;              42 [100.0%]  (FALLTHRU)
;;              43 [100.0%]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u441(6){ }u442(7){ }u443(16){ }u444(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 697 698
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 697 698
;; live  kill	 17 [flags]
(code_label 299 298 300 44 108 "" [0 uses])
(note 300 299 301 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 44 (parallel [
            (set (reg:SI 697)
                (plus:SI (reg:SI 87 [ D.6031 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:511 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6031 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 302 301 303 44 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 697)) blake_ref.c:511 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 697)
        (nil)))
(insn 303 302 304 44 (parallel [
            (set (reg/f:DI 698)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 304 303 305 44 (set (reg:DI 37 r8)
        (const_int 64 [0x40])) 89 {*movdi_internal}
     (nil))
(insn 305 304 306 44 (set (reg:DI 1 dx)
        (reg/f:DI 698)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 698)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 306 305 307 44 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 307 306 308 44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       45 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 45, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              44 [100.0%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u456(6){ }u457(7){ }u458(16){ }u459(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  def 	 17 [flags] 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 17 [flags] 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747
;; live  kill	 17 [flags]
(code_label 308 307 309 45 105 "" [0 uses])
(note 309 308 310 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 45 (set (reg:SI 700 [ state_4(D)->h32 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (nil))
(insn 311 310 312 45 (parallel [
            (set (reg:SI 699 [ D.6032 ])
                (lshiftrt:SI (reg:SI 700 [ state_4(D)->h32 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:515 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 700 [ state_4(D)->h32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 312 311 313 45 (set (mem:QI (reg/v/f:DI 634 [ hashval ]) [0 *hashval_6(D)+0 S1 A8])
        (subreg:QI (reg:SI 699 [ D.6032 ]) 0)) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 699 [ D.6032 ])
        (nil)))
(insn 313 312 314 45 (set (reg:SI 702 [ state_4(D)->h32 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (nil))
(insn 314 313 315 45 (parallel [
            (set (reg:SI 701 [ D.6032 ])
                (lshiftrt:SI (reg:SI 702 [ state_4(D)->h32 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:515 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 702 [ state_4(D)->h32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 315 314 316 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 1 [0x1])) [0 MEM[(BitSequence *)hashval_6(D) + 1B]+0 S1 A8])
        (subreg:QI (reg:SI 701 [ D.6032 ]) 0)) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 701 [ D.6032 ])
        (nil)))
(insn 316 315 317 45 (set (reg:SI 704 [ state_4(D)->h32 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (nil))
(insn 317 316 318 45 (parallel [
            (set (reg:SI 703 [ D.6032 ])
                (lshiftrt:SI (reg:SI 704 [ state_4(D)->h32 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:515 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 704 [ state_4(D)->h32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 318 317 319 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 2 [0x2])) [0 MEM[(BitSequence *)hashval_6(D) + 2B]+0 S1 A8])
        (subreg:QI (reg:SI 703 [ D.6032 ]) 0)) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 703 [ D.6032 ])
        (nil)))
(insn 319 318 320 45 (set (reg:SI 705 [ state_4(D)->h32 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (nil))
(insn 320 319 321 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 3 [0x3])) [0 MEM[(BitSequence *)hashval_6(D) + 3B]+0 S1 A8])
        (subreg:QI (reg:SI 705 [ state_4(D)->h32 ]) 0)) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 705 [ state_4(D)->h32 ])
        (nil)))
(insn 321 320 322 45 (set (reg:SI 707 [ state_4(D)->h32+4 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (nil))
(insn 322 321 323 45 (parallel [
            (set (reg:SI 706 [ D.6032 ])
                (lshiftrt:SI (reg:SI 707 [ state_4(D)->h32+4 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:516 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 707 [ state_4(D)->h32+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 323 322 324 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 4 [0x4])) [0 MEM[(BitSequence *)hashval_6(D) + 4B]+0 S1 A8])
        (subreg:QI (reg:SI 706 [ D.6032 ]) 0)) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 706 [ D.6032 ])
        (nil)))
(insn 324 323 325 45 (set (reg:SI 709 [ state_4(D)->h32+4 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (nil))
(insn 325 324 326 45 (parallel [
            (set (reg:SI 708 [ D.6032 ])
                (lshiftrt:SI (reg:SI 709 [ state_4(D)->h32+4 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:516 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 709 [ state_4(D)->h32+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 326 325 327 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 5 [0x5])) [0 MEM[(BitSequence *)hashval_6(D) + 5B]+0 S1 A8])
        (subreg:QI (reg:SI 708 [ D.6032 ]) 0)) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 708 [ D.6032 ])
        (nil)))
(insn 327 326 328 45 (set (reg:SI 711 [ state_4(D)->h32+4 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (nil))
(insn 328 327 329 45 (parallel [
            (set (reg:SI 710 [ D.6032 ])
                (lshiftrt:SI (reg:SI 711 [ state_4(D)->h32+4 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:516 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 711 [ state_4(D)->h32+4 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 329 328 330 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 6 [0x6])) [0 MEM[(BitSequence *)hashval_6(D) + 6B]+0 S1 A8])
        (subreg:QI (reg:SI 710 [ D.6032 ]) 0)) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 710 [ D.6032 ])
        (nil)))
(insn 330 329 331 45 (set (reg:SI 712 [ state_4(D)->h32+4 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (nil))
(insn 331 330 332 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 7 [0x7])) [0 MEM[(BitSequence *)hashval_6(D) + 7B]+0 S1 A8])
        (subreg:QI (reg:SI 712 [ state_4(D)->h32+4 ]) 0)) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 712 [ state_4(D)->h32+4 ])
        (nil)))
(insn 332 331 333 45 (set (reg:SI 714 [ state_4(D)->h32+8 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (nil))
(insn 333 332 334 45 (parallel [
            (set (reg:SI 713 [ D.6032 ])
                (lshiftrt:SI (reg:SI 714 [ state_4(D)->h32+8 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:517 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 714 [ state_4(D)->h32+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 334 333 335 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 8 [0x8])) [0 MEM[(BitSequence *)hashval_6(D) + 8B]+0 S1 A8])
        (subreg:QI (reg:SI 713 [ D.6032 ]) 0)) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 713 [ D.6032 ])
        (nil)))
(insn 335 334 336 45 (set (reg:SI 716 [ state_4(D)->h32+8 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (nil))
(insn 336 335 337 45 (parallel [
            (set (reg:SI 715 [ D.6032 ])
                (lshiftrt:SI (reg:SI 716 [ state_4(D)->h32+8 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:517 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 716 [ state_4(D)->h32+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 337 336 338 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 9 [0x9])) [0 MEM[(BitSequence *)hashval_6(D) + 9B]+0 S1 A8])
        (subreg:QI (reg:SI 715 [ D.6032 ]) 0)) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 715 [ D.6032 ])
        (nil)))
(insn 338 337 339 45 (set (reg:SI 718 [ state_4(D)->h32+8 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (nil))
(insn 339 338 340 45 (parallel [
            (set (reg:SI 717 [ D.6032 ])
                (lshiftrt:SI (reg:SI 718 [ state_4(D)->h32+8 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:517 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 718 [ state_4(D)->h32+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 340 339 341 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 10 [0xa])) [0 MEM[(BitSequence *)hashval_6(D) + 10B]+0 S1 A8])
        (subreg:QI (reg:SI 717 [ D.6032 ]) 0)) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 717 [ D.6032 ])
        (nil)))
(insn 341 340 342 45 (set (reg:SI 719 [ state_4(D)->h32+8 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (nil))
(insn 342 341 343 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 11 [0xb])) [0 MEM[(BitSequence *)hashval_6(D) + 11B]+0 S1 A8])
        (subreg:QI (reg:SI 719 [ state_4(D)->h32+8 ]) 0)) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 719 [ state_4(D)->h32+8 ])
        (nil)))
(insn 343 342 344 45 (set (reg:SI 721 [ state_4(D)->h32+12 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (nil))
(insn 344 343 345 45 (parallel [
            (set (reg:SI 720 [ D.6032 ])
                (lshiftrt:SI (reg:SI 721 [ state_4(D)->h32+12 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:518 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 721 [ state_4(D)->h32+12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 345 344 346 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 12 [0xc])) [0 MEM[(BitSequence *)hashval_6(D) + 12B]+0 S1 A8])
        (subreg:QI (reg:SI 720 [ D.6032 ]) 0)) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 720 [ D.6032 ])
        (nil)))
(insn 346 345 347 45 (set (reg:SI 723 [ state_4(D)->h32+12 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (nil))
(insn 347 346 348 45 (parallel [
            (set (reg:SI 722 [ D.6032 ])
                (lshiftrt:SI (reg:SI 723 [ state_4(D)->h32+12 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:518 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 723 [ state_4(D)->h32+12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 348 347 349 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 13 [0xd])) [0 MEM[(BitSequence *)hashval_6(D) + 13B]+0 S1 A8])
        (subreg:QI (reg:SI 722 [ D.6032 ]) 0)) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 722 [ D.6032 ])
        (nil)))
(insn 349 348 350 45 (set (reg:SI 725 [ state_4(D)->h32+12 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (nil))
(insn 350 349 351 45 (parallel [
            (set (reg:SI 724 [ D.6032 ])
                (lshiftrt:SI (reg:SI 725 [ state_4(D)->h32+12 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:518 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 725 [ state_4(D)->h32+12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 351 350 352 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 14 [0xe])) [0 MEM[(BitSequence *)hashval_6(D) + 14B]+0 S1 A8])
        (subreg:QI (reg:SI 724 [ D.6032 ]) 0)) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 724 [ D.6032 ])
        (nil)))
(insn 352 351 353 45 (set (reg:SI 726 [ state_4(D)->h32+12 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (nil))
(insn 353 352 354 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 15 [0xf])) [0 MEM[(BitSequence *)hashval_6(D) + 15B]+0 S1 A8])
        (subreg:QI (reg:SI 726 [ state_4(D)->h32+12 ]) 0)) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 726 [ state_4(D)->h32+12 ])
        (nil)))
(insn 354 353 355 45 (set (reg:SI 728 [ state_4(D)->h32+16 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (nil))
(insn 355 354 356 45 (parallel [
            (set (reg:SI 727 [ D.6032 ])
                (lshiftrt:SI (reg:SI 728 [ state_4(D)->h32+16 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:519 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 728 [ state_4(D)->h32+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 356 355 357 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 16 [0x10])) [0 MEM[(BitSequence *)hashval_6(D) + 16B]+0 S1 A8])
        (subreg:QI (reg:SI 727 [ D.6032 ]) 0)) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 727 [ D.6032 ])
        (nil)))
(insn 357 356 358 45 (set (reg:SI 730 [ state_4(D)->h32+16 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (nil))
(insn 358 357 359 45 (parallel [
            (set (reg:SI 729 [ D.6032 ])
                (lshiftrt:SI (reg:SI 730 [ state_4(D)->h32+16 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:519 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 730 [ state_4(D)->h32+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 359 358 360 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 17 [0x11])) [0 MEM[(BitSequence *)hashval_6(D) + 17B]+0 S1 A8])
        (subreg:QI (reg:SI 729 [ D.6032 ]) 0)) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 729 [ D.6032 ])
        (nil)))
(insn 360 359 361 45 (set (reg:SI 732 [ state_4(D)->h32+16 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (nil))
(insn 361 360 362 45 (parallel [
            (set (reg:SI 731 [ D.6032 ])
                (lshiftrt:SI (reg:SI 732 [ state_4(D)->h32+16 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:519 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 732 [ state_4(D)->h32+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 362 361 363 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 18 [0x12])) [0 MEM[(BitSequence *)hashval_6(D) + 18B]+0 S1 A8])
        (subreg:QI (reg:SI 731 [ D.6032 ]) 0)) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 731 [ D.6032 ])
        (nil)))
(insn 363 362 364 45 (set (reg:SI 733 [ state_4(D)->h32+16 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (nil))
(insn 364 363 365 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 19 [0x13])) [0 MEM[(BitSequence *)hashval_6(D) + 19B]+0 S1 A8])
        (subreg:QI (reg:SI 733 [ state_4(D)->h32+16 ]) 0)) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 733 [ state_4(D)->h32+16 ])
        (nil)))
(insn 365 364 366 45 (set (reg:SI 735 [ state_4(D)->h32+20 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (nil))
(insn 366 365 367 45 (parallel [
            (set (reg:SI 734 [ D.6032 ])
                (lshiftrt:SI (reg:SI 735 [ state_4(D)->h32+20 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:520 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 735 [ state_4(D)->h32+20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 367 366 368 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 20 [0x14])) [0 MEM[(BitSequence *)hashval_6(D) + 20B]+0 S1 A8])
        (subreg:QI (reg:SI 734 [ D.6032 ]) 0)) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 734 [ D.6032 ])
        (nil)))
(insn 368 367 369 45 (set (reg:SI 737 [ state_4(D)->h32+20 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (nil))
(insn 369 368 370 45 (parallel [
            (set (reg:SI 736 [ D.6032 ])
                (lshiftrt:SI (reg:SI 737 [ state_4(D)->h32+20 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:520 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 737 [ state_4(D)->h32+20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 370 369 371 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 21 [0x15])) [0 MEM[(BitSequence *)hashval_6(D) + 21B]+0 S1 A8])
        (subreg:QI (reg:SI 736 [ D.6032 ]) 0)) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 736 [ D.6032 ])
        (nil)))
(insn 371 370 372 45 (set (reg:SI 739 [ state_4(D)->h32+20 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (nil))
(insn 372 371 373 45 (parallel [
            (set (reg:SI 738 [ D.6032 ])
                (lshiftrt:SI (reg:SI 739 [ state_4(D)->h32+20 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:520 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 739 [ state_4(D)->h32+20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 373 372 374 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 22 [0x16])) [0 MEM[(BitSequence *)hashval_6(D) + 22B]+0 S1 A8])
        (subreg:QI (reg:SI 738 [ D.6032 ]) 0)) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 738 [ D.6032 ])
        (nil)))
(insn 374 373 375 45 (set (reg:SI 740 [ state_4(D)->h32+20 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (nil))
(insn 375 374 376 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 23 [0x17])) [0 MEM[(BitSequence *)hashval_6(D) + 23B]+0 S1 A8])
        (subreg:QI (reg:SI 740 [ state_4(D)->h32+20 ]) 0)) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 740 [ state_4(D)->h32+20 ])
        (nil)))
(insn 376 375 377 45 (set (reg:SI 742 [ state_4(D)->h32+24 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (nil))
(insn 377 376 378 45 (parallel [
            (set (reg:SI 741 [ D.6032 ])
                (lshiftrt:SI (reg:SI 742 [ state_4(D)->h32+24 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:521 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 742 [ state_4(D)->h32+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 378 377 379 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 24 [0x18])) [0 MEM[(BitSequence *)hashval_6(D) + 24B]+0 S1 A8])
        (subreg:QI (reg:SI 741 [ D.6032 ]) 0)) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 741 [ D.6032 ])
        (nil)))
(insn 379 378 380 45 (set (reg:SI 744 [ state_4(D)->h32+24 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (nil))
(insn 380 379 381 45 (parallel [
            (set (reg:SI 743 [ D.6032 ])
                (lshiftrt:SI (reg:SI 744 [ state_4(D)->h32+24 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:521 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 744 [ state_4(D)->h32+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 381 380 382 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 25 [0x19])) [0 MEM[(BitSequence *)hashval_6(D) + 25B]+0 S1 A8])
        (subreg:QI (reg:SI 743 [ D.6032 ]) 0)) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 743 [ D.6032 ])
        (nil)))
(insn 382 381 383 45 (set (reg:SI 746 [ state_4(D)->h32+24 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (nil))
(insn 383 382 384 45 (parallel [
            (set (reg:SI 745 [ D.6032 ])
                (lshiftrt:SI (reg:SI 746 [ state_4(D)->h32+24 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:521 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 746 [ state_4(D)->h32+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 384 383 385 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 26 [0x1a])) [0 MEM[(BitSequence *)hashval_6(D) + 26B]+0 S1 A8])
        (subreg:QI (reg:SI 745 [ D.6032 ]) 0)) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 745 [ D.6032 ])
        (nil)))
(insn 385 384 386 45 (set (reg:SI 747 [ state_4(D)->h32+24 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (nil))
(insn 386 385 387 45 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 27 [0x1b])) [0 MEM[(BitSequence *)hashval_6(D) + 27B]+0 S1 A8])
        (subreg:QI (reg:SI 747 [ state_4(D)->h32+24 ]) 0)) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 747 [ state_4(D)->h32+24 ])
        (nil)))
(insn 387 386 388 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 256 [0x100]))) blake_ref.c:523 7 {*cmpsi_1}
     (nil))
(jump_insn 388 387 389 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1058)
            (pc))) blake_ref.c:523 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 1058)
;;  succ:       46 [37.8%]  (FALLTHRU)
;;              97 [62.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 46, loop depth 0, count 0, freq 1475, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [37.8%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u588(6){ }u589(7){ }u590(16){ }u591(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  def 	 17 [flags] 748 749 750 751 752 753 754
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 748 749 750 751 752 753 754
;; live  kill	 17 [flags]
(note 389 388 390 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 46 (set (reg:SI 749 [ state_4(D)->h32+28 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (nil))
(insn 391 390 392 46 (parallel [
            (set (reg:SI 748 [ D.6032 ])
                (lshiftrt:SI (reg:SI 749 [ state_4(D)->h32+28 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:524 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 749 [ state_4(D)->h32+28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 392 391 393 46 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 28 [0x1c])) [0 MEM[(BitSequence *)hashval_6(D) + 28B]+0 S1 A8])
        (subreg:QI (reg:SI 748 [ D.6032 ]) 0)) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 748 [ D.6032 ])
        (nil)))
(insn 393 392 394 46 (set (reg:SI 751 [ state_4(D)->h32+28 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (nil))
(insn 394 393 395 46 (parallel [
            (set (reg:SI 750 [ D.6032 ])
                (lshiftrt:SI (reg:SI 751 [ state_4(D)->h32+28 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:524 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 751 [ state_4(D)->h32+28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 395 394 396 46 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 29 [0x1d])) [0 MEM[(BitSequence *)hashval_6(D) + 29B]+0 S1 A8])
        (subreg:QI (reg:SI 750 [ D.6032 ]) 0)) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 750 [ D.6032 ])
        (nil)))
(insn 396 395 397 46 (set (reg:SI 753 [ state_4(D)->h32+28 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (nil))
(insn 397 396 398 46 (parallel [
            (set (reg:SI 752 [ D.6032 ])
                (lshiftrt:SI (reg:SI 753 [ state_4(D)->h32+28 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:524 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 753 [ state_4(D)->h32+28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 398 397 399 46 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 30 [0x1e])) [0 MEM[(BitSequence *)hashval_6(D) + 30B]+0 S1 A8])
        (subreg:QI (reg:SI 752 [ D.6032 ]) 0)) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 752 [ D.6032 ])
        (nil)))
(insn 399 398 400 46 (set (reg:SI 754 [ state_4(D)->h32+28 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 633 [ state ])
        (nil)))
(insn 400 399 405 46 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 31 [0x1f])) [0 MEM[(BitSequence *)hashval_6(D) + 31B]+0 S1 A8])
        (subreg:QI (reg:SI 754 [ state_4(D)->h32+28 ]) 0)) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 754 [ state_4(D)->h32+28 ])
        (expr_list:REG_DEAD (reg/v/f:DI 634 [ hashval ])
            (nil))))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u610(6){ }u611(7){ }u612(16){ }u613(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags] 241 242 243 244 245 246 263 755 756 757 758 759 760 761 762 763 764 765 766 767
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 633 634
;; live  gen 	 17 [flags] 241 242 243 244 245 246 263 755 756 757 758 759 760 761 762 763 764 765 766 767
;; live  kill	 17 [flags]
(code_label 405 400 406 47 93 "" [1 uses])
(note 406 405 407 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 47 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [0 zz+0 S1 A32])
        (const_int 0 [0])) blake_ref.c:535 93 {*movqi_internal}
     (nil))
(insn 408 407 409 47 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed])) [0 zo+0 S1 A8])
        (const_int 1 [0x1])) blake_ref.c:535 93 {*movqi_internal}
     (nil))
(insn 409 408 410 47 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -18 [0xffffffffffffffee])) [0 oz+0 S1 A16])
        (const_int -128 [0xffffffffffffff80])) blake_ref.c:535 93 {*movqi_internal}
     (nil))
(insn 410 409 411 47 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -17 [0xffffffffffffffef])) [0 oo+0 S1 A8])
        (const_int -127 [0xffffffffffffff81])) blake_ref.c:535 93 {*movqi_internal}
     (nil))
(insn 411 410 412 47 (set (reg:DI 241 [ D.6036 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) blake_ref.c:539 89 {*movdi_internal}
     (nil))
(insn 412 411 413 47 (set (reg:SI 242 [ D.6033 ])
        (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])) blake_ref.c:539 90 {*movsi_internal}
     (nil))
(insn 413 412 414 47 (set (reg:DI 243 [ D.6036 ])
        (sign_extend:DI (reg:SI 242 [ D.6033 ]))) blake_ref.c:539 142 {*extendsidi2_rex64}
     (nil))
(insn 414 413 415 47 (parallel [
            (set (reg/v:DI 244 [ low ])
                (plus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 243 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:539 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 415 414 1083 47 (set (reg/v:DI 245 [ high ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 208 [0xd0])) [3 state_4(D)->t64+8 S8 A64])) blake_ref.c:540 89 {*movdi_internal}
     (nil))
(insn 1083 415 1084 47 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 244 [ low ])
            (reg:DI 243 [ D.6036 ]))) blake_ref.c:542 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 243 [ D.6036 ])
        (nil)))
(insn 1084 1083 422 47 (parallel [
            (set (reg/v:DI 245 [ high ])
                (plus:DI (plus:DI (ltu:DI (reg:CC 17 flags)
                            (const_int 0 [0]))
                        (reg/v:DI 245 [ high ]))
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:542 285 {adddi3_carry}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 422 1084 424 47 (parallel [
            (set (reg:DI 246 [ D.6036 ])
                (lshiftrt:DI (reg/v:DI 245 [ high ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 424 422 425 47 (parallel [
            (set (reg:SI 755 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 246 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 425 424 426 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 msglen+0 S1 A128])
        (subreg:QI (reg:SI 755 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 755 [ D.6032 ])
        (nil)))
(insn 426 425 427 47 (parallel [
            (set (reg:SI 756 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 246 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 427 426 428 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -15 [0xfffffffffffffff1])) [0 msglen+1 S1 A8])
        (subreg:QI (reg:SI 756 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 756 [ D.6032 ])
        (nil)))
(insn 428 427 429 47 (parallel [
            (set (reg:SI 757 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 246 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 429 428 430 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -14 [0xfffffffffffffff2])) [0 msglen+2 S1 A16])
        (subreg:QI (reg:SI 757 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 757 [ D.6032 ])
        (nil)))
(insn 430 429 432 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -13 [0xfffffffffffffff3])) [0 msglen+3 S1 A8])
        (subreg:QI (reg:DI 246 [ D.6036 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 246 [ D.6036 ])
        (nil)))
(insn 432 430 433 47 (parallel [
            (set (reg:SI 758 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 245 [ high ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 433 432 434 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 msglen+4 S1 A32])
        (subreg:QI (reg:SI 758 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 758 [ D.6032 ])
        (nil)))
(insn 434 433 435 47 (parallel [
            (set (reg:SI 759 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 245 [ high ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 435 434 436 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -11 [0xfffffffffffffff5])) [0 msglen+5 S1 A8])
        (subreg:QI (reg:SI 759 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 759 [ D.6032 ])
        (nil)))
(insn 436 435 437 47 (parallel [
            (set (reg:SI 760 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 245 [ high ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 437 436 438 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -10 [0xfffffffffffffff6])) [0 msglen+6 S1 A16])
        (subreg:QI (reg:SI 760 [ D.6032 ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 760 [ D.6032 ])
        (nil)))
(insn 438 437 439 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7])) [0 msglen+7 S1 A8])
        (subreg:QI (reg/v:DI 245 [ high ]) 0)) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:DI 245 [ high ])
        (nil)))
(insn 439 438 441 47 (parallel [
            (set (reg:DI 263 [ D.6036 ])
                (lshiftrt:DI (reg/v:DI 244 [ low ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 441 439 442 47 (parallel [
            (set (reg:SI 761 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 263 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 442 441 443 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 msglen+8 S1 A64])
        (subreg:QI (reg:SI 761 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 761 [ D.6032 ])
        (nil)))
(insn 443 442 444 47 (parallel [
            (set (reg:SI 762 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 263 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 444 443 445 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -7 [0xfffffffffffffff9])) [0 msglen+9 S1 A8])
        (subreg:QI (reg:SI 762 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 762 [ D.6032 ])
        (nil)))
(insn 445 444 446 47 (parallel [
            (set (reg:SI 763 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 263 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 446 445 447 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -6 [0xfffffffffffffffa])) [0 msglen+10 S1 A16])
        (subreg:QI (reg:SI 763 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 763 [ D.6032 ])
        (nil)))
(insn 447 446 449 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -5 [0xfffffffffffffffb])) [0 msglen+11 S1 A8])
        (subreg:QI (reg:DI 263 [ D.6036 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 263 [ D.6036 ])
        (nil)))
(insn 449 447 450 47 (parallel [
            (set (reg:SI 764 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 244 [ low ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 450 449 451 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 msglen+12 S1 A32])
        (subreg:QI (reg:SI 764 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 764 [ D.6032 ])
        (nil)))
(insn 451 450 452 47 (parallel [
            (set (reg:SI 765 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 244 [ low ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 452 451 453 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -3 [0xfffffffffffffffd])) [0 msglen+13 S1 A8])
        (subreg:QI (reg:SI 765 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 765 [ D.6032 ])
        (nil)))
(insn 453 452 454 47 (parallel [
            (set (reg:SI 766 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg/v:DI 244 [ low ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 454 453 455 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -2 [0xfffffffffffffffe])) [0 msglen+14 S1 A16])
        (subreg:QI (reg:SI 766 [ D.6032 ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 766 [ D.6032 ])
        (nil)))
(insn 455 454 457 47 (set (mem/j/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 msglen+15 S1 A8])
        (subreg:QI (reg/v:DI 244 [ low ]) 0)) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:DI 244 [ low ])
        (nil)))
(insn 457 455 458 47 (parallel [
            (set (reg:SI 767 [ D.6035 ])
                (and:SI (reg:SI 242 [ D.6033 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:546 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 458 457 459 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 767 [ D.6035 ])
            (const_int 0 [0]))) blake_ref.c:546 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 767 [ D.6035 ])
        (nil)))
(jump_insn 459 458 460 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) blake_ref.c:546 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 587)
;;  succ:       48 [50.0%]  (FALLTHRU)
;;              70 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634

;; basic block 48, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [50.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u690(6){ }u691(7){ }u692(16){ }u693(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(note 460 459 461 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6033 ])
            (const_int 888 [0x378]))) blake_ref.c:549 7 {*cmpsi_1}
     (nil))
(jump_insn 462 461 463 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 487)
            (pc))) blake_ref.c:549 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 487)
;;  succ:       49 [28.0%]  (FALLTHRU)
;;              52 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634

;; basic block 49, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [28.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u696(6){ }u697(7){ }u698(16){ }u699(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 612 633
;; lr  def 	 17 [flags] 768
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 612 633 634
;; live  gen 	 17 [flags] 768
;; live  kill	 17 [flags]
(note 463 462 464 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 49 (parallel [
            (set (reg:DI 768)
                (plus:DI (reg:DI 241 [ D.6036 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:551 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 465 464 466 49 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 768)) blake_ref.c:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 768)
        (nil)))
(insn 466 465 467 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 384 [0x180]))) blake_ref.c:552 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 467 466 468 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 477)
            (pc))) blake_ref.c:552 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 477)
;;  succ:       50 [28.0%]  (FALLTHRU)
;;              51 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 50, loop depth 0, count 0, freq 239, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [28.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u705(6){ }u706(7){ }u707(16){ }u708(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 292 769
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 292 769
;; live  kill	 17 [flags]
(note 468 467 469 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 50 (parallel [
            (set (reg/f:DI 769)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -18 [0xffffffffffffffee])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 470 469 471 50 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 471 470 472 50 (set (reg:DI 1 dx)
        (reg/f:DI 769)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 769)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -18 [0xffffffffffffffee]))
            (nil))))
(insn 472 471 473 50 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 473 472 474 50 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 474 473 477 50 (set (reg:DI 292 [ D.6036 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       67 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634

;; basic block 51, loop depth 0, count 0, freq 615, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 [72.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u718(6){ }u719(7){ }u720(16){ }u721(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 292 770
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 292 770
;; live  kill	 17 [flags]
(code_label 477 474 478 51 121 "" [1 uses])
(note 478 477 479 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 479 478 480 51 (parallel [
            (set (reg/f:DI 770)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 480 479 481 51 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 481 480 482 51 (set (reg:DI 1 dx)
        (reg/f:DI 770)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 770)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -17 [0xffffffffffffffef]))
            (nil))))
(insn 482 481 483 51 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 483 482 484 51 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 484 483 487 51 (set (reg:DI 292 [ D.6036 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       67 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634

;; basic block 52, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       48 [72.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u731(6){ }u732(7){ }u733(16){ }u734(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 487 484 488 52 120 "" [1 uses])
(note 488 487 489 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 52 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 242 [ D.6033 ])
            (const_int 887 [0x377]))) blake_ref.c:558 7 {*cmpsi_1}
     (nil))
(jump_insn 490 489 491 52 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 498)
            (pc))) blake_ref.c:558 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 498)
;;  succ:       53 [50.0%]  (FALLTHRU)
;;              55 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634

;; basic block 53, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [50.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u737(6){ }u738(7){ }u739(16){ }u740(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(note 491 490 492 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6033 ])
            (const_int 0 [0]))) blake_ref.c:560 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 493 492 494 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) blake_ref.c:560 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1000)
;;  succ:       54 [50.0%]  (FALLTHRU)
;;              96 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634

;; basic block 54, loop depth 0, count 0, freq 549, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 [50.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u743(6){ }u744(7){ }u745(16){ }u746(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	
;; live  kill	
(note 494 493 495 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 498 54 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:561 90 {*movsi_internal}
     (nil))
;;  succ:       96 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634

;; basic block 55, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 54, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [50.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u748(6){ }u749(7){ }u750(16){ }u751(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633
;; lr  def 	 17 [flags] 287 288 771 772 774
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 17 [flags] 287 288 771 772 774
;; live  kill	 17 [flags]
(code_label 498 495 499 55 123 "" [1 uses])
(note 499 498 500 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 55 (set (reg:SI 772)
        (const_int 1024 [0x400])) blake_ref.c:568 90 {*movsi_internal}
     (nil))
(insn 501 500 502 55 (parallel [
            (set (reg:SI 771 [ D.6033 ])
                (minus:SI (reg:SI 772)
                    (reg:SI 242 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:568 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 772)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 1024 [0x400])
                    (reg:SI 242 [ D.6033 ]))
                (nil)))))
(insn 502 501 503 55 (set (reg:DI 287 [ D.6036 ])
        (sign_extend:DI (reg:SI 771 [ D.6033 ]))) blake_ref.c:568 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 771 [ D.6033 ])
        (nil)))
(insn 503 502 504 55 (parallel [
            (set (reg:DI 288 [ D.6036 ])
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 287 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:568 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 504 503 505 55 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 288 [ D.6036 ])) blake_ref.c:568 89 {*movdi_internal}
     (nil))
(insn 505 504 506 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 242 [ D.6033 ])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.6033 ])
        (nil)))
(insn 506 505 507 55 (set (reg:QI 774 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 507 506 508 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 774 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 774 [ D.6038 ])
        (nil)))
(jump_insn 508 507 1024 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1033)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1033)
;;  succ:       59 [14.0%] 
;;              57 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634

;; basic block 57, loop depth 0, count 0, freq 944, maybe hot
;;  prev block 55, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [86.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u763(6){ }u764(7){ }u765(16){ }u766(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287
;; lr  def 	 17 [flags] 776
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634
;; live  gen 	 17 [flags] 776
;; live  kill	
(note 1024 508 509 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 509 1024 510 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 287 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(insn 510 509 511 57 (set (reg:QI 776 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 511 510 512 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 776 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 776 [ D.6038 ])
        (nil)))
(jump_insn 512 511 1033 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 520)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 520)
;;  succ:       60 [83.7%] 
;;              59 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 288 633 634

;; basic block 59, loop depth 0, count 0, freq 537, maybe hot
;; Invalid sum of incoming frequencies 308, should be 537
;;  prev block 57, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 [16.3%]  (FALLTHRU)
;;              55 [14.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u771(6){ }u772(7){ }u773(16){ }u774(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 288
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 288
;; live  kill	
(code_label 1033 512 514 59 149 "" [1 uses])
(note 514 1033 515 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 59 (set (reg:DI 37 r8)
        (reg:DI 287 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 287 [ D.6036 ])
        (nil)))
(insn 516 515 517 59 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 517 516 518 59 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 518 517 519 59 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 519 518 520 59 (set (reg:DI 288 [ D.6036 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       60 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288 633 634

;; basic block 60, loop depth 0, count 0, freq 1098, maybe hot
;; Invalid sum of incoming frequencies 1327, should be 1098
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 [100.0%]  (FALLTHRU)
;;              57 [83.7%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u782(6){ }u783(7){ }u784(16){ }u785(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 777
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 777
;; live  kill	 17 [flags]
(code_label 520 519 521 60 125 "" [1 uses])
(note 521 520 522 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 60 (parallel [
            (set (reg:DI 777)
                (plus:DI (reg:DI 288 [ D.6036 ])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:570 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 288 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 523 522 524 60 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 777)) blake_ref.c:570 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 777)
        (nil)))
(insn 524 523 525 60 (set (reg:DI 37 r8)
        (const_int 888 [0x378])) 89 {*movdi_internal}
     (nil))
(insn 525 524 526 60 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 526 525 527 60 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 60 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 528 527 1011 60 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:572 90 {*movsi_internal}
     (nil))
;;  succ:       61 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 61, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 [100.0%]  (FALLTHRU)
;;              96 [100.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u795(6){ }u796(7){ }u797(16){ }u798(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags] 290
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 17 [flags] 290
;; live  kill	
(code_label 1011 528 529 61 145 "" [0 uses])
(note 529 1011 530 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 61 (set (reg:SI 290 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) blake_ref.c:574 90 {*movsi_internal}
     (nil))
(insn 531 530 532 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 290 [ D.6033 ])
            (const_int 384 [0x180]))) blake_ref.c:574 7 {*cmpsi_1}
     (nil))
(jump_insn 532 531 533 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 541)
            (pc))) blake_ref.c:574 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 541)
;;  succ:       62 [28.0%]  (FALLTHRU)
;;              63 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290 633 634

;; basic block 62, loop depth 0, count 0, freq 615, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [28.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u802(6){ }u803(7){ }u804(16){ }u805(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 778
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 778
;; live  kill	 17 [flags]
(note 533 532 534 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 534 533 535 62 (parallel [
            (set (reg/f:DI 778)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 535 534 536 62 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 536 535 537 62 (set (reg:DI 1 dx)
        (reg/f:DI 778)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 778)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec]))
            (nil))))
(insn 537 536 538 62 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 538 537 541 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 63, loop depth 0, count 0, freq 1581, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 [72.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u814(6){ }u815(7){ }u816(16){ }u817(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 290 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 541 538 542 63 127 "" [1 uses])
(note 542 541 543 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 543 542 544 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 290 [ D.6033 ])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 290 [ D.6033 ])
        (nil)))
(jump_insn 544 543 545 63 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 553)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 553)
;;  succ:       64 [50.0%]  (FALLTHRU)
;;              65 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 64, loop depth 0, count 0, freq 791, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [50.0%]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u820(6){ }u821(7){ }u822(16){ }u823(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 779
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 779
;; live  kill	 17 [flags]
(note 545 544 546 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 64 (parallel [
            (set (reg/f:DI 779)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19 [0xffffffffffffffed])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 547 546 548 64 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 548 547 549 64 (set (reg:DI 1 dx)
        (reg/f:DI 779)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 779)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed]))
            (nil))))
(insn 549 548 550 64 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 550 549 553 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 65, loop depth 0, count 0, freq 791, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 [50.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u832(6){ }u833(7){ }u834(16){ }u835(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 780
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 780
;; live  kill	 17 [flags]
(code_label 553 550 554 65 129 "" [1 uses])
(note 554 553 555 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 555 554 556 65 (parallel [
            (set (reg/f:DI 780)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19 [0xffffffffffffffed])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 556 555 557 65 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 557 556 558 65 (set (reg:DI 1 dx)
        (reg/f:DI 780)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 780)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed]))
            (nil))))
(insn 558 557 559 65 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 559 558 560 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       66 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 66, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU)
;;              65 [100.0%]  (FALLTHRU)
;;              64 [100.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u844(6){ }u845(7){ }u846(16){ }u847(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 17 [flags] 292 781
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 292 781
;; live  kill	 17 [flags]
(code_label 560 559 561 66 128 "" [0 uses])
(note 561 560 562 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 66 (set (reg:DI 781 [ state_4(D)->t64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) blake_ref.c:578 89 {*movdi_internal}
     (nil))
(insn 563 562 564 66 (parallel [
            (set (reg:DI 292 [ D.6036 ])
                (plus:DI (reg:DI 781 [ state_4(D)->t64 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:578 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 781 [ state_4(D)->t64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                    (const_int -8 [0xfffffffffffffff8]))
                (nil)))))
;;  succ:       67 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634

;; basic block 67, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 [100.0%]  (FALLTHRU)
;;              51 [100.0%]  (FALLTHRU)
;;              66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u851(6){ }u852(7){ }u853(16){ }u854(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633
;; lr  def 	 17 [flags] 782
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 292 633 634
;; live  gen 	 17 [flags] 782
;; live  kill	 17 [flags]
(code_label 564 563 565 67 122 "" [0 uses])
(note 565 564 566 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 67 (parallel [
            (set (reg:DI 782)
                (plus:DI (reg:DI 292 [ D.6036 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:580 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 292 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 567 566 568 67 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 782)) blake_ref.c:580 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 782)
        (nil)))
(insn 568 567 569 67 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (nil))
(jump_insn 569 568 760 67 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 578)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 578)
;;  succ:       68 [50.0%]  (FALLTHRU)
;;              69 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 68, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [50.0%]  (FALLTHRU)
;;              92 [100.0%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u860(6){ }u861(7){ }u862(16){ }u863(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 783
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 783
;; live  kill	 17 [flags]
(code_label 760 569 570 68 142 "" [1 uses])
(note 570 760 571 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 68 (parallel [
            (set (reg/f:DI 783)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 572 571 573 68 (set (reg:DI 37 r8)
        (const_int 128 [0x80])) 89 {*movdi_internal}
     (nil))
(insn 573 572 574 68 (set (reg:DI 1 dx)
        (reg/f:DI 783)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 783)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 574 573 575 68 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 575 574 578 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       93 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 69, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 [50.0%] 
;;              74 [100.0%]  (FALLTHRU)
;;              92 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u872(6){ }u873(7){ }u874(16){ }u875(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 784
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 784
;; live  kill	 17 [flags]
(code_label 578 575 579 69 130 "" [1 uses])
(note 579 578 580 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 580 579 581 69 (parallel [
            (set (reg/f:DI 784)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 581 580 582 69 (set (reg:DI 37 r8)
        (const_int 128 [0x80])) 89 {*movdi_internal}
     (nil))
(insn 582 581 583 69 (set (reg:DI 1 dx)
        (reg/f:DI 784)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 784)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 583 582 584 69 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 584 583 587 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       93 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 70, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [50.0%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u884(6){ }u885(7){ }u886(16){ }u887(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 633
;; lr  def 	 17 [flags] 298 305 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 801
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  gen 	 17 [flags] 298 305 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 801
;; live  kill	 17 [flags]
(code_label 587 584 588 70 119 "" [1 uses])
(note 588 587 590 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 590 588 591 70 (parallel [
            (set (reg:SI 786)
                (plus:SI (reg:SI 242 [ D.6033 ])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 591 590 592 70 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 242 [ D.6033 ])
            (const_int 0 [0]))) blake_ref.c:587 3 {*cmpsi_ccno_1}
     (nil))
(insn 592 591 593 70 (set (reg:SI 785 [ D.6033 ])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 786)
            (reg:SI 242 [ D.6033 ]))) blake_ref.c:587 951 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:SI 786)
        (expr_list:REG_DEAD (reg:CCGOC 17 flags)
            (nil))))
(insn 593 592 595 70 (parallel [
            (set (reg:SI 787)
                (ashiftrt:SI (reg:SI 785 [ D.6033 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 785 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (div:SI (reg:SI 242 [ D.6033 ])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 595 593 596 70 (parallel [
            (set (reg:SI 788)
                (ashiftrt:SI (reg:SI 242 [ D.6033 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 538 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 596 595 597 70 (parallel [
            (set (reg:SI 789)
                (lshiftrt:SI (reg:SI 788)
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:SI 788)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 597 596 598 70 (parallel [
            (set (reg:SI 790)
                (plus:SI (reg:SI 242 [ D.6033 ])
                    (reg:SI 789)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 598 597 599 70 (parallel [
            (set (reg:SI 791)
                (and:SI (reg:SI 790)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 790)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 599 598 601 70 (parallel [
            (set (reg:SI 792)
                (minus:SI (reg:SI 791)
                    (reg:SI 789)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 791)
        (expr_list:REG_DEAD (reg:SI 789)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 601 599 602 70 (set (reg:SI 793)
        (const_int 8 [0x8])) blake_ref.c:587 90 {*movsi_internal}
     (nil))
(insn 602 601 603 70 (parallel [
            (set (reg:SI 298 [ D.6033 ])
                (minus:SI (reg:SI 793)
                    (reg:SI 792)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 793)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 8 [0x8])
                    (reg:SI 792))
                (nil)))))
(insn 603 602 604 70 (set (reg:DI 794 [ D.6033 ])
        (sign_extend:DI (reg:SI 787))) blake_ref.c:587 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 787)
        (nil)))
(insn 604 603 605 70 (set (reg:SI 796)
        (const_int 255 [0xff])) blake_ref.c:588 90 {*movsi_internal}
     (nil))
(insn 605 604 606 70 (parallel [
            (set (reg:SI 795 [ D.6033 ])
                (ashift:SI (reg:SI 796)
                    (subreg:QI (reg:SI 298 [ D.6033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 796)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (const_int 255 [0xff])
                    (subreg:QI (reg:SI 298 [ D.6033 ]) 0))
                (nil)))))
(insn 606 605 607 70 (parallel [
            (set (reg:QI 797 [ D.6037 ])
                (and:QI (subreg:QI (reg:SI 795 [ D.6033 ]) 0)
                    (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                                (reg:DI 794 [ D.6033 ]))
                            (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 384 {*andqi_1}
     (expr_list:REG_DEAD (reg:SI 795 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 607 606 608 70 (set (reg:SI 799)
        (const_int 128 [0x80])) blake_ref.c:588 90 {*movsi_internal}
     (nil))
(insn 608 607 609 70 (parallel [
            (set (reg:SI 798 [ D.6033 ])
                (ashiftrt:SI (reg:SI 799)
                    (subreg:QI (reg:SI 792) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 799)
        (expr_list:REG_DEAD (reg:SI 792)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (ashiftrt:SI (const_int 128 [0x80])
                        (subreg:QI (reg:SI 792) 0))
                    (nil))))))
(insn 609 608 611 70 (parallel [
            (set (reg:QI 305 [ D.6034 ])
                (xor:QI (reg:QI 797 [ D.6037 ])
                    (subreg:QI (reg:SI 798 [ D.6033 ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:SI 798 [ D.6033 ])
        (expr_list:REG_DEAD (reg:QI 797 [ D.6037 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 611 609 612 70 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                    (reg:DI 794 [ D.6033 ]))
                (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])
        (reg:QI 305 [ D.6034 ])) blake_ref.c:588 93 {*movqi_internal}
     (nil))
(insn 612 611 613 70 (parallel [
            (set (reg:SI 801 [ D.6035 ])
                (plus:SI (reg:SI 242 [ D.6033 ])
                    (const_int -889 [0xfffffffffffffc87])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:590 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 613 612 614 70 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 801 [ D.6035 ])
            (const_int 5 [0x5]))) blake_ref.c:590 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 801 [ D.6035 ])
        (nil)))
(jump_insn 614 613 615 70 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 631)
            (pc))) blake_ref.c:590 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 631)
;;  succ:       71 [50.0%]  (FALLTHRU)
;;              75 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 298 305 612 633 634 794
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 298 305 612 633 634 794

;; basic block 71, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 70, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 [50.0%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u924(6){ }u925(7){ }u926(16){ }u927(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 612 633 634 794
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 612 633 634 794
;; live  gen 	 17 [flags]
;; live  kill	
(note 615 614 616 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 616 615 617 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 384 [0x180]))) blake_ref.c:592 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 617 616 618 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 622)
            (pc))) blake_ref.c:592 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 622)
;;  succ:       74 [28.0%] 
;;              73 [72.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 633 634 794
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 633 634 794

;; basic block 73, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 71, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [72.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u930(6){ }u931(7){ }u932(16){ }u933(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 633 634 794
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 305 633 794
;; lr  def 	 17 [flags] 803
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 305 633 634 794
;; live  gen 	 803
;; live  kill	 17 [flags]
(note 618 617 620 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 620 618 621 73 (parallel [
            (set (reg:QI 803)
                (xor:QI (reg:QI 305 [ D.6034 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:595 406 {*xorqi_1}
     (expr_list:REG_DEAD (reg:QI 305 [ D.6034 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 621 620 622 73 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 633 [ state ])
                    (reg:DI 794 [ D.6033 ]))
                (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])
        (reg:QI 803)) blake_ref.c:595 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 803)
        (expr_list:REG_DEAD (reg:DI 794 [ D.6033 ])
            (nil))))
;;  succ:       74 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 633 634

;; basic block 74, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 [28.0%] 
;;              73 [100.0%]  (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u939(6){ }u940(7){ }u941(16){ }u942(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 633
;; lr  def 	 17 [flags] 804 805 806
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 298 633 634
;; live  gen 	 804 805 806
;; live  kill	 17 [flags]
(code_label 622 621 623 74 133 "" [1 uses])
(note 623 622 624 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 74 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 896 [0x380])) blake_ref.c:598 90 {*movsi_internal}
     (nil))
(insn 625 624 626 74 (set (reg:DI 804 [ D.6036 ])
        (sign_extend:DI (reg:SI 298 [ D.6033 ]))) blake_ref.c:634 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 298 [ D.6033 ])
        (nil)))
(insn 626 625 627 74 (parallel [
            (set (reg:DI 805 [ D.6036 ])
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 804 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 804 [ D.6036 ])
        (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 627 626 628 74 (parallel [
            (set (reg:DI 806)
                (plus:DI (reg:DI 805 [ D.6036 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 805 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 628 627 631 74 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 806)) blake_ref.c:634 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 806)
        (nil)))
;;  succ:       69 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 75, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 [50.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u950(6){ }u951(7){ }u952(16){ }u953(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 631 628 632 75 132 "" [1 uses])
(note 632 631 633 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 242 [ D.6033 ])
            (const_int 887 [0x377]))) blake_ref.c:601 7 {*cmpsi_1}
     (nil))
(jump_insn 634 633 635 75 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) blake_ref.c:601 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 665)
;;  succ:       76 [50.0%]  (FALLTHRU)
;;              81 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634

;; basic block 76, loop depth 0, count 0, freq 762, maybe hot
;;  prev block 75, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [50.0%]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u956(6){ }u957(7){ }u958(16){ }u959(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633
;; lr  def 	 17 [flags] 317 319 616 807 808 809 810 811 814
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 612 633 634
;; live  gen 	 17 [flags] 317 319 616 807 808 809 810 811 814
;; live  kill	 17 [flags]
(note 635 634 636 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 76 (set (reg:SI 808)
        (const_int 888 [0x378])) blake_ref.c:603 90 {*movsi_internal}
     (nil))
(insn 637 636 638 76 (parallel [
            (set (reg:SI 807 [ D.6033 ])
                (minus:SI (reg:SI 808)
                    (reg:SI 242 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:603 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 888 [0x378])
                (reg:SI 242 [ D.6033 ]))
            (nil))))
(insn 638 637 639 76 (set (reg:DI 809 [ D.6036 ])
        (sign_extend:DI (reg:SI 807 [ D.6033 ]))) blake_ref.c:603 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 807 [ D.6033 ])
        (nil)))
(insn 639 638 640 76 (parallel [
            (set (reg:DI 616 [ D.6039 ])
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 809 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:603 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 809 [ D.6036 ])
        (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 640 639 641 76 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 616 [ D.6039 ])) blake_ref.c:603 89 {*movdi_internal}
     (nil))
(insn 641 640 642 76 (parallel [
            (set (reg:SI 810 [ D.6035 ])
                (and:SI (reg:SI 242 [ D.6033 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:604 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 642 641 643 76 (parallel [
            (set (reg:SI 317 [ D.6033 ])
                (plus:SI (reg:SI 810 [ D.6035 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:604 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 810 [ D.6035 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 643 642 645 76 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 317 [ D.6033 ])) blake_ref.c:604 90 {*movsi_internal}
     (nil))
(insn 645 643 646 76 (parallel [
            (set (reg:SI 811 [ D.6033 ])
                (minus:SI (reg:SI 808)
                    (reg:SI 317 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:605 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 808)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 888 [0x378])
                    (reg:SI 317 [ D.6033 ]))
                (nil)))))
(insn 646 645 647 76 (set (reg:DI 319 [ D.6036 ])
        (sign_extend:DI (reg:SI 811 [ D.6033 ]))) blake_ref.c:605 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 811 [ D.6033 ])
        (nil)))
(insn 647 646 648 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 319 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(insn 648 647 649 76 (set (reg:QI 814 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 649 648 650 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 814 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 814 [ D.6038 ])
        (nil)))
(jump_insn 650 649 1026 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1034)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1034)
;;  succ:       80 [14.0%] 
;;              78 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 317 319 612 616 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 317 319 612 616 633 634

;; basic block 78, loop depth 0, count 0, freq 655, maybe hot
;;  prev block 76, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 [86.0%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u978(6){ }u979(7){ }u980(16){ }u981(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 317 319 612 616 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 317
;; lr  def 	 17 [flags] 816
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 317 319 612 616 633 634
;; live  gen 	 17 [flags] 816
;; live  kill	
(note 1026 650 651 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 651 1026 652 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 317 [ D.6033 ])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 317 [ D.6033 ])
        (nil)))
(insn 652 651 653 78 (set (reg:QI 816 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 653 652 654 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 816 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 816 [ D.6038 ])
        (nil)))
(jump_insn 654 653 1034 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 731)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 731)
;;  succ:       89 [83.7%] 
;;              80 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 319 612 616 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 319 612 616 633 634

;; basic block 80, loop depth 0, count 0, freq 373, maybe hot
;; Invalid sum of incoming frequencies 214, should be 373
;;  prev block 78, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 [16.3%]  (FALLTHRU)
;;              76 [14.0%] 
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u986(6){ }u987(7){ }u988(16){ }u989(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 319 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 319 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 612 616
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 319 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 612 616
;; live  kill	
(code_label 1034 654 656 80 150 "" [1 uses])
(note 656 1034 657 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 80 (set (reg:DI 37 r8)
        (reg:DI 319 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 319 [ D.6036 ])
        (nil)))
(insn 658 657 659 80 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 659 658 660 80 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 660 659 661 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 661 660 662 80 (set (reg:DI 616 [ D.6039 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 662 661 665 80 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       89 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634

;; basic block 81, loop depth 0, count 0, freq 762, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 [50.0%] 
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u998(6){ }u999(7){ }u1000(16){ }u1001(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 665 662 666 81 134 "" [1 uses])
(note 666 665 667 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 668 81 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 242 [ D.6033 ])
            (const_int 1016 [0x3f8]))) blake_ref.c:608 7 {*cmpsi_1}
     (nil))
(jump_insn 668 667 669 81 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 692)
            (pc))) blake_ref.c:608 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 692)
;;  succ:       82 [29.0%]  (FALLTHRU)
;;              83 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634

;; basic block 82, loop depth 0, count 0, freq 2457, maybe hot
;; Invalid sum of incoming frequencies 221, should be 2457
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [29.0%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u1004(6){ }u1005(7){ }u1006(16){ }u1007(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 612 616 817 818 819 820 821 822
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 612 616 817 818 819 820 821 822
;; live  kill	 17 [flags]
(note 669 668 670 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 82 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 1024 [0x400])) blake_ref.c:611 90 {*movsi_internal}
     (nil))
(insn 671 670 672 82 (set (reg:SI 818)
        (const_int 1024 [0x400])) blake_ref.c:362 90 {*movsi_internal}
     (nil))
(insn 672 671 673 82 (parallel [
            (set (reg:SI 817 [ D.6033 ])
                (minus:SI (reg:SI 818)
                    (reg:SI 242 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 818)
        (expr_list:REG_DEAD (reg:SI 242 [ D.6033 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:SI (const_int 1024 [0x400])
                        (reg:SI 242 [ D.6033 ]))
                    (nil))))))
(insn 673 672 674 82 (set (reg:DI 819 [ D.6036 ])
        (sign_extend:DI (reg:SI 817 [ D.6033 ]))) blake_ref.c:362 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 817 [ D.6033 ])
        (nil)))
(insn 674 673 675 82 (parallel [
            (set (reg:DI 820 [ D.6036 ])
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 819 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 819 [ D.6036 ])
        (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 675 674 676 82 (parallel [
            (set (reg:DI 821)
                (plus:DI (reg:DI 820 [ D.6036 ])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 820 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 676 675 677 82 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 821)) blake_ref.c:362 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 821)
        (nil)))
(insn 677 676 678 82 (parallel [
            (set (reg/f:DI 822 [ D.6040 ])
                (plus:DI (reg/v/f:DI 633 [ state ])
                    (const_int 216 [0xd8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:359 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 678 677 679 82 (set (reg:DI 1 dx)
        (reg/f:DI 822 [ D.6040 ])) blake_ref.c:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 822 [ D.6040 ])
        (nil)))
(insn 679 678 680 82 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) blake_ref.c:364 89 {*movdi_internal}
     (nil))
(call_insn 680 679 681 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 681 680 682 82 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:391 90 {*movsi_internal}
     (nil))
(insn 682 681 683 82 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:613 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 683 682 684 82 (set (reg:DI 37 r8)
        (const_int 888 [0x378])) 89 {*movdi_internal}
     (nil))
(insn 684 683 685 82 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 685 684 686 82 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 686 685 687 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 687 686 688 82 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:615 90 {*movsi_internal}
     (nil))
(insn 688 687 689 82 (set (reg:DI 616 [ D.6039 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 689 688 692 82 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       89 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634

;; basic block 83, loop depth 0, count 0, freq 541, maybe hot
;;  prev block 82, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81 [71.0%] 
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u1034(6){ }u1035(7){ }u1036(16){ }u1037(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633
;; lr  def 	 17 [flags] 327 330 332 823 824 825 826 827 830
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 17 [flags] 327 330 332 823 824 825 826 827 830
;; live  kill	 17 [flags]
(code_label 692 689 693 83 137 "" [1 uses])
(note 693 692 694 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 695 83 (set (reg:SI 824)
        (const_int 1024 [0x400])) blake_ref.c:619 90 {*movsi_internal}
     (nil))
(insn 695 694 696 83 (parallel [
            (set (reg:SI 823 [ D.6033 ])
                (minus:SI (reg:SI 824)
                    (reg:SI 242 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:619 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 1024 [0x400])
                (reg:SI 242 [ D.6033 ]))
            (nil))))
(insn 696 695 697 83 (set (reg:DI 825 [ D.6036 ])
        (sign_extend:DI (reg:SI 823 [ D.6033 ]))) blake_ref.c:619 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 823 [ D.6033 ])
        (nil)))
(insn 697 696 698 83 (parallel [
            (set (reg:DI 327 [ D.6036 ])
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 825 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:619 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 825 [ D.6036 ])
        (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 698 697 699 83 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 327 [ D.6036 ])) blake_ref.c:619 89 {*movdi_internal}
     (nil))
(insn 699 698 700 83 (parallel [
            (set (reg:SI 826 [ D.6035 ])
                (and:SI (reg:SI 242 [ D.6033 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:621 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 242 [ D.6033 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 700 699 701 83 (parallel [
            (set (reg:SI 330 [ D.6033 ])
                (plus:SI (reg:SI 826 [ D.6035 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:621 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 826 [ D.6035 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 701 700 703 83 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 330 [ D.6033 ])) blake_ref.c:621 90 {*movsi_internal}
     (nil))
(insn 703 701 704 83 (parallel [
            (set (reg:SI 827 [ D.6033 ])
                (minus:SI (reg:SI 824)
                    (reg:SI 330 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:622 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 824)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 1024 [0x400])
                    (reg:SI 330 [ D.6033 ]))
                (nil)))))
(insn 704 703 705 83 (set (reg:DI 332 [ D.6036 ])
        (sign_extend:DI (reg:SI 827 [ D.6033 ]))) blake_ref.c:622 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 827 [ D.6033 ])
        (nil)))
(insn 705 704 706 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 332 [ D.6036 ])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(insn 706 705 707 83 (set (reg:QI 830 [ D.6038 ])
        (eq:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 707 706 708 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 830 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 830 [ D.6038 ])
        (nil)))
(jump_insn 708 707 1028 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1035)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1035)
;;  succ:       87 [14.0%] 
;;              85 [86.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 330 332 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 330 332 633 634

;; basic block 85, loop depth 0, count 0, freq 465, maybe hot
;;  prev block 83, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 [86.0%]  (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u1056(6){ }u1057(7){ }u1058(16){ }u1059(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 330 332 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 330
;; lr  def 	 17 [flags] 832
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 330 332 633 634
;; live  gen 	 17 [flags] 832
;; live  kill	
(note 1028 708 709 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 709 1028 710 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 330 [ D.6033 ])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 330 [ D.6033 ])
        (nil)))
(insn 710 709 711 85 (set (reg:QI 832 [ D.6038 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) blake_ref.c:351 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 711 710 712 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 832 [ D.6038 ])
            (const_int 0 [0]))) blake_ref.c:351 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 832 [ D.6038 ])
        (nil)))
(jump_insn 712 711 1035 85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 720)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 720)
;;  succ:       88 [83.7%] 
;;              87 [16.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 332 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 332 633 634

;; basic block 87, loop depth 0, count 0, freq 265, maybe hot
;; Invalid sum of incoming frequencies 152, should be 265
;;  prev block 85, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       85 [16.3%]  (FALLTHRU)
;;              83 [14.0%] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u1064(6){ }u1065(7){ }u1066(16){ }u1067(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 332 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 332 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 327
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 332 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 327
;; live  kill	
(code_label 1035 712 714 87 151 "" [1 uses])
(note 714 1035 715 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 87 (set (reg:DI 37 r8)
        (reg:DI 332 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 332 [ D.6036 ])
        (nil)))
(insn 716 715 717 87 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 717 716 718 87 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 718 717 719 87 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 719 718 720 87 (set (reg:DI 327 [ D.6036 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       88 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 633 634

;; basic block 88, loop depth 0, count 0, freq 541, maybe hot
;; Invalid sum of incoming frequencies 654, should be 541
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 [100.0%]  (FALLTHRU)
;;              85 [83.7%] 
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u1075(6){ }u1076(7){ }u1077(16){ }u1078(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 612 616 833
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 327 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 612 616 833
;; live  kill	 17 [flags]
(code_label 720 719 721 88 138 "" [1 uses])
(note 721 720 722 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 88 (parallel [
            (set (reg:DI 833)
                (plus:DI (reg:DI 327 [ D.6036 ])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:623 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 327 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 723 722 724 88 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 833)) blake_ref.c:623 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 833)
        (nil)))
(insn 724 723 725 88 (set (reg:DI 37 r8)
        (const_int 888 [0x378])) 89 {*movdi_internal}
     (nil))
(insn 725 724 726 88 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 726 725 727 88 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 727 726 728 88 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 728 727 729 88 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:625 90 {*movsi_internal}
     (nil))
(insn 729 728 730 88 (set (reg:DI 616 [ D.6039 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 730 729 731 88 (set (reg:SI 612 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       89 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634

;; basic block 89, loop depth 0, count 0, freq 1525, maybe hot
;; Invalid sum of incoming frequencies 3919, should be 1525
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 [100.0%]  (FALLTHRU)
;;              80 [100.0%]  (FALLTHRU)
;;              82 [100.0%]  (FALLTHRU)
;;              78 [83.7%] 
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u1090(6){ }u1091(7){ }u1092(16){ }u1093(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633
;; lr  def 	 17 [flags] 834
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 616 633 634
;; live  gen 	 17 [flags] 834
;; live  kill	 17 [flags]
(code_label 731 730 732 89 135 "" [1 uses])
(note 732 731 733 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 89 (parallel [
            (set (reg:DI 834)
                (plus:DI (reg:DI 616 [ D.6039 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:628 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 616 [ D.6039 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 734 733 735 89 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 834)) blake_ref.c:628 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 834)
        (nil)))
(insn 735 734 736 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 612 [ D.6033 ])
            (const_int 384 [0x180]))) blake_ref.c:629 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 612 [ D.6033 ])
        (nil)))
(jump_insn 736 735 737 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 747)
            (pc))) blake_ref.c:629 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 747)
;;  succ:       90 [28.0%]  (FALLTHRU)
;;              91 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 90, loop depth 0, count 0, freq 427, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [28.0%]  (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u1099(6){ }u1100(7){ }u1101(16){ }u1102(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 283 594 835
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 283 594 835
;; live  kill	 17 [flags]
(note 737 736 738 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 90 (parallel [
            (set (reg/f:DI 835)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 739 738 740 90 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 740 739 741 90 (set (reg:DI 1 dx)
        (reg/f:DI 835)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 835)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec]))
            (nil))))
(insn 741 740 742 90 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 742 741 743 90 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 743 742 744 90 (set (reg:DI 594 [ D.6039 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 744 743 747 90 (set (reg:SI 283 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       92 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634

;; basic block 91, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 [72.0%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u1113(6){ }u1114(7){ }u1115(16){ }u1116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 283 594 836
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 283 594 836
;; live  kill	 17 [flags]
(code_label 747 744 748 91 140 "" [1 uses])
(note 748 747 749 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 749 748 750 91 (parallel [
            (set (reg/f:DI 836)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -19 [0xffffffffffffffed])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 750 749 751 91 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 751 750 752 91 (set (reg:DI 1 dx)
        (reg/f:DI 836)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 836)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -19 [0xffffffffffffffed]))
            (nil))))
(insn 752 751 753 91 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 753 752 754 91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 754 753 755 91 (set (reg:DI 594 [ D.6039 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 755 754 756 91 (set (reg:SI 283 [ D.6033 ])
        (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       92 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634

;; basic block 92, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 [100.0%]  (FALLTHRU)
;;              90 [100.0%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u1127(6){ }u1128(7){ }u1129(16){ }u1130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633
;; lr  def 	 17 [flags] 837
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 283 594 633 634
;; live  gen 	 17 [flags] 837
;; live  kill	 17 [flags]
(code_label 756 755 757 92 141 "" [0 uses])
(note 757 756 758 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 758 757 759 92 (parallel [
            (set (reg:DI 837)
                (plus:DI (reg:DI 594 [ D.6039 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 594 [ D.6039 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 759 758 761 92 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 837)) blake_ref.c:634 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 837)
        (nil)))
(insn 761 759 762 92 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 283 [ D.6033 ])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 283 [ D.6033 ])
        (nil)))
(jump_insn 762 761 766 92 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 760)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 760)
;;  succ:       68 [100.0%] 
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 93, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 [100.0%]  (FALLTHRU)
;;              68 [100.0%]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u1136(6){ }u1137(7){ }u1138(16){ }u1139(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  def 	 17 [flags] 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 17 [flags] 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945
;; live  kill	 17 [flags]
(code_label 766 762 767 93 131 "" [0 uses])
(note 767 766 768 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 768 767 769 93 (set (reg:DI 839 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 769 768 770 93 (parallel [
            (set (reg:DI 838 [ D.6036 ])
                (lshiftrt:DI (reg:DI 839 [ state_4(D)->h64 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 839 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 770 769 771 93 (parallel [
            (set (reg:SI 840 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 838 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 838 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 771 770 772 93 (set (mem:QI (reg/v/f:DI 634 [ hashval ]) [0 *hashval_6(D)+0 S1 A8])
        (subreg:QI (reg:SI 840 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 840 [ D.6032 ])
        (nil)))
(insn 772 771 773 93 (set (reg:DI 842 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 773 772 774 93 (parallel [
            (set (reg:DI 841 [ D.6036 ])
                (lshiftrt:DI (reg:DI 842 [ state_4(D)->h64 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 842 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 774 773 775 93 (parallel [
            (set (reg:SI 843 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 841 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 841 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 775 774 776 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 1 [0x1])) [0 MEM[(BitSequence *)hashval_6(D) + 1B]+0 S1 A8])
        (subreg:QI (reg:SI 843 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 843 [ D.6032 ])
        (nil)))
(insn 776 775 777 93 (set (reg:DI 845 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 777 776 778 93 (parallel [
            (set (reg:DI 844 [ D.6036 ])
                (lshiftrt:DI (reg:DI 845 [ state_4(D)->h64 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 845 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 778 777 779 93 (parallel [
            (set (reg:SI 846 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 844 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 844 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 779 778 780 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 2 [0x2])) [0 MEM[(BitSequence *)hashval_6(D) + 2B]+0 S1 A8])
        (subreg:QI (reg:SI 846 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 846 [ D.6032 ])
        (nil)))
(insn 780 779 781 93 (set (reg:DI 848 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 781 780 782 93 (parallel [
            (set (reg:DI 847 [ D.6036 ])
                (lshiftrt:DI (reg:DI 848 [ state_4(D)->h64 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 848 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 782 781 783 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 3 [0x3])) [0 MEM[(BitSequence *)hashval_6(D) + 3B]+0 S1 A8])
        (subreg:QI (reg:DI 847 [ D.6036 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 847 [ D.6036 ])
        (nil)))
(insn 783 782 784 93 (set (reg:DI 849 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 784 783 785 93 (parallel [
            (set (reg:SI 850 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 849 [ state_4(D)->h64 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 849 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 785 784 786 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 4 [0x4])) [0 MEM[(BitSequence *)hashval_6(D) + 4B]+0 S1 A8])
        (subreg:QI (reg:SI 850 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 850 [ D.6032 ])
        (nil)))
(insn 786 785 787 93 (set (reg:DI 851 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 787 786 788 93 (parallel [
            (set (reg:SI 852 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 851 [ state_4(D)->h64 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 851 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 788 787 789 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 5 [0x5])) [0 MEM[(BitSequence *)hashval_6(D) + 5B]+0 S1 A8])
        (subreg:QI (reg:SI 852 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 852 [ D.6032 ])
        (nil)))
(insn 789 788 790 93 (set (reg:DI 853 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 790 789 791 93 (parallel [
            (set (reg:SI 854 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 853 [ state_4(D)->h64 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 853 [ state_4(D)->h64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 791 790 792 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 6 [0x6])) [0 MEM[(BitSequence *)hashval_6(D) + 6B]+0 S1 A8])
        (subreg:QI (reg:SI 854 [ D.6032 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 854 [ D.6032 ])
        (nil)))
(insn 792 791 793 93 (set (reg:DI 855 [ state_4(D)->h64 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (nil))
(insn 793 792 794 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 7 [0x7])) [0 MEM[(BitSequence *)hashval_6(D) + 7B]+0 S1 A8])
        (subreg:QI (reg:DI 855 [ state_4(D)->h64 ]) 0)) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 855 [ state_4(D)->h64 ])
        (nil)))
(insn 794 793 795 93 (set (reg:DI 857 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 795 794 796 93 (parallel [
            (set (reg:DI 856 [ D.6036 ])
                (lshiftrt:DI (reg:DI 857 [ state_4(D)->h64+8 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 857 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 796 795 797 93 (parallel [
            (set (reg:SI 858 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 856 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 856 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 797 796 798 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 8 [0x8])) [0 MEM[(BitSequence *)hashval_6(D) + 8B]+0 S1 A8])
        (subreg:QI (reg:SI 858 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 858 [ D.6032 ])
        (nil)))
(insn 798 797 799 93 (set (reg:DI 860 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 799 798 800 93 (parallel [
            (set (reg:DI 859 [ D.6036 ])
                (lshiftrt:DI (reg:DI 860 [ state_4(D)->h64+8 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 860 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 800 799 801 93 (parallel [
            (set (reg:SI 861 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 859 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 859 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 801 800 802 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 9 [0x9])) [0 MEM[(BitSequence *)hashval_6(D) + 9B]+0 S1 A8])
        (subreg:QI (reg:SI 861 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 861 [ D.6032 ])
        (nil)))
(insn 802 801 803 93 (set (reg:DI 863 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 803 802 804 93 (parallel [
            (set (reg:DI 862 [ D.6036 ])
                (lshiftrt:DI (reg:DI 863 [ state_4(D)->h64+8 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 863 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 804 803 805 93 (parallel [
            (set (reg:SI 864 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 862 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 862 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 805 804 806 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 10 [0xa])) [0 MEM[(BitSequence *)hashval_6(D) + 10B]+0 S1 A8])
        (subreg:QI (reg:SI 864 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 864 [ D.6032 ])
        (nil)))
(insn 806 805 807 93 (set (reg:DI 866 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 807 806 808 93 (parallel [
            (set (reg:DI 865 [ D.6036 ])
                (lshiftrt:DI (reg:DI 866 [ state_4(D)->h64+8 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 866 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 808 807 809 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 11 [0xb])) [0 MEM[(BitSequence *)hashval_6(D) + 11B]+0 S1 A8])
        (subreg:QI (reg:DI 865 [ D.6036 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 865 [ D.6036 ])
        (nil)))
(insn 809 808 810 93 (set (reg:DI 867 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 810 809 811 93 (parallel [
            (set (reg:SI 868 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 867 [ state_4(D)->h64+8 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 867 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 811 810 812 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 12 [0xc])) [0 MEM[(BitSequence *)hashval_6(D) + 12B]+0 S1 A8])
        (subreg:QI (reg:SI 868 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 868 [ D.6032 ])
        (nil)))
(insn 812 811 813 93 (set (reg:DI 869 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 813 812 814 93 (parallel [
            (set (reg:SI 870 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 869 [ state_4(D)->h64+8 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 869 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 814 813 815 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 13 [0xd])) [0 MEM[(BitSequence *)hashval_6(D) + 13B]+0 S1 A8])
        (subreg:QI (reg:SI 870 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 870 [ D.6032 ])
        (nil)))
(insn 815 814 816 93 (set (reg:DI 871 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 816 815 817 93 (parallel [
            (set (reg:SI 872 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 871 [ state_4(D)->h64+8 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 871 [ state_4(D)->h64+8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 817 816 818 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 14 [0xe])) [0 MEM[(BitSequence *)hashval_6(D) + 14B]+0 S1 A8])
        (subreg:QI (reg:SI 872 [ D.6032 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 872 [ D.6032 ])
        (nil)))
(insn 818 817 819 93 (set (reg:DI 873 [ state_4(D)->h64+8 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (nil))
(insn 819 818 820 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 15 [0xf])) [0 MEM[(BitSequence *)hashval_6(D) + 15B]+0 S1 A8])
        (subreg:QI (reg:DI 873 [ state_4(D)->h64+8 ]) 0)) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 873 [ state_4(D)->h64+8 ])
        (nil)))
(insn 820 819 821 93 (set (reg:DI 875 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 821 820 822 93 (parallel [
            (set (reg:DI 874 [ D.6036 ])
                (lshiftrt:DI (reg:DI 875 [ state_4(D)->h64+16 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 875 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 822 821 823 93 (parallel [
            (set (reg:SI 876 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 874 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 874 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 823 822 824 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 16 [0x10])) [0 MEM[(BitSequence *)hashval_6(D) + 16B]+0 S1 A8])
        (subreg:QI (reg:SI 876 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 876 [ D.6032 ])
        (nil)))
(insn 824 823 825 93 (set (reg:DI 878 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 825 824 826 93 (parallel [
            (set (reg:DI 877 [ D.6036 ])
                (lshiftrt:DI (reg:DI 878 [ state_4(D)->h64+16 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 878 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 826 825 827 93 (parallel [
            (set (reg:SI 879 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 877 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 877 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 827 826 828 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 17 [0x11])) [0 MEM[(BitSequence *)hashval_6(D) + 17B]+0 S1 A8])
        (subreg:QI (reg:SI 879 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 879 [ D.6032 ])
        (nil)))
(insn 828 827 829 93 (set (reg:DI 881 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 829 828 830 93 (parallel [
            (set (reg:DI 880 [ D.6036 ])
                (lshiftrt:DI (reg:DI 881 [ state_4(D)->h64+16 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 881 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 830 829 831 93 (parallel [
            (set (reg:SI 882 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 880 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 880 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 831 830 832 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 18 [0x12])) [0 MEM[(BitSequence *)hashval_6(D) + 18B]+0 S1 A8])
        (subreg:QI (reg:SI 882 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 882 [ D.6032 ])
        (nil)))
(insn 832 831 833 93 (set (reg:DI 884 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 833 832 834 93 (parallel [
            (set (reg:DI 883 [ D.6036 ])
                (lshiftrt:DI (reg:DI 884 [ state_4(D)->h64+16 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 884 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 834 833 835 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 19 [0x13])) [0 MEM[(BitSequence *)hashval_6(D) + 19B]+0 S1 A8])
        (subreg:QI (reg:DI 883 [ D.6036 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 883 [ D.6036 ])
        (nil)))
(insn 835 834 836 93 (set (reg:DI 885 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 836 835 837 93 (parallel [
            (set (reg:SI 886 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 885 [ state_4(D)->h64+16 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 885 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 837 836 838 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 20 [0x14])) [0 MEM[(BitSequence *)hashval_6(D) + 20B]+0 S1 A8])
        (subreg:QI (reg:SI 886 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 886 [ D.6032 ])
        (nil)))
(insn 838 837 839 93 (set (reg:DI 887 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 839 838 840 93 (parallel [
            (set (reg:SI 888 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 887 [ state_4(D)->h64+16 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 887 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 840 839 841 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 21 [0x15])) [0 MEM[(BitSequence *)hashval_6(D) + 21B]+0 S1 A8])
        (subreg:QI (reg:SI 888 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 888 [ D.6032 ])
        (nil)))
(insn 841 840 842 93 (set (reg:DI 889 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 842 841 843 93 (parallel [
            (set (reg:SI 890 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 889 [ state_4(D)->h64+16 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 889 [ state_4(D)->h64+16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 843 842 844 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 22 [0x16])) [0 MEM[(BitSequence *)hashval_6(D) + 22B]+0 S1 A8])
        (subreg:QI (reg:SI 890 [ D.6032 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 890 [ D.6032 ])
        (nil)))
(insn 844 843 845 93 (set (reg:DI 891 [ state_4(D)->h64+16 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (nil))
(insn 845 844 846 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 23 [0x17])) [0 MEM[(BitSequence *)hashval_6(D) + 23B]+0 S1 A8])
        (subreg:QI (reg:DI 891 [ state_4(D)->h64+16 ]) 0)) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 891 [ state_4(D)->h64+16 ])
        (nil)))
(insn 846 845 847 93 (set (reg:DI 893 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 847 846 848 93 (parallel [
            (set (reg:DI 892 [ D.6036 ])
                (lshiftrt:DI (reg:DI 893 [ state_4(D)->h64+24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 893 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 848 847 849 93 (parallel [
            (set (reg:SI 894 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 892 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 892 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 849 848 850 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 24 [0x18])) [0 MEM[(BitSequence *)hashval_6(D) + 24B]+0 S1 A8])
        (subreg:QI (reg:SI 894 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 894 [ D.6032 ])
        (nil)))
(insn 850 849 851 93 (set (reg:DI 896 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 851 850 852 93 (parallel [
            (set (reg:DI 895 [ D.6036 ])
                (lshiftrt:DI (reg:DI 896 [ state_4(D)->h64+24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 896 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 852 851 853 93 (parallel [
            (set (reg:SI 897 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 895 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 895 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 853 852 854 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 25 [0x19])) [0 MEM[(BitSequence *)hashval_6(D) + 25B]+0 S1 A8])
        (subreg:QI (reg:SI 897 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 897 [ D.6032 ])
        (nil)))
(insn 854 853 855 93 (set (reg:DI 899 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 855 854 856 93 (parallel [
            (set (reg:DI 898 [ D.6036 ])
                (lshiftrt:DI (reg:DI 899 [ state_4(D)->h64+24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 899 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 856 855 857 93 (parallel [
            (set (reg:SI 900 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 898 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 898 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 857 856 858 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 26 [0x1a])) [0 MEM[(BitSequence *)hashval_6(D) + 26B]+0 S1 A8])
        (subreg:QI (reg:SI 900 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 900 [ D.6032 ])
        (nil)))
(insn 858 857 859 93 (set (reg:DI 902 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 859 858 860 93 (parallel [
            (set (reg:DI 901 [ D.6036 ])
                (lshiftrt:DI (reg:DI 902 [ state_4(D)->h64+24 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 902 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 860 859 861 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 27 [0x1b])) [0 MEM[(BitSequence *)hashval_6(D) + 27B]+0 S1 A8])
        (subreg:QI (reg:DI 901 [ D.6036 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 901 [ D.6036 ])
        (nil)))
(insn 861 860 862 93 (set (reg:DI 903 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 862 861 863 93 (parallel [
            (set (reg:SI 904 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 903 [ state_4(D)->h64+24 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 903 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 863 862 864 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 28 [0x1c])) [0 MEM[(BitSequence *)hashval_6(D) + 28B]+0 S1 A8])
        (subreg:QI (reg:SI 904 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 904 [ D.6032 ])
        (nil)))
(insn 864 863 865 93 (set (reg:DI 905 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 865 864 866 93 (parallel [
            (set (reg:SI 906 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 905 [ state_4(D)->h64+24 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 905 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 866 865 867 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 29 [0x1d])) [0 MEM[(BitSequence *)hashval_6(D) + 29B]+0 S1 A8])
        (subreg:QI (reg:SI 906 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 906 [ D.6032 ])
        (nil)))
(insn 867 866 868 93 (set (reg:DI 907 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 868 867 869 93 (parallel [
            (set (reg:SI 908 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 907 [ state_4(D)->h64+24 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 907 [ state_4(D)->h64+24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 869 868 870 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 30 [0x1e])) [0 MEM[(BitSequence *)hashval_6(D) + 30B]+0 S1 A8])
        (subreg:QI (reg:SI 908 [ D.6032 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 908 [ D.6032 ])
        (nil)))
(insn 870 869 871 93 (set (reg:DI 909 [ state_4(D)->h64+24 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (nil))
(insn 871 870 872 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 31 [0x1f])) [0 MEM[(BitSequence *)hashval_6(D) + 31B]+0 S1 A8])
        (subreg:QI (reg:DI 909 [ state_4(D)->h64+24 ]) 0)) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 909 [ state_4(D)->h64+24 ])
        (nil)))
(insn 872 871 873 93 (set (reg:DI 911 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 873 872 874 93 (parallel [
            (set (reg:DI 910 [ D.6036 ])
                (lshiftrt:DI (reg:DI 911 [ state_4(D)->h64+32 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 911 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 874 873 875 93 (parallel [
            (set (reg:SI 912 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 910 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 910 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 875 874 876 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 32 [0x20])) [0 MEM[(BitSequence *)hashval_6(D) + 32B]+0 S1 A8])
        (subreg:QI (reg:SI 912 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 912 [ D.6032 ])
        (nil)))
(insn 876 875 877 93 (set (reg:DI 914 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 877 876 878 93 (parallel [
            (set (reg:DI 913 [ D.6036 ])
                (lshiftrt:DI (reg:DI 914 [ state_4(D)->h64+32 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 914 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 878 877 879 93 (parallel [
            (set (reg:SI 915 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 913 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 913 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 879 878 880 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 33 [0x21])) [0 MEM[(BitSequence *)hashval_6(D) + 33B]+0 S1 A8])
        (subreg:QI (reg:SI 915 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 915 [ D.6032 ])
        (nil)))
(insn 880 879 881 93 (set (reg:DI 917 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 881 880 882 93 (parallel [
            (set (reg:DI 916 [ D.6036 ])
                (lshiftrt:DI (reg:DI 917 [ state_4(D)->h64+32 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 917 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 882 881 883 93 (parallel [
            (set (reg:SI 918 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 916 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 916 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 883 882 884 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 34 [0x22])) [0 MEM[(BitSequence *)hashval_6(D) + 34B]+0 S1 A8])
        (subreg:QI (reg:SI 918 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 918 [ D.6032 ])
        (nil)))
(insn 884 883 885 93 (set (reg:DI 920 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 885 884 886 93 (parallel [
            (set (reg:DI 919 [ D.6036 ])
                (lshiftrt:DI (reg:DI 920 [ state_4(D)->h64+32 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 920 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 886 885 887 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 35 [0x23])) [0 MEM[(BitSequence *)hashval_6(D) + 35B]+0 S1 A8])
        (subreg:QI (reg:DI 919 [ D.6036 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 919 [ D.6036 ])
        (nil)))
(insn 887 886 888 93 (set (reg:DI 921 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 888 887 889 93 (parallel [
            (set (reg:SI 922 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 921 [ state_4(D)->h64+32 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 921 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 889 888 890 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 36 [0x24])) [0 MEM[(BitSequence *)hashval_6(D) + 36B]+0 S1 A8])
        (subreg:QI (reg:SI 922 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 922 [ D.6032 ])
        (nil)))
(insn 890 889 891 93 (set (reg:DI 923 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 891 890 892 93 (parallel [
            (set (reg:SI 924 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 923 [ state_4(D)->h64+32 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 923 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 892 891 893 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 37 [0x25])) [0 MEM[(BitSequence *)hashval_6(D) + 37B]+0 S1 A8])
        (subreg:QI (reg:SI 924 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 924 [ D.6032 ])
        (nil)))
(insn 893 892 894 93 (set (reg:DI 925 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 894 893 895 93 (parallel [
            (set (reg:SI 926 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 925 [ state_4(D)->h64+32 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 925 [ state_4(D)->h64+32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 895 894 896 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 38 [0x26])) [0 MEM[(BitSequence *)hashval_6(D) + 38B]+0 S1 A8])
        (subreg:QI (reg:SI 926 [ D.6032 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 926 [ D.6032 ])
        (nil)))
(insn 896 895 897 93 (set (reg:DI 927 [ state_4(D)->h64+32 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (nil))
(insn 897 896 898 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 39 [0x27])) [0 MEM[(BitSequence *)hashval_6(D) + 39B]+0 S1 A8])
        (subreg:QI (reg:DI 927 [ state_4(D)->h64+32 ]) 0)) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 927 [ state_4(D)->h64+32 ])
        (nil)))
(insn 898 897 899 93 (set (reg:DI 929 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 899 898 900 93 (parallel [
            (set (reg:DI 928 [ D.6036 ])
                (lshiftrt:DI (reg:DI 929 [ state_4(D)->h64+40 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 929 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 900 899 901 93 (parallel [
            (set (reg:SI 930 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 928 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 928 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 901 900 902 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 40 [0x28])) [0 MEM[(BitSequence *)hashval_6(D) + 40B]+0 S1 A8])
        (subreg:QI (reg:SI 930 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 930 [ D.6032 ])
        (nil)))
(insn 902 901 903 93 (set (reg:DI 932 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 903 902 904 93 (parallel [
            (set (reg:DI 931 [ D.6036 ])
                (lshiftrt:DI (reg:DI 932 [ state_4(D)->h64+40 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 932 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 904 903 905 93 (parallel [
            (set (reg:SI 933 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 931 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 931 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 905 904 906 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 41 [0x29])) [0 MEM[(BitSequence *)hashval_6(D) + 41B]+0 S1 A8])
        (subreg:QI (reg:SI 933 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 933 [ D.6032 ])
        (nil)))
(insn 906 905 907 93 (set (reg:DI 935 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 907 906 908 93 (parallel [
            (set (reg:DI 934 [ D.6036 ])
                (lshiftrt:DI (reg:DI 935 [ state_4(D)->h64+40 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 935 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 908 907 909 93 (parallel [
            (set (reg:SI 936 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 934 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 934 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 909 908 910 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 42 [0x2a])) [0 MEM[(BitSequence *)hashval_6(D) + 42B]+0 S1 A8])
        (subreg:QI (reg:SI 936 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 936 [ D.6032 ])
        (nil)))
(insn 910 909 911 93 (set (reg:DI 938 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 911 910 912 93 (parallel [
            (set (reg:DI 937 [ D.6036 ])
                (lshiftrt:DI (reg:DI 938 [ state_4(D)->h64+40 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 938 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 912 911 913 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 43 [0x2b])) [0 MEM[(BitSequence *)hashval_6(D) + 43B]+0 S1 A8])
        (subreg:QI (reg:DI 937 [ D.6036 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 937 [ D.6036 ])
        (nil)))
(insn 913 912 914 93 (set (reg:DI 939 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 914 913 915 93 (parallel [
            (set (reg:SI 940 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 939 [ state_4(D)->h64+40 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 939 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 915 914 916 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 44 [0x2c])) [0 MEM[(BitSequence *)hashval_6(D) + 44B]+0 S1 A8])
        (subreg:QI (reg:SI 940 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 940 [ D.6032 ])
        (nil)))
(insn 916 915 917 93 (set (reg:DI 941 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 917 916 918 93 (parallel [
            (set (reg:SI 942 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 941 [ state_4(D)->h64+40 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 941 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 918 917 919 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 45 [0x2d])) [0 MEM[(BitSequence *)hashval_6(D) + 45B]+0 S1 A8])
        (subreg:QI (reg:SI 942 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 942 [ D.6032 ])
        (nil)))
(insn 919 918 920 93 (set (reg:DI 943 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 920 919 921 93 (parallel [
            (set (reg:SI 944 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 943 [ state_4(D)->h64+40 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 943 [ state_4(D)->h64+40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 921 920 922 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 46 [0x2e])) [0 MEM[(BitSequence *)hashval_6(D) + 46B]+0 S1 A8])
        (subreg:QI (reg:SI 944 [ D.6032 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 944 [ D.6032 ])
        (nil)))
(insn 922 921 923 93 (set (reg:DI 945 [ state_4(D)->h64+40 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (nil))
(insn 923 922 924 93 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 47 [0x2f])) [0 MEM[(BitSequence *)hashval_6(D) + 47B]+0 S1 A8])
        (subreg:QI (reg:DI 945 [ state_4(D)->h64+40 ]) 0)) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 945 [ state_4(D)->h64+40 ])
        (nil)))
(insn 924 923 925 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 633 [ state ]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 512 [0x200]))) blake_ref.c:645 7 {*cmpsi_1}
     (nil))
(jump_insn 925 924 926 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1058)
            (pc))) blake_ref.c:645 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 1058)
;;  succ:       94 [37.8%]  (FALLTHRU)
;;              97 [62.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 94, loop depth 0, count 0, freq 2307, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93 [37.8%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u1370(6){ }u1371(7){ }u1372(16){ }u1373(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; lr  def 	 17 [flags] 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  gen 	 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981
;; live  kill	 17 [flags]
(note 926 925 927 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 94 (set (reg:DI 947 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 928 927 929 94 (parallel [
            (set (reg:DI 946 [ D.6036 ])
                (lshiftrt:DI (reg:DI 947 [ state_4(D)->h64+48 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 947 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 929 928 930 94 (parallel [
            (set (reg:SI 948 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 946 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 946 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 930 929 931 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 48 [0x30])) [0 MEM[(BitSequence *)hashval_6(D) + 48B]+0 S1 A8])
        (subreg:QI (reg:SI 948 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 948 [ D.6032 ])
        (nil)))
(insn 931 930 932 94 (set (reg:DI 950 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 932 931 933 94 (parallel [
            (set (reg:DI 949 [ D.6036 ])
                (lshiftrt:DI (reg:DI 950 [ state_4(D)->h64+48 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 950 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 933 932 934 94 (parallel [
            (set (reg:SI 951 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 949 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 949 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 934 933 935 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 49 [0x31])) [0 MEM[(BitSequence *)hashval_6(D) + 49B]+0 S1 A8])
        (subreg:QI (reg:SI 951 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 951 [ D.6032 ])
        (nil)))
(insn 935 934 936 94 (set (reg:DI 953 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 936 935 937 94 (parallel [
            (set (reg:DI 952 [ D.6036 ])
                (lshiftrt:DI (reg:DI 953 [ state_4(D)->h64+48 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 953 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 937 936 938 94 (parallel [
            (set (reg:SI 954 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 952 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 952 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 938 937 939 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 50 [0x32])) [0 MEM[(BitSequence *)hashval_6(D) + 50B]+0 S1 A8])
        (subreg:QI (reg:SI 954 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 954 [ D.6032 ])
        (nil)))
(insn 939 938 940 94 (set (reg:DI 956 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 940 939 941 94 (parallel [
            (set (reg:DI 955 [ D.6036 ])
                (lshiftrt:DI (reg:DI 956 [ state_4(D)->h64+48 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 956 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 941 940 942 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 51 [0x33])) [0 MEM[(BitSequence *)hashval_6(D) + 51B]+0 S1 A8])
        (subreg:QI (reg:DI 955 [ D.6036 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 955 [ D.6036 ])
        (nil)))
(insn 942 941 943 94 (set (reg:DI 957 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 943 942 944 94 (parallel [
            (set (reg:SI 958 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 957 [ state_4(D)->h64+48 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 957 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 944 943 945 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 52 [0x34])) [0 MEM[(BitSequence *)hashval_6(D) + 52B]+0 S1 A8])
        (subreg:QI (reg:SI 958 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 958 [ D.6032 ])
        (nil)))
(insn 945 944 946 94 (set (reg:DI 959 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 946 945 947 94 (parallel [
            (set (reg:SI 960 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 959 [ state_4(D)->h64+48 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 959 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 947 946 948 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 53 [0x35])) [0 MEM[(BitSequence *)hashval_6(D) + 53B]+0 S1 A8])
        (subreg:QI (reg:SI 960 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 960 [ D.6032 ])
        (nil)))
(insn 948 947 949 94 (set (reg:DI 961 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 949 948 950 94 (parallel [
            (set (reg:SI 962 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 961 [ state_4(D)->h64+48 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 961 [ state_4(D)->h64+48 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 950 949 951 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 54 [0x36])) [0 MEM[(BitSequence *)hashval_6(D) + 54B]+0 S1 A8])
        (subreg:QI (reg:SI 962 [ D.6032 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 962 [ D.6032 ])
        (nil)))
(insn 951 950 952 94 (set (reg:DI 963 [ state_4(D)->h64+48 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (nil))
(insn 952 951 953 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 55 [0x37])) [0 MEM[(BitSequence *)hashval_6(D) + 55B]+0 S1 A8])
        (subreg:QI (reg:DI 963 [ state_4(D)->h64+48 ]) 0)) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 963 [ state_4(D)->h64+48 ])
        (nil)))
(insn 953 952 954 94 (set (reg:DI 965 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 954 953 955 94 (parallel [
            (set (reg:DI 964 [ D.6036 ])
                (lshiftrt:DI (reg:DI 965 [ state_4(D)->h64+56 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 965 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 955 954 956 94 (parallel [
            (set (reg:SI 966 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 964 [ D.6036 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 964 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 956 955 957 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 56 [0x38])) [0 MEM[(BitSequence *)hashval_6(D) + 56B]+0 S1 A8])
        (subreg:QI (reg:SI 966 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 966 [ D.6032 ])
        (nil)))
(insn 957 956 958 94 (set (reg:DI 968 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 958 957 959 94 (parallel [
            (set (reg:DI 967 [ D.6036 ])
                (lshiftrt:DI (reg:DI 968 [ state_4(D)->h64+56 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 968 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 959 958 960 94 (parallel [
            (set (reg:SI 969 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 967 [ D.6036 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 967 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 960 959 961 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 57 [0x39])) [0 MEM[(BitSequence *)hashval_6(D) + 57B]+0 S1 A8])
        (subreg:QI (reg:SI 969 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 969 [ D.6032 ])
        (nil)))
(insn 961 960 962 94 (set (reg:DI 971 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 962 961 963 94 (parallel [
            (set (reg:DI 970 [ D.6036 ])
                (lshiftrt:DI (reg:DI 971 [ state_4(D)->h64+56 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 971 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 963 962 964 94 (parallel [
            (set (reg:SI 972 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 970 [ D.6036 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 970 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 964 963 965 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 58 [0x3a])) [0 MEM[(BitSequence *)hashval_6(D) + 58B]+0 S1 A8])
        (subreg:QI (reg:SI 972 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 972 [ D.6032 ])
        (nil)))
(insn 965 964 966 94 (set (reg:DI 974 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 966 965 967 94 (parallel [
            (set (reg:DI 973 [ D.6036 ])
                (lshiftrt:DI (reg:DI 974 [ state_4(D)->h64+56 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 546 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 974 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:DI (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                            (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 967 966 968 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 59 [0x3b])) [0 MEM[(BitSequence *)hashval_6(D) + 59B]+0 S1 A8])
        (subreg:QI (reg:DI 973 [ D.6036 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 973 [ D.6036 ])
        (nil)))
(insn 968 967 969 94 (set (reg:DI 975 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 969 968 970 94 (parallel [
            (set (reg:SI 976 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 975 [ state_4(D)->h64+56 ]) 0)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 975 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 970 969 971 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 60 [0x3c])) [0 MEM[(BitSequence *)hashval_6(D) + 60B]+0 S1 A8])
        (subreg:QI (reg:SI 976 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 976 [ D.6032 ])
        (nil)))
(insn 971 970 972 94 (set (reg:DI 977 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 972 971 973 94 (parallel [
            (set (reg:SI 978 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 977 [ state_4(D)->h64+56 ]) 0)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 977 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 973 972 974 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 61 [0x3d])) [0 MEM[(BitSequence *)hashval_6(D) + 61B]+0 S1 A8])
        (subreg:QI (reg:SI 978 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 978 [ D.6032 ])
        (nil)))
(insn 974 973 975 94 (set (reg:DI 979 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (nil))
(insn 975 974 976 94 (parallel [
            (set (reg:SI 980 [ D.6032 ])
                (lshiftrt:SI (subreg:SI (reg:DI 979 [ state_4(D)->h64+56 ]) 0)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_DEAD (reg:DI 979 [ state_4(D)->h64+56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 976 975 977 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 62 [0x3e])) [0 MEM[(BitSequence *)hashval_6(D) + 62B]+0 S1 A8])
        (subreg:QI (reg:SI 980 [ D.6032 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 980 [ D.6032 ])
        (nil)))
(insn 977 976 978 94 (set (reg:DI 981 [ state_4(D)->h64+56 ])
        (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 633 [ state ])
        (nil)))
(insn 978 977 986 94 (set (mem:QI (plus:DI (reg/v/f:DI 634 [ hashval ])
                (const_int 63 [0x3f])) [0 MEM[(BitSequence *)hashval_6(D) + 63B]+0 S1 A8])
        (subreg:QI (reg:DI 981 [ state_4(D)->h64+56 ]) 0)) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 981 [ state_4(D)->h64+56 ])
        (expr_list:REG_DEAD (reg/v/f:DI 634 [ hashval ])
            (nil))))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 95, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [50.0%] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u1454(6){ }u1455(7){ }u1456(16){ }u1457(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 983 984 985 986
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 983 984 985 986
;; live  kill	 17 [flags]
(code_label 986 978 987 95 100 "" [1 uses])
(note 987 986 988 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 988 987 989 95 (parallel [
            (set (reg:SI 983)
                (plus:SI (reg/v:SI 91 [ low ])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:440 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 91 [ low ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 989 988 990 95 (set (mem:SI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 983)) blake_ref.c:440 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 983)
        (nil)))
(insn 990 989 991 95 (set (reg:SI 985)
        (const_int 440 [0x1b8])) 90 {*movsi_internal}
     (nil))
(insn 991 990 992 95 (parallel [
            (set (reg:SI 984 [ D.6033 ])
                (minus:SI (reg:SI 985)
                    (reg:SI 89 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 985)
        (expr_list:REG_DEAD (reg:SI 89 [ D.6033 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:SI (const_int 440 [0x1b8])
                        (reg:SI 89 [ D.6033 ]))
                    (nil))))))
(insn 992 991 993 95 (set (reg:DI 986 [ D.6036 ])
        (sign_extend:DI (reg:SI 984 [ D.6033 ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 984 [ D.6033 ])
        (nil)))
(insn 993 992 994 95 (set (reg:DI 37 r8)
        (reg:DI 986 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 986 [ D.6036 ])
        (nil)))
(insn 994 993 995 95 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 995 994 996 95 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 996 995 1000 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 96, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU)
;;              53 [50.0%] 
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u1470(6){ }u1471(7){ }u1472(16){ }u1473(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 603 987 988 989
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 241 242 633 634
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 603 987 988 989
;; live  kill	 17 [flags]
(code_label 1000 996 1001 96 124 "" [1 uses])
(note 1001 1000 1002 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1002 1001 1003 96 (set (reg:SI 988)
        (const_int 888 [0x378])) blake_ref.c:563 90 {*movsi_internal}
     (nil))
(insn 1003 1002 1004 96 (parallel [
            (set (reg:SI 987 [ D.6033 ])
                (minus:SI (reg:SI 988)
                    (reg:SI 242 [ D.6033 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:563 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 988)
        (expr_list:REG_DEAD (reg:SI 242 [ D.6033 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (minus:SI (const_int 888 [0x378])
                        (reg:SI 242 [ D.6033 ]))
                    (nil))))))
(insn 1004 1003 1005 96 (set (reg:DI 603 [ D.6036 ])
        (sign_extend:DI (reg:SI 987 [ D.6033 ]))) blake_ref.c:563 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 987 [ D.6033 ])
        (nil)))
(insn 1005 1004 1006 96 (parallel [
            (set (reg:DI 989)
                (minus:DI (reg:DI 241 [ D.6036 ])
                    (reg:DI 603 [ D.6036 ])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:563 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 241 [ D.6036 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1006 1005 1007 96 (set (mem:DI (plus:DI (reg/v/f:DI 633 [ state ])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 989)) blake_ref.c:563 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 989)
        (nil)))
(insn 1007 1006 1008 96 (set (reg:DI 37 r8)
        (reg:DI 603 [ D.6036 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 603 [ D.6036 ])
        (nil)))
(insn 1008 1007 1009 96 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 96 (set (reg:DI 2 cx)
        (reg/v/f:DI 633 [ state ])) 89 {*movdi_internal}
     (nil))
(call_insn 1010 1009 1058 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       61 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 633 634

;; basic block 97, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 96, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 [100.0%]  (FALLTHRU)
;;              45 [62.2%] 
;;              46 [100.0%]  (FALLTHRU)
;;              93 [62.2%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u1487(6){ }u1488(7){ }u1489(16){ }u1490(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1058 1010 1017 97 160 "" [2 uses])
(note 1017 1058 1015 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1015 1017 1016 97 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) blake_ref.c:659 90 {*movsi_internal}
     (nil))
(insn 1016 1015 0 97 (use (reg/i:SI 0 ax)) blake_ref.c:659 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Hash (Hash, funcdef_no=21, decl_uid=3197, cgraph_uid=21, symbol_order=29)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=4
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -368 [0xfffffffffffffe90]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -368 [0xfffffffffffffe90]))
  gid=0 offset=-368 
 processing const base store gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -360 [0xfffffffffffffe98]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -360 [0xfffffffffffffe98]))
  gid=0 offset=-360 
 processing const base store gid=0[-360..-352)
    trying store in insn=22 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -352 [0xfffffffffffffea0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -352 [0xfffffffffffffea0]))
  gid=0 offset=-352 
 processing const base store gid=0[-352..-344)
    trying store in insn=24 gid=0[-360..-352)
    trying store in insn=22 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -344 [0xfffffffffffffea8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -344 [0xfffffffffffffea8]))
  gid=0 offset=-344 
 processing const base store gid=0[-344..-336)
    trying store in insn=26 gid=0[-352..-344)
    trying store in insn=24 gid=0[-360..-352)
    trying store in insn=22 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -368 [0xfffffffffffffe90]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -368 [0xfffffffffffffe90]))
  gid=0 offset=-368 
 processing const base store gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -360 [0xfffffffffffffe98]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -360 [0xfffffffffffffe98]))
  gid=0 offset=-360 
 processing const base store gid=0[-360..-352)
    trying store in insn=35 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -352 [0xfffffffffffffea0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -352 [0xfffffffffffffea0]))
  gid=0 offset=-352 
 processing const base store gid=0[-352..-344)
    trying store in insn=37 gid=0[-360..-352)
    trying store in insn=35 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -344 [0xfffffffffffffea8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -344 [0xfffffffffffffea8]))
  gid=0 offset=-344 
 processing const base store gid=0[-344..-336)
    trying store in insn=39 gid=0[-352..-344)
    trying store in insn=37 gid=0[-360..-352)
    trying store in insn=35 gid=0[-368..-360)
mems_found = 1, cannot_delete = false

**scanning insn=44
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -336 [0xfffffffffffffeb0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -336 [0xfffffffffffffeb0]))
  gid=0 offset=-336 
 processing const base store gid=0[-336..-332)
mems_found = 1, cannot_delete = false

**scanning insn=45
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -332 [0xfffffffffffffeb4]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -332 [0xfffffffffffffeb4]))
  gid=0 offset=-332 
 processing const base store gid=0[-332..-328)
    trying store in insn=44 gid=0[-336..-332)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
  mem: (reg/f:DI 112)

   after canon_rtx address: (reg/f:DI 112)

   after cselib_expand address: (plus:DI (reg/f:DI 20 frame)
    (const_int -328 [0xfffffffffffffeb8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -328 [0xfffffffffffffeb8]))
  gid=0 offset=-328 
 processing const base store gid=0[-328..-264)
    trying store in insn=45 gid=0[-332..-328)
    trying store in insn=44 gid=0[-336..-332)
mems_found = 1, cannot_delete = false

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -264 [0xfffffffffffffef8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -264 [0xfffffffffffffef8]))
  gid=0 offset=-264 
 processing const base store gid=0[-264..-248)
    trying store in insn=52 gid=0[-328..-264)
    trying store in insn=45 gid=0[-332..-328)
    trying store in insn=44 gid=0[-336..-332)
mems_found = 1, cannot_delete = false

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -248 [0xffffffffffffff08]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -248 [0xffffffffffffff08]))
  gid=0 offset=-248 
 processing const base store gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -240 [0xffffffffffffff10]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -240 [0xffffffffffffff10]))
  gid=0 offset=-240 
 processing const base store gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=72
mems_found = 0, cannot_delete = true

**scanning insn=73
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -232 [0xffffffffffffff18]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -232 [0xffffffffffffff18]))
  gid=0 offset=-232 
 processing const base store gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -224 [0xffffffffffffff20]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -224 [0xffffffffffffff20]))
  gid=0 offset=-224 
 processing const base store gid=0[-224..-216)
    trying store in insn=73 gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=77
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -216 [0xffffffffffffff28]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -216 [0xffffffffffffff28]))
  gid=0 offset=-216 
 processing const base store gid=0[-216..-208)
    trying store in insn=75 gid=0[-224..-216)
    trying store in insn=73 gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -208 [0xffffffffffffff30]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -208 [0xffffffffffffff30]))
  gid=0 offset=-208 
 processing const base store gid=0[-208..-200)
    trying store in insn=77 gid=0[-216..-208)
    trying store in insn=75 gid=0[-224..-216)
    trying store in insn=73 gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -200 [0xffffffffffffff38]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -200 [0xffffffffffffff38]))
  gid=0 offset=-200 
 processing const base store gid=0[-200..-192)
    trying store in insn=79 gid=0[-208..-200)
    trying store in insn=77 gid=0[-216..-208)
    trying store in insn=75 gid=0[-224..-216)
    trying store in insn=73 gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -192 [0xffffffffffffff40]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -192 [0xffffffffffffff40]))
  gid=0 offset=-192 
 processing const base store gid=0[-192..-184)
    trying store in insn=81 gid=0[-200..-192)
    trying store in insn=79 gid=0[-208..-200)
    trying store in insn=77 gid=0[-216..-208)
    trying store in insn=75 gid=0[-224..-216)
    trying store in insn=73 gid=0[-232..-224)
    trying store in insn=71 gid=0[-240..-232)
    trying store in insn=69 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -248 [0xffffffffffffff08]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -248 [0xffffffffffffff08]))
  gid=0 offset=-248 
 processing const base store gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -240 [0xffffffffffffff10]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -240 [0xffffffffffffff10]))
  gid=0 offset=-240 
 processing const base store gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -232 [0xffffffffffffff18]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -232 [0xffffffffffffff18]))
  gid=0 offset=-232 
 processing const base store gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -224 [0xffffffffffffff20]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -224 [0xffffffffffffff20]))
  gid=0 offset=-224 
 processing const base store gid=0[-224..-216)
    trying store in insn=94 gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -216 [0xffffffffffffff28]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -216 [0xffffffffffffff28]))
  gid=0 offset=-216 
 processing const base store gid=0[-216..-208)
    trying store in insn=96 gid=0[-224..-216)
    trying store in insn=94 gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -208 [0xffffffffffffff30]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -208 [0xffffffffffffff30]))
  gid=0 offset=-208 
 processing const base store gid=0[-208..-200)
    trying store in insn=98 gid=0[-216..-208)
    trying store in insn=96 gid=0[-224..-216)
    trying store in insn=94 gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -200 [0xffffffffffffff38]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -200 [0xffffffffffffff38]))
  gid=0 offset=-200 
 processing const base store gid=0[-200..-192)
    trying store in insn=100 gid=0[-208..-200)
    trying store in insn=98 gid=0[-216..-208)
    trying store in insn=96 gid=0[-224..-216)
    trying store in insn=94 gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -192 [0xffffffffffffff40]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -192 [0xffffffffffffff40]))
  gid=0 offset=-192 
 processing const base store gid=0[-192..-184)
    trying store in insn=102 gid=0[-200..-192)
    trying store in insn=100 gid=0[-208..-200)
    trying store in insn=98 gid=0[-216..-208)
    trying store in insn=96 gid=0[-224..-216)
    trying store in insn=94 gid=0[-232..-224)
    trying store in insn=92 gid=0[-240..-232)
    trying store in insn=90 gid=0[-248..-240)
mems_found = 1, cannot_delete = false

**scanning insn=107
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -184 [0xffffffffffffff48]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -184 [0xffffffffffffff48]))
  gid=0 offset=-184 
 processing const base store gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=108
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -176 [0xffffffffffffff50]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -176 [0xffffffffffffff50]))
  gid=0 offset=-176 
 processing const base store gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
  mem: (reg/f:DI 139)

   after canon_rtx address: (reg/f:DI 139)

   after cselib_expand address: (plus:DI (reg/f:DI 20 frame)
    (const_int -168 [0xffffffffffffff58]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -168 [0xffffffffffffff58]))
  gid=0 offset=-168 
 processing const base store gid=0[-168..-104)
    trying store in insn=108 gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=116
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -40 [0xffffffffffffffd8]))
  gid=0 offset=-40 
 processing const base store gid=0[-40..-32)
    trying store in insn=115 gid=0[-168..-104)
    trying store in insn=108 gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=117
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -32 [0xffffffffffffffe0]))
  gid=0 offset=-32 
 processing const base store gid=0[-32..-24)
    trying store in insn=116 gid=0[-40..-32)
    trying store in insn=115 gid=0[-168..-104)
    trying store in insn=108 gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=118
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -24 [0xffffffffffffffe8]))
  gid=0 offset=-24 
 processing const base store gid=0[-24..-16)
    trying store in insn=117 gid=0[-32..-24)
    trying store in insn=116 gid=0[-40..-32)
    trying store in insn=115 gid=0[-168..-104)
    trying store in insn=108 gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=119
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -16 [0xfffffffffffffff0]))
  gid=0 offset=-16 
 processing const base store gid=0[-16..-8)
    trying store in insn=118 gid=0[-24..-16)
    trying store in insn=117 gid=0[-32..-24)
    trying store in insn=116 gid=0[-40..-32)
    trying store in insn=115 gid=0[-168..-104)
    trying store in insn=108 gid=0[-176..-168)
    trying store in insn=107 gid=0[-184..-176)
mems_found = 1, cannot_delete = false

**scanning insn=122
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -384 [0xfffffffffffffe80]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -384 [0xfffffffffffffe80]))
  gid=0 offset=-384 
 processing const base store gid=0[-384..-380)
mems_found = 1, cannot_delete = false

**scanning insn=123
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -380 [0xfffffffffffffe84]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -380 [0xfffffffffffffe84]))
  gid=0 offset=-380 
 processing const base store gid=0[-380..-376)
    trying store in insn=122 gid=0[-384..-380)
mems_found = 1, cannot_delete = false

**scanning insn=124
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -376 [0xfffffffffffffe88]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -376 [0xfffffffffffffe88]))
  gid=0 offset=-376 
 processing const base store gid=0[-376..-372)
    trying store in insn=123 gid=0[-380..-376)
    trying store in insn=122 gid=0[-384..-380)
mems_found = 1, cannot_delete = false

**scanning insn=125
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -372 [0xfffffffffffffe8c]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -372 [0xfffffffffffffe8c]))
  gid=0 offset=-372 
 processing const base store gid=0[-372..-368)
    trying store in insn=124 gid=0[-376..-372)
    trying store in insn=123 gid=0[-380..-376)
    trying store in insn=122 gid=0[-384..-380)
mems_found = 1, cannot_delete = false

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
  mem: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)

   after canon_rtx address: (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=141
mems_found = 0, cannot_delete = true

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=148
  mem: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)

   after canon_rtx address: (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
  gid=2 offset=0 
 processing const load gid=2[0..1)

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
  mem: (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>)

   after canon_rtx address: (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>)
  gid=3 offset=0 
 processing const load gid=3[0..1)

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = false
group 0 is frame related group 0(312+0): n 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384 p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 25 count 19 (    1)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 0 )->[2]->( 3 7 )
  in:   297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  
  kill: 
  out:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 2 )->[3]->( 4 5 )
  in:   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  
  kill: 
  out:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 3 )->[4]->( 6 )
  in:   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296
  kill: 
  out:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 3 )->[5]->( 6 )
  in:   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296
  kill: 
  out:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 4 5 )->[6]->( 12 )
  in:   177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264
  kill: 
  out:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 2 )->[7]->( 8 20 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 7 )->[8]->( 9 10 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 8 )->[9]->( 11 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 8 )->[10]->( 11 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 9 10 )->[11]->( 12 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112
  kill: 
  out:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 6 11 )->[12]->( 13 16 )
  in:   297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  kill: 
  out:  

( 12 )->[13]->( 19 15 )
  in:   
  gen:  
  kill: 
  out:  

( 13 )->[15]->( 19 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  out:  

( 12 )->[16]->( 19 18 )
  in:   
  gen:  
  kill: 
  out:  

( 16 )->[18]->( 19 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  out:  

( 15 16 18 13 )->[19]->( 20 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 7 19 )->[20]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312

( 20 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 15
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 14
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 13
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 12
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 5
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 4
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 3
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 2
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 18
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 17
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 28
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -344, index = 272
failing at i = -344
starting to process insn 27
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 26
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -352, index = 280
failing at i = -352
starting to process insn 25
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 24
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -360, index = 288
failing at i = -360
starting to process insn 23
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 22
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -368, index = 296
failing at i = -368
starting to process insn 21
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 41
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -344, index = 272
failing at i = -344
starting to process insn 40
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 39
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -352, index = 280
failing at i = -352
starting to process insn 38
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 37
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -360, index = 288
failing at i = -360
starting to process insn 36
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 35
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -368, index = 296
failing at i = -368
starting to process insn 34
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 54
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -264, index = 192
failing at i = -264
starting to process insn 53
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 52
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -328, index = 256
failing at i = -328
starting to process insn 51
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 50
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 47
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 46
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 45
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -332, index = 260
failing at i = -332
starting to process insn 44
  v:  177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -336, index = 264
failing at i = -336
starting to process insn 62
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 61
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 7
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 60
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 59
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 65
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 64
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 83
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -192, index = 120
failing at i = -192
starting to process insn 82
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 81
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -200, index = 128
failing at i = -200
starting to process insn 80
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 79
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -208, index = 136
failing at i = -208
starting to process insn 78
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 77
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -216, index = 144
failing at i = -216
starting to process insn 76
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 75
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -224, index = 152
failing at i = -224
starting to process insn 74
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 73
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -232, index = 160
failing at i = -232
starting to process insn 72
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 71
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -240, index = 168
failing at i = -240
starting to process insn 70
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 69
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -248, index = 176
failing at i = -248
starting to process insn 68
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 104
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -192, index = 120
failing at i = -192
starting to process insn 103
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 102
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -200, index = 128
failing at i = -200
starting to process insn 101
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 100
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -208, index = 136
failing at i = -208
starting to process insn 99
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 98
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -216, index = 144
failing at i = -216
starting to process insn 97
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 96
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -224, index = 152
failing at i = -224
starting to process insn 95
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 94
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -232, index = 160
failing at i = -232
starting to process insn 93
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 92
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -240, index = 168
failing at i = -240
starting to process insn 91
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 90
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -248, index = 176
failing at i = -248
starting to process insn 89
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 119
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -16, index = 8
failing at i = -16
starting to process insn 118
  v:  1, 2, 3, 4, 5, 6, 7, 8, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -24, index = 16
failing at i = -24
starting to process insn 117
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -32, index = 24
failing at i = -32
starting to process insn 116
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -40, index = 32
failing at i = -40
starting to process insn 115
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -168, index = 96
failing at i = -168
starting to process insn 114
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 113
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 110
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 109
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 108
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -176, index = 104
failing at i = -176
starting to process insn 107
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
i = -184, index = 112
failing at i = -184
starting to process insn 127
  v:  
starting to process insn 126
  v:  
starting to process insn 125
  v:  
starting to process insn 124
  v:  297, 298, 299, 300
i = -376, index = 304
failing at i = -376
starting to process insn 123
  v:  297, 298, 299, 300, 301, 302, 303, 304
i = -380, index = 308
failing at i = -380
starting to process insn 122
  v:  297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308
i = -384, index = 312
failing at i = -384
starting to process insn 130
  v:  
starting to process insn 129
  v:  
starting to process insn 136
  v:  
non-frame wild read
starting to process insn 135
  v:  
starting to process insn 134
  v:  
starting to process insn 133
  v:  
starting to process insn 142
  v:  
starting to process insn 141
  v:  
starting to process insn 148
  v:  
non-frame wild read
starting to process insn 147
  v:  
starting to process insn 146
  v:  
starting to process insn 145
  v:  
starting to process insn 155
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 154
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
non-frame wild read
starting to process insn 153
  v:  
starting to process insn 152
  v:  
starting to process insn 163
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
starting to process insn 162
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


Hash

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={4d,3u} r1={7d,4u} r2={7d,4u} r6={1d,18u} r7={1d,21u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,17u,4e} r17={18d,7u} r18={3d} r19={3d} r20={1d,57u,3e} r21={4d} r22={4d} r23={4d} r24={4d} r25={3d} r26={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={6d,3u} r38={4d,1u} r39={3d} r40={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={2d,1u} r95={1d,6u} r96={1d,2u} r97={1d,4u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r112={1d,2u} r114={1d} r115={1d,1u} r116={2d,2u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,2u} r141={1d} r142={1d,1u} r143={2d,2u} r148={2d,5u} 
;;    total ref usage 463{263d,193u,7e} in 109{106 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 95 96 97 98 99 100
;; live  in  	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 95 96 97 98 99 100
;; live  kill	 17 [flags]
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v:SI 95 [ hashbitlen ])
        (reg:SI 2 cx [ hashbitlen ])) blake_ref.c:662 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ hashbitlen ])
        (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [2 hashbitlen+0 S4 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ data ])
        (reg:DI 1 dx [ data ])) blake_ref.c:662 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 97 [ databitlen ])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:662 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(insn 5 4 6 2 (set (reg/v/f:DI 98 [ hashval ])
        (reg:DI 38 r9 [ hashval ])) blake_ref.c:662 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ hashval ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 24 [0x18])) [4 hashval+0 S8 A64])
            (nil))))
(note 6 5 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 6 13 2 (parallel [
            (set (reg:SI 99 [ D.6062 ])
                (plus:SI (reg/v:SI 95 [ hashbitlen ])
                    (const_int -224 [0xffffffffffffff20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:207 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 100 [ D.6062 ])
                (and:SI (reg:SI 99 [ D.6062 ])
                    (const_int -33 [0xffffffffffffffdf])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:207 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 99 [ D.6062 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.6062 ])
            (const_int 0 [0]))) blake_ref.c:207 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 100 [ D.6062 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) blake_ref.c:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 57)
;;  succ:       3 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 3, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 17 [flags]
;; live  kill	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ hashbitlen ])
            (const_int 224 [0xe0]))) blake_ref.c:210 7 {*cmpsi_1}
     (nil))
(jump_insn 18 17 19 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) blake_ref.c:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 31)
;;  succ:       4 [28.0%]  (FALLTHRU)
;;              5 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 4, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [28.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 102 103 104 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 102 103 104 105
;; live  kill	
(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 19 22 4 (set (reg:DI 102 [ MEM[(char * {ref-all})&IV224] ])
        (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(char * {ref-all})&IV224]+0 S8 A256])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 MEM[(char * {ref-all})&state + 16B]+0 S8 A128])
        (reg:DI 102 [ MEM[(char * {ref-all})&IV224] ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 102 [ MEM[(char * {ref-all})&IV224] ])
        (nil)))
(insn 23 22 24 4 (set (reg:DI 103 [ MEM[(char * {ref-all})&IV224]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV224]+8 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 MEM[(char * {ref-all})&state + 16B]+8 S8 A64])
        (reg:DI 103 [ MEM[(char * {ref-all})&IV224]+8 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 103 [ MEM[(char * {ref-all})&IV224]+8 ])
        (nil)))
(insn 25 24 26 4 (set (reg:DI 104 [ MEM[(char * {ref-all})&IV224]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV224]+16 S8 A128])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 26 25 27 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 MEM[(char * {ref-all})&state + 16B]+16 S8 A128])
        (reg:DI 104 [ MEM[(char * {ref-all})&IV224]+16 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104 [ MEM[(char * {ref-all})&IV224]+16 ])
        (nil)))
(insn 27 26 28 4 (set (reg:DI 105 [ MEM[(char * {ref-all})&IV224]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV224]+24 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (nil))
(insn 28 27 31 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 MEM[(char * {ref-all})&state + 16B]+24 S8 A64])
        (reg:DI 105 [ MEM[(char * {ref-all})&IV224]+24 ])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ MEM[(char * {ref-all})&IV224]+24 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 5, loop depth 0, count 0, freq 111, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 107 108 109 110
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 107 108 109 110
;; live  kill	
(code_label 31 28 32 5 197 "" [1 uses])
(note 32 31 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 35 5 (set (reg:DI 107 [ MEM[(char * {ref-all})&IV256] ])
        (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(char * {ref-all})&IV256]+0 S8 A256])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -368 [0xfffffffffffffe90])) [0 MEM[(char * {ref-all})&state + 16B]+0 S8 A128])
        (reg:DI 107 [ MEM[(char * {ref-all})&IV256] ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107 [ MEM[(char * {ref-all})&IV256] ])
        (nil)))
(insn 36 35 37 5 (set (reg:DI 108 [ MEM[(char * {ref-all})&IV256]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV256]+8 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -360 [0xfffffffffffffe98])) [0 MEM[(char * {ref-all})&state + 16B]+8 S8 A64])
        (reg:DI 108 [ MEM[(char * {ref-all})&IV256]+8 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108 [ MEM[(char * {ref-all})&IV256]+8 ])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 109 [ MEM[(char * {ref-all})&IV256]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV256]+16 S8 A128])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 39 38 40 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -352 [0xfffffffffffffea0])) [0 MEM[(char * {ref-all})&state + 16B]+16 S8 A128])
        (reg:DI 109 [ MEM[(char * {ref-all})&IV256]+16 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109 [ MEM[(char * {ref-all})&IV256]+16 ])
        (nil)))
(insn 40 39 41 5 (set (reg:DI 110 [ MEM[(char * {ref-all})&IV256]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV256]+24 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (nil))
(insn 41 40 42 5 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -344 [0xfffffffffffffea8])) [0 MEM[(char * {ref-all})&state + 16B]+24 S8 A64])
        (reg:DI 110 [ MEM[(char * {ref-all})&IV256]+24 ])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ MEM[(char * {ref-all})&IV256]+24 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 6, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 112 114 115 116 117 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 112 114 115 116 117 148
;; live  kill	 17 [flags]
(code_label 42 41 43 6 198 "" [0 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -336 [0xfffffffffffffeb0])) [2 state.t32+0 S4 A128])
        (const_int 0 [0])) blake_ref.c:215 90 {*movsi_internal}
     (nil))
(insn 45 44 46 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -332 [0xfffffffffffffeb4])) [2 state.t32+4 S4 A32])
        (const_int 0 [0])) blake_ref.c:216 90 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:DI 148)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 50 6 (parallel [
            (set (reg/f:DI 112)
                (plus:DI (reg/f:DI 148)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 47 51 6 (set (reg:DI 115)
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:DI 116)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 116)
                (const_int 0 [0]))
            (set (reg/f:DI 114 [ D.6063 ])
                (plus:DI (ashift:DI (reg:DI 116)
                        (const_int 3 [0x3]))
                    (reg/f:DI 112)))
            (set (mem/c:BLK (reg/f:DI 112) [0 MEM[(void *)&state + 56B]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 115))
            (use (reg:DI 116))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 115)
        (expr_list:REG_DEAD (reg/f:DI 112)
            (expr_list:REG_UNUSED (reg:DI 116)
                (expr_list:REG_UNUSED (reg/f:DI 114 [ D.6063 ])
                    (nil))))))
(insn 53 52 54 6 (set (reg:V4SI 117)
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) blake_ref.c:221 1194 {*movv4si_internal}
     (nil))
(insn 54 53 57 6 (set (mem/c:V16QI (plus:DI (reg/f:DI 20 frame)
                (const_int -264 [0xfffffffffffffef8])) [2 MEM[(unsigned int *)&state + 120B]+0 S16 A64])
        (unspec:V16QI [
                (subreg:V16QI (reg:V4SI 117) 0)
            ] UNSPEC_STOREU)) blake_ref.c:221 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V4SI 117)
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148

;; basic block 7, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 17 [flags] 87 118 119
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 17 [flags] 87 118 119
;; live  kill	 17 [flags]
(code_label 57 54 58 7 196 "" [1 uses])
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 7 (parallel [
            (set (reg:SI 118 [ D.6062 ])
                (plus:SI (reg/v:SI 95 [ hashbitlen ])
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:227 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 7 7 (parallel [
            (set (reg:SI 119 [ D.6062 ])
                (and:SI (reg:SI 118 [ D.6062 ])
                    (const_int -129 [0xffffffffffffff7f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:227 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 118 [ D.6062 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 7 60 61 7 (set (reg:SI 87 [ D.6061 ])
        (const_int 2 [0x2])) blake_ref.c:249 90 {*movsi_internal}
     (nil))
(insn 61 7 62 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ D.6062 ])
            (const_int 0 [0]))) blake_ref.c:227 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 119 [ D.6062 ])
        (nil)))
(jump_insn 62 61 63 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) blake_ref.c:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 156)
;;  succ:       8 [33.0%]  (FALLTHRU)
;;              20 [67.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95 96 97 98

;; basic block 8, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [33.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 17 [flags]
;; live  kill	
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 95 [ hashbitlen ])
            (const_int 384 [0x180]))) blake_ref.c:230 7 {*cmpsi_1}
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) blake_ref.c:230 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 86)
;;  succ:       9 [28.0%]  (FALLTHRU)
;;              10 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 9, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [28.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(6){ }u87(7){ }u88(16){ }u89(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 121 122 123 124 125 126 127 128
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 121 122 123 124 125 126 127 128
;; live  kill	
(note 66 65 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 66 69 9 (set (reg:DI 121 [ MEM[(char * {ref-all})&IV384] ])
        (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(char * {ref-all})&IV384]+0 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 69 68 70 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -248 [0xffffffffffffff08])) [0 MEM[(char * {ref-all})&state + 136B]+0 S8 A64])
        (reg:DI 121 [ MEM[(char * {ref-all})&IV384] ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 121 [ MEM[(char * {ref-all})&IV384] ])
        (nil)))
(insn 70 69 71 9 (set (reg:DI 122 [ MEM[(char * {ref-all})&IV384]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV384]+8 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 71 70 72 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(char * {ref-all})&state + 136B]+8 S8 A64])
        (reg:DI 122 [ MEM[(char * {ref-all})&IV384]+8 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 122 [ MEM[(char * {ref-all})&IV384]+8 ])
        (nil)))
(insn 72 71 73 9 (set (reg:DI 123 [ MEM[(char * {ref-all})&IV384]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV384]+16 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 73 72 74 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 MEM[(char * {ref-all})&state + 136B]+16 S8 A64])
        (reg:DI 123 [ MEM[(char * {ref-all})&IV384]+16 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123 [ MEM[(char * {ref-all})&IV384]+16 ])
        (nil)))
(insn 74 73 75 9 (set (reg:DI 124 [ MEM[(char * {ref-all})&IV384]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV384]+24 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 75 74 76 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(char * {ref-all})&state + 136B]+24 S8 A64])
        (reg:DI 124 [ MEM[(char * {ref-all})&IV384]+24 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124 [ MEM[(char * {ref-all})&IV384]+24 ])
        (nil)))
(insn 76 75 77 9 (set (reg:DI 125 [ MEM[(char * {ref-all})&IV384]+32 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV384]+32 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 77 76 78 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -216 [0xffffffffffffff28])) [0 MEM[(char * {ref-all})&state + 136B]+32 S8 A64])
        (reg:DI 125 [ MEM[(char * {ref-all})&IV384]+32 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125 [ MEM[(char * {ref-all})&IV384]+32 ])
        (nil)))
(insn 78 77 79 9 (set (reg:DI 126 [ MEM[(char * {ref-all})&IV384]+40 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV384]+40 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(char * {ref-all})&state + 136B]+40 S8 A64])
        (reg:DI 126 [ MEM[(char * {ref-all})&IV384]+40 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126 [ MEM[(char * {ref-all})&IV384]+40 ])
        (nil)))
(insn 80 79 81 9 (set (reg:DI 127 [ MEM[(char * {ref-all})&IV384]+48 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV384]+48 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 81 80 82 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 MEM[(char * {ref-all})&state + 136B]+48 S8 A64])
        (reg:DI 127 [ MEM[(char * {ref-all})&IV384]+48 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ MEM[(char * {ref-all})&IV384]+48 ])
        (nil)))
(insn 82 81 83 9 (set (reg:DI 128 [ MEM[(char * {ref-all})&IV384]+56 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV384]+56 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (nil))
(insn 83 82 86 9 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(char * {ref-all})&state + 136B]+56 S8 A64])
        (reg:DI 128 [ MEM[(char * {ref-all})&IV384]+56 ])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 128 [ MEM[(char * {ref-all})&IV384]+56 ])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 10, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u114(6){ }u115(7){ }u116(16){ }u117(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 130 131 132 133 134 135 136 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 130 131 132 133 134 135 136 137
;; live  kill	
(code_label 86 83 87 10 201 "" [1 uses])
(note 87 86 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 10 (set (reg:DI 130 [ MEM[(char * {ref-all})&IV512] ])
        (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(char * {ref-all})&IV512]+0 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 90 89 91 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -248 [0xffffffffffffff08])) [0 MEM[(char * {ref-all})&state + 136B]+0 S8 A64])
        (reg:DI 130 [ MEM[(char * {ref-all})&IV512] ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130 [ MEM[(char * {ref-all})&IV512] ])
        (nil)))
(insn 91 90 92 10 (set (reg:DI 131 [ MEM[(char * {ref-all})&IV512]+8 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV512]+8 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 92 91 93 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -240 [0xffffffffffffff10])) [0 MEM[(char * {ref-all})&state + 136B]+8 S8 A64])
        (reg:DI 131 [ MEM[(char * {ref-all})&IV512]+8 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 131 [ MEM[(char * {ref-all})&IV512]+8 ])
        (nil)))
(insn 93 92 94 10 (set (reg:DI 132 [ MEM[(char * {ref-all})&IV512]+16 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV512]+16 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 94 93 95 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -232 [0xffffffffffffff18])) [0 MEM[(char * {ref-all})&state + 136B]+16 S8 A64])
        (reg:DI 132 [ MEM[(char * {ref-all})&IV512]+16 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 132 [ MEM[(char * {ref-all})&IV512]+16 ])
        (nil)))
(insn 95 94 96 10 (set (reg:DI 133 [ MEM[(char * {ref-all})&IV512]+24 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV512]+24 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 96 95 97 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -224 [0xffffffffffffff20])) [0 MEM[(char * {ref-all})&state + 136B]+24 S8 A64])
        (reg:DI 133 [ MEM[(char * {ref-all})&IV512]+24 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133 [ MEM[(char * {ref-all})&IV512]+24 ])
        (nil)))
(insn 97 96 98 10 (set (reg:DI 134 [ MEM[(char * {ref-all})&IV512]+32 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV512]+32 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 98 97 99 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -216 [0xffffffffffffff28])) [0 MEM[(char * {ref-all})&state + 136B]+32 S8 A64])
        (reg:DI 134 [ MEM[(char * {ref-all})&IV512]+32 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134 [ MEM[(char * {ref-all})&IV512]+32 ])
        (nil)))
(insn 99 98 100 10 (set (reg:DI 135 [ MEM[(char * {ref-all})&IV512]+40 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV512]+40 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 100 99 101 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -208 [0xffffffffffffff30])) [0 MEM[(char * {ref-all})&state + 136B]+40 S8 A64])
        (reg:DI 135 [ MEM[(char * {ref-all})&IV512]+40 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 135 [ MEM[(char * {ref-all})&IV512]+40 ])
        (nil)))
(insn 101 100 102 10 (set (reg:DI 136 [ MEM[(char * {ref-all})&IV512]+48 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV512]+48 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -200 [0xffffffffffffff38])) [0 MEM[(char * {ref-all})&state + 136B]+48 S8 A64])
        (reg:DI 136 [ MEM[(char * {ref-all})&IV512]+48 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136 [ MEM[(char * {ref-all})&IV512]+48 ])
        (nil)))
(insn 103 102 104 10 (set (reg:DI 137 [ MEM[(char * {ref-all})&IV512]+56 ])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV512]+56 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (nil))
(insn 104 103 105 10 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -192 [0xffffffffffffff40])) [0 MEM[(char * {ref-all})&state + 136B]+56 S8 A64])
        (reg:DI 137 [ MEM[(char * {ref-all})&IV512]+56 ])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 137 [ MEM[(char * {ref-all})&IV512]+56 ])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98

;; basic block 11, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 139 141 142 143 148
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98
;; live  gen 	 139 141 142 143 148
;; live  kill	 17 [flags]
(code_label 105 104 106 11 202 "" [0 uses])
(note 106 105 107 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -184 [0xffffffffffffff48])) [3 state.t64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:235 89 {*movdi_internal}
     (nil))
(insn 108 107 109 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [3 state.t64+8 S8 A128])
        (const_int 0 [0])) blake_ref.c:236 89 {*movdi_internal}
     (nil))
(insn 109 108 110 11 (parallel [
            (set (reg/f:DI 148)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -384 [0xfffffffffffffe80])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 113 11 (parallel [
            (set (reg/f:DI 139)
                (plus:DI (reg/f:DI 148)
                    (const_int 216 [0xd8])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 113 110 114 11 (set (reg:DI 142)
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 114 113 115 11 (set (reg:DI 143)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 115 114 116 11 (parallel [
            (set (reg:DI 143)
                (const_int 0 [0]))
            (set (reg/f:DI 141 [ D.6064 ])
                (plus:DI (ashift:DI (reg:DI 143)
                        (const_int 3 [0x3]))
                    (reg/f:DI 139)))
            (set (mem/c:BLK (reg/f:DI 139) [0 MEM[(void *)&state + 216B]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 142))
            (use (reg:DI 143))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_DEAD (reg/f:DI 139)
            (expr_list:REG_UNUSED (reg:DI 143)
                (expr_list:REG_UNUSED (reg/f:DI 141 [ D.6064 ])
                    (nil))))))
(insn 116 115 117 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 state.salt64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:241 89 {*movdi_internal}
     (nil))
(insn 117 116 118 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 state.salt64+8 S8 A128])
        (const_int 0 [0])) blake_ref.c:242 89 {*movdi_internal}
     (nil))
(insn 118 117 119 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 state.salt64+16 S8 A64])
        (const_int 0 [0])) blake_ref.c:243 89 {*movdi_internal}
     (nil))
(insn 119 118 120 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 state.salt64+24 S8 A128])
        (const_int 0 [0])) blake_ref.c:244 89 {*movdi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148

;; basic block 12, loop depth 0, count 0, freq 205, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96 97 98 148
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 120 119 121 12 199 "" [0 uses])
(note 121 120 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80])) [2 state.hashbitlen+0 S4 A128])
        (reg/v:SI 95 [ hashbitlen ])) blake_ref.c:251 90 {*movsi_internal}
     (nil))
(insn 123 122 124 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -380 [0xfffffffffffffe84])) [2 state.datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:252 90 {*movsi_internal}
     (nil))
(insn 124 123 125 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -376 [0xfffffffffffffe88])) [2 state.init+0 S4 A64])
        (const_int 1 [0x1])) blake_ref.c:253 90 {*movsi_internal}
     (nil))
(insn 125 124 126 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -372 [0xfffffffffffffe8c])) [2 state.nullt+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:254 90 {*movsi_internal}
     (nil))
(insn 126 125 127 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 95 [ hashbitlen ])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 95 [ hashbitlen ])
        (nil)))
(jump_insn 127 126 128 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 139)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              16 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148

;; basic block 13, loop depth 0, count 0, freq 60, maybe hot
;;  prev block 12, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  gen 	 17 [flags]
;; live  kill	
(note 128 127 129 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 130 129 131 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7929 (nil)))
 -> 149)
;;  succ:       19 [79.3%] 
;;              15 [20.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148

;; basic block 15, loop depth 0, count 0, freq 26, maybe hot
;;  prev block 13, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [20.7%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 148
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 131 130 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 131 134 15 (set (reg:DI 37 r8)
        (reg/v:DI 97 [ databitlen ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ databitlen ])
        (nil)))
(insn 134 133 135 15 (set (reg:DI 1 dx)
        (reg/v/f:DI 96 [ data ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ data ])
        (nil)))
(insn 135 134 136 15 (set (reg:DI 2 cx)
        (reg/f:DI 148)) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -384 [0xfffffffffffffe80]))
        (nil)))
(call_insn 136 135 139 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148

;; basic block 16, loop depth 0, count 0, freq 60, maybe hot
;;  prev block 15, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u191(6){ }u192(7){ }u193(16){ }u194(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 139 136 140 16 203 "" [1 uses])
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ databitlen ])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 142 141 143 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 149)
;;  succ:       19 [71.0%] 
;;              18 [29.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148

;; basic block 18, loop depth 0, count 0, freq 34, maybe hot
;;  prev block 16, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [29.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 148
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 98 148
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 143 142 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 143 146 18 (set (reg:DI 37 r8)
        (reg/v:DI 97 [ databitlen ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ databitlen ])
        (nil)))
(insn 146 145 147 18 (set (reg:DI 1 dx)
        (reg/v/f:DI 96 [ data ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ data ])
        (nil)))
(insn 147 146 148 18 (set (reg:DI 2 cx)
        (reg/f:DI 148)) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -384 [0xfffffffffffffe80]))
        (nil)))
(call_insn 148 147 149 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148

;; basic block 19, loop depth 0, count 0, freq 120, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              16 [71.0%] 
;;              18 [100.0%]  (FALLTHRU)
;;              13 [79.3%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u210(6){ }u211(7){ }u212(16){ }u213(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 148
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 87
;; live  kill	
(code_label 149 148 150 19 204 "" [2 uses])
(note 150 149 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 152 150 153 19 (set (reg:DI 1 dx)
        (reg/v/f:DI 98 [ hashval ])) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ hashval ])
        (nil)))
(insn 153 152 154 19 (set (reg:DI 2 cx)
        (reg/f:DI 148)) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80]))
            (nil))))
(call_insn 154 153 155 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>) [0 Final S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:673 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 155 154 156 19 (set (reg:SI 87 [ D.6061 ])
        (reg:SI 0 ax)) blake_ref.c:673 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 20, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 19, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [67.0%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u227(6){ }u228(7){ }u229(16){ }u230(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 156 155 157 20 200 "" [1 uses])
(note 157 156 162 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 162 157 163 20 (set (reg/i:SI 0 ax)
        (reg:SI 87 [ D.6061 ])) blake_ref.c:677 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ D.6061 ])
        (nil)))
(insn 163 162 0 20 (use (reg/i:SI 0 ax)) blake_ref.c:677 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

