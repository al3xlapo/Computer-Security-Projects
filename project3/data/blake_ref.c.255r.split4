
;; Function compress32 (compress32, funcdef_no=11, decl_uid=3211, cgraph_uid=11, symbol_order=19)



compress32

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={80d,100u} r1={21d,41u,31e} r2={14d,48u} r3={27d,34u} r4={4d,19u} r5={13d,18u} r6={15d,17u} r7={19d,243u} r16={1e} r17={134d,2u} r21={15d,14u} r22={16d,15u} r23={7d,6u} r24={7d,7u} r25={8d,8u} r26={8d,8u} r37={17d,22u} r38={13d,18u} r39={19d,23u} r40={16d,21u} r41={14d,17u} r42={18d,30u} r43={10d,15u} r44={31d,45u} 
;;    total ref usage 1329{526d,771u,32e} in 496{496 regular + 0 call} insns.
(note 27 0 60 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 667, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; live  kill	 17 [flags]
(note 60 27 832 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 832 60 833 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 833 832 834 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 834 833 835 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 835 834 836 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 836 835 837 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 837 836 838 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 838 837 839 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 4 si)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si)
        (nil)))
(insn/f 839 838 840 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:9 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 840 839 841 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:9 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -280 [0xfffffffffffffee8])))
            (nil))))
(insn 841 840 842 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:9 679 {prologue_use}
     (nil))
(note 842 841 28 2 NOTE_INSN_PROLOGUE_END)
(insn 28 842 30 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [4 state+0 S8 A64])
        (reg:DI 2 cx [ state ])) blake_ref.c:9 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
        (nil)))
(note 30 28 62 2 NOTE_INSN_FUNCTION_BEG)
(insn 62 30 63 2 (set (reg:SI 40 r11 [orig:358 MEM[(const BitSequence *)datablock_5(D)] ] [358])
        (mem:SI (reg/v/f:DI 1 dx [orig:357 datablock ] [357]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 1 dx [orig:357 datablock ] [357]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8])
        (nil)))
(insn 63 62 64 2 (set (reg:SI 40 r11 [orig:293 D.5786 ] [293])
        (bswap:SI (reg:SI 40 r11 [orig:358 MEM[(const BitSequence *)datablock_5(D)] ] [358]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (reg/v/f:DI 1 dx [orig:357 datablock ] [357]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S4 A8]))
        (nil)))
(insn 64 63 65 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [2 m+0 S4 A128])
        (reg:SI 40 r11 [orig:293 D.5786 ] [293])) blake_ref.c:32 90 {*movsi_internal}
     (nil))
(insn 65 64 448 2 (set (reg:SI 6 bp [orig:359 MEM[(const BitSequence *)datablock_5(D) + 4B] ] [359])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8])
        (nil)))
(insn 448 65 66 2 (set (reg:SI 5 di [orig:297 D.5786 ] [297])
        (reg:SI 6 bp [orig:359 MEM[(const BitSequence *)datablock_5(D) + 4B] ] [359])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:359 MEM[(const BitSequence *)datablock_5(D) + 4B] ] [359])
        (nil)))
(insn 66 448 67 2 (set (reg:SI 5 di [orig:297 D.5786 ] [297])
        (bswap:SI (reg:SI 5 di [orig:297 D.5786 ] [297]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 4 [0x4])) [0 MEM[(const BitSequence *)datablock_5(D) + 4B]+0 S4 A8]))
        (nil)))
(insn 67 66 68 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 212 [0xd4])) [2 m+4 S4 A32])
        (reg:SI 5 di [orig:297 D.5786 ] [297])) blake_ref.c:33 90 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SI 38 r9 [orig:360 MEM[(const BitSequence *)datablock_5(D) + 8B] ] [360])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8])
        (nil)))
(insn 69 68 757 2 (set (reg:SI 38 r9 [orig:301 D.5786 ] [301])
        (bswap:SI (reg:SI 38 r9 [orig:301 D.5786 ] [301]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S4 A8]))
        (nil)))
(insn 757 69 70 2 (set (reg:SI 39 r10 [orig:301 D.5786 ] [301])
        (reg:SI 38 r9 [orig:301 D.5786 ] [301])) 90 {*movsi_internal}
     (nil))
(insn 70 757 71 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [2 m+8 S4 A64])
        (reg:SI 38 r9 [orig:301 D.5786 ] [301])) blake_ref.c:34 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:301 D.5786 ] [301])
        (nil)))
(insn 71 70 72 2 (set (reg:SI 0 ax [orig:361 MEM[(const BitSequence *)datablock_5(D) + 12B] ] [361])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8])
        (nil)))
(insn 72 71 756 2 (set (reg:SI 0 ax [orig:305 D.5786 ] [305])
        (bswap:SI (reg:SI 0 ax [orig:305 D.5786 ] [305]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 12 [0xc])) [0 MEM[(const BitSequence *)datablock_5(D) + 12B]+0 S4 A8]))
        (nil)))
(insn 756 72 73 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 100 [0x64])) [6 %sfp+-172 S4 A32])
        (reg:SI 0 ax [orig:305 D.5786 ] [305])) 90 {*movsi_internal}
     (nil))
(insn 73 756 74 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 220 [0xdc])) [2 m+12 S4 A32])
        (reg:SI 0 ax [orig:305 D.5786 ] [305])) blake_ref.c:35 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:305 D.5786 ] [305])
        (nil)))
(insn 74 73 75 2 (set (reg:SI 0 ax [orig:362 MEM[(const BitSequence *)datablock_5(D) + 16B] ] [362])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8])
        (nil)))
(insn 75 74 755 2 (set (reg:SI 0 ax [orig:309 D.5786 ] [309])
        (bswap:SI (reg:SI 0 ax [orig:309 D.5786 ] [309]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S4 A8]))
        (nil)))
(insn 755 75 76 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [6 %sfp+-168 S4 A32])
        (reg:SI 0 ax [orig:309 D.5786 ] [309])) 90 {*movsi_internal}
     (nil))
(insn 76 755 77 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [2 m+16 S4 A128])
        (reg:SI 0 ax [orig:309 D.5786 ] [309])) blake_ref.c:36 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:309 D.5786 ] [309])
        (nil)))
(insn 77 76 78 2 (set (reg:SI 0 ax [orig:363 MEM[(const BitSequence *)datablock_5(D) + 20B] ] [363])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8])
        (nil)))
(insn 78 77 754 2 (set (reg:SI 0 ax [orig:313 D.5786 ] [313])
        (bswap:SI (reg:SI 0 ax [orig:313 D.5786 ] [313]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 20 [0x14])) [0 MEM[(const BitSequence *)datablock_5(D) + 20B]+0 S4 A8]))
        (nil)))
(insn 754 78 79 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 108 [0x6c])) [6 %sfp+-164 S4 A32])
        (reg:SI 0 ax [orig:313 D.5786 ] [313])) 90 {*movsi_internal}
     (nil))
(insn 79 754 80 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 228 [0xe4])) [2 m+20 S4 A32])
        (reg:SI 0 ax [orig:313 D.5786 ] [313])) blake_ref.c:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:313 D.5786 ] [313])
        (nil)))
(insn 80 79 81 2 (set (reg:SI 3 bx [orig:364 MEM[(const BitSequence *)datablock_5(D) + 24B] ] [364])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8])
        (nil)))
(insn 81 80 753 2 (set (reg:SI 3 bx [orig:317 D.5786 ] [317])
        (bswap:SI (reg:SI 3 bx [orig:317 D.5786 ] [317]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S4 A8]))
        (nil)))
(insn 753 81 82 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [6 %sfp+-160 S4 A32])
        (reg:SI 3 bx [orig:317 D.5786 ] [317])) 90 {*movsi_internal}
     (nil))
(insn 82 753 83 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [2 m+24 S4 A64])
        (reg:SI 3 bx [orig:317 D.5786 ] [317])) blake_ref.c:38 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:317 D.5786 ] [317])
        (nil)))
(insn 83 82 84 2 (set (reg:SI 3 bx [orig:365 MEM[(const BitSequence *)datablock_5(D) + 28B] ] [365])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8])
        (nil)))
(insn 84 83 752 2 (set (reg:SI 3 bx [orig:321 D.5786 ] [321])
        (bswap:SI (reg:SI 3 bx [orig:321 D.5786 ] [321]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 28 [0x1c])) [0 MEM[(const BitSequence *)datablock_5(D) + 28B]+0 S4 A8]))
        (nil)))
(insn 752 84 85 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 116 [0x74])) [6 %sfp+-156 S4 A32])
        (reg:SI 3 bx [orig:321 D.5786 ] [321])) 90 {*movsi_internal}
     (nil))
(insn 85 752 86 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 236 [0xec])) [2 m+28 S4 A32])
        (reg:SI 3 bx [orig:321 D.5786 ] [321])) blake_ref.c:39 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:321 D.5786 ] [321])
        (nil)))
(insn 86 85 87 2 (set (reg:SI 0 ax [orig:366 MEM[(const BitSequence *)datablock_5(D) + 32B] ] [366])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8])
        (nil)))
(insn 87 86 751 2 (set (reg:SI 0 ax [orig:325 D.5786 ] [325])
        (bswap:SI (reg:SI 0 ax [orig:325 D.5786 ] [325]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S4 A8]))
        (nil)))
(insn 751 87 88 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [6 %sfp+-152 S4 A32])
        (reg:SI 0 ax [orig:325 D.5786 ] [325])) 90 {*movsi_internal}
     (nil))
(insn 88 751 89 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [2 m+32 S4 A128])
        (reg:SI 0 ax [orig:325 D.5786 ] [325])) blake_ref.c:40 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:325 D.5786 ] [325])
        (nil)))
(insn 89 88 90 2 (set (reg:SI 0 ax [orig:367 MEM[(const BitSequence *)datablock_5(D) + 36B] ] [367])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8])
        (nil)))
(insn 90 89 750 2 (set (reg:SI 0 ax [orig:329 D.5786 ] [329])
        (bswap:SI (reg:SI 0 ax [orig:329 D.5786 ] [329]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 36 [0x24])) [0 MEM[(const BitSequence *)datablock_5(D) + 36B]+0 S4 A8]))
        (nil)))
(insn 750 90 91 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 124 [0x7c])) [6 %sfp+-148 S4 A32])
        (reg:SI 0 ax [orig:329 D.5786 ] [329])) 90 {*movsi_internal}
     (nil))
(insn 91 750 92 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 244 [0xf4])) [2 m+36 S4 A32])
        (reg:SI 0 ax [orig:329 D.5786 ] [329])) blake_ref.c:41 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:329 D.5786 ] [329])
        (nil)))
(insn 92 91 93 2 (set (reg:SI 0 ax [orig:368 MEM[(const BitSequence *)datablock_5(D) + 40B] ] [368])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8])
        (nil)))
(insn 93 92 749 2 (set (reg:SI 0 ax [orig:333 D.5786 ] [333])
        (bswap:SI (reg:SI 0 ax [orig:333 D.5786 ] [333]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S4 A8]))
        (nil)))
(insn 749 93 94 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [6 %sfp+-144 S4 A32])
        (reg:SI 0 ax [orig:333 D.5786 ] [333])) 90 {*movsi_internal}
     (nil))
(insn 94 749 95 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [2 m+40 S4 A64])
        (reg:SI 0 ax [orig:333 D.5786 ] [333])) blake_ref.c:42 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:333 D.5786 ] [333])
        (nil)))
(insn 95 94 96 2 (set (reg:SI 0 ax [orig:369 MEM[(const BitSequence *)datablock_5(D) + 44B] ] [369])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8])
        (nil)))
(insn 96 95 748 2 (set (reg:SI 0 ax [orig:337 D.5786 ] [337])
        (bswap:SI (reg:SI 0 ax [orig:337 D.5786 ] [337]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 44 [0x2c])) [0 MEM[(const BitSequence *)datablock_5(D) + 44B]+0 S4 A8]))
        (nil)))
(insn 748 96 97 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 132 [0x84])) [6 %sfp+-140 S4 A32])
        (reg:SI 0 ax [orig:337 D.5786 ] [337])) 90 {*movsi_internal}
     (nil))
(insn 97 748 98 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 252 [0xfc])) [2 m+44 S4 A32])
        (reg:SI 0 ax [orig:337 D.5786 ] [337])) blake_ref.c:43 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:337 D.5786 ] [337])
        (nil)))
(insn 98 97 99 2 (set (reg:SI 42 r13 [orig:370 MEM[(const BitSequence *)datablock_5(D) + 48B] ] [370])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8])
        (nil)))
(insn 99 98 747 2 (set (reg:SI 42 r13 [orig:341 D.5786 ] [341])
        (bswap:SI (reg:SI 42 r13 [orig:341 D.5786 ] [341]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S4 A8]))
        (nil)))
(insn 747 99 100 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [6 %sfp+-136 S4 A32])
        (reg:SI 42 r13 [orig:341 D.5786 ] [341])) 90 {*movsi_internal}
     (nil))
(insn 100 747 101 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [2 m+48 S4 A128])
        (reg:SI 42 r13 [orig:341 D.5786 ] [341])) blake_ref.c:44 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:341 D.5786 ] [341])
        (nil)))
(insn 101 100 102 2 (set (reg:SI 42 r13 [orig:371 MEM[(const BitSequence *)datablock_5(D) + 52B] ] [371])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8])
        (nil)))
(insn 102 101 746 2 (set (reg:SI 42 r13 [orig:345 D.5786 ] [345])
        (bswap:SI (reg:SI 42 r13 [orig:345 D.5786 ] [345]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 52 [0x34])) [0 MEM[(const BitSequence *)datablock_5(D) + 52B]+0 S4 A8]))
        (nil)))
(insn 746 102 103 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 140 [0x8c])) [6 %sfp+-132 S4 A32])
        (reg:SI 42 r13 [orig:345 D.5786 ] [345])) 90 {*movsi_internal}
     (nil))
(insn 103 746 104 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 260 [0x104])) [2 m+52 S4 A32])
        (reg:SI 42 r13 [orig:345 D.5786 ] [345])) blake_ref.c:45 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:345 D.5786 ] [345])
        (nil)))
(insn 104 103 105 2 (set (reg:SI 44 r15 [orig:372 MEM[(const BitSequence *)datablock_5(D) + 56B] ] [372])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8])
        (nil)))
(insn 105 104 745 2 (set (reg:SI 44 r15 [orig:349 D.5786 ] [349])
        (bswap:SI (reg:SI 44 r15 [orig:349 D.5786 ] [349]))) 765 {*bswapsi2}
     (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                    (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S4 A8]))
        (nil)))
(insn 745 105 106 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 %sfp+-128 S4 A32])
        (reg:SI 44 r15 [orig:349 D.5786 ] [349])) 90 {*movsi_internal}
     (nil))
(insn 106 745 107 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [2 m+56 S4 A64])
        (reg:SI 44 r15 [orig:349 D.5786 ] [349])) blake_ref.c:46 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:349 D.5786 ] [349])
        (nil)))
(insn 107 106 108 2 (set (reg:SI 44 r15 [orig:373 MEM[(const BitSequence *)datablock_5(D) + 60B] ] [373])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
                (const_int 60 [0x3c])) [0 MEM[(const BitSequence *)datablock_5(D) + 60B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:357 datablock ] [357])
        (nil)))
(insn 108 107 744 2 (set (reg:SI 44 r15 [orig:353 D.5786 ] [353])
        (bswap:SI (reg:SI 44 r15 [orig:353 D.5786 ] [353]))) 765 {*bswapsi2}
     (nil))
(insn 744 108 109 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 148 [0x94])) [6 %sfp+-124 S4 A32])
        (reg:SI 44 r15 [orig:353 D.5786 ] [353])) 90 {*movsi_internal}
     (nil))
(insn 109 744 110 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 268 [0x10c])) [2 m+60 S4 A32])
        (reg:SI 44 r15 [orig:353 D.5786 ] [353])) blake_ref.c:47 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:353 D.5786 ] [353])
        (nil)))
(insn 110 109 493 2 (set (reg:SI 0 ax [orig:128 v$0 ] [128])
        (mem:SI (plus:DI (reg:DI 2 cx [561])
                (const_int 16 [0x10])) [2 state_246(D)->h32+0 S4 A64])) blake_ref.c:50 90 {*movsi_internal}
     (nil))
(insn 493 110 111 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 %sfp+-112 S4 A32])
        (reg:SI 0 ax [orig:128 v$0 ] [128])) blake_ref.c:50 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:128 v$0 ] [128])
        (nil)))
(insn 111 493 495 2 (set (reg:SI 0 ax [orig:129 v$1 ] [129])
        (mem:SI (plus:DI (reg:DI 2 cx [563])
                (const_int 20 [0x14])) [2 state_246(D)->h32+4 S4 A32])) blake_ref.c:51 90 {*movsi_internal}
     (nil))
(insn 495 111 112 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 164 [0xa4])) [6 %sfp+-108 S4 A32])
        (reg:SI 0 ax [orig:129 v$1 ] [129])) blake_ref.c:51 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:129 v$1 ] [129])
        (nil)))
(insn 112 495 497 2 (set (reg:SI 0 ax [orig:130 v$2 ] [130])
        (mem:SI (plus:DI (reg:DI 2 cx [565])
                (const_int 24 [0x18])) [2 state_246(D)->h32+8 S4 A64])) blake_ref.c:52 90 {*movsi_internal}
     (nil))
(insn 497 112 113 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 %sfp+-104 S4 A32])
        (reg:SI 0 ax [orig:130 v$2 ] [130])) blake_ref.c:52 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:130 v$2 ] [130])
        (nil)))
(insn 113 497 499 2 (set (reg:SI 0 ax [orig:131 v$3 ] [131])
        (mem:SI (plus:DI (reg:DI 2 cx [567])
                (const_int 28 [0x1c])) [2 state_246(D)->h32+12 S4 A32])) blake_ref.c:53 90 {*movsi_internal}
     (nil))
(insn 499 113 114 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 172 [0xac])) [6 %sfp+-100 S4 A32])
        (reg:SI 0 ax [orig:131 v$3 ] [131])) blake_ref.c:53 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:131 v$3 ] [131])
        (nil)))
(insn 114 499 501 2 (set (reg:SI 0 ax [orig:132 v$4 ] [132])
        (mem:SI (plus:DI (reg:DI 2 cx [569])
                (const_int 32 [0x20])) [2 state_246(D)->h32+16 S4 A64])) blake_ref.c:54 90 {*movsi_internal}
     (nil))
(insn 501 114 115 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-96 S4 A32])
        (reg:SI 0 ax [orig:132 v$4 ] [132])) blake_ref.c:54 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:132 v$4 ] [132])
        (nil)))
(insn 115 501 503 2 (set (reg:SI 0 ax [orig:133 v$5 ] [133])
        (mem:SI (plus:DI (reg:DI 2 cx [571])
                (const_int 36 [0x24])) [2 state_246(D)->h32+20 S4 A32])) blake_ref.c:55 90 {*movsi_internal}
     (nil))
(insn 503 115 116 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 180 [0xb4])) [6 %sfp+-92 S4 A32])
        (reg:SI 0 ax [orig:133 v$5 ] [133])) blake_ref.c:55 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:133 v$5 ] [133])
        (nil)))
(insn 116 503 505 2 (set (reg:SI 0 ax [orig:134 v$6 ] [134])
        (mem:SI (plus:DI (reg:DI 2 cx [573])
                (const_int 40 [0x28])) [2 state_246(D)->h32+24 S4 A64])) blake_ref.c:56 90 {*movsi_internal}
     (nil))
(insn 505 116 117 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 %sfp+-88 S4 A32])
        (reg:SI 0 ax [orig:134 v$6 ] [134])) blake_ref.c:56 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:134 v$6 ] [134])
        (nil)))
(insn 117 505 507 2 (set (reg:SI 0 ax [orig:135 v$7 ] [135])
        (mem:SI (plus:DI (reg:DI 2 cx [575])
                (const_int 44 [0x2c])) [2 state_246(D)->h32+28 S4 A32])) blake_ref.c:57 90 {*movsi_internal}
     (nil))
(insn 507 117 118 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 188 [0xbc])) [6 %sfp+-84 S4 A32])
        (reg:SI 0 ax [orig:135 v$7 ] [135])) blake_ref.c:57 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 v$7 ] [135])
        (nil)))
(insn 118 507 743 2 (set (reg:SI 0 ax [orig:136 D.5781 ] [136])
        (mem:SI (plus:DI (reg:DI 2 cx [577])
                (const_int 120 [0x78])) [2 state_246(D)->salt32+0 S4 A64])) blake_ref.c:58 90 {*movsi_internal}
     (nil))
(insn 743 118 510 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 %sfp+-80 S4 A32])
        (reg:SI 0 ax [orig:136 D.5781 ] [136])) blake_ref.c:58 90 {*movsi_internal}
     (nil))
(insn 510 743 119 2 (set (reg:SI 38 r9 [orig:254 v$8 ] [254])
        (reg:SI 0 ax [orig:136 D.5781 ] [136])) blake_ref.c:58 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:136 D.5781 ] [136])
        (nil)))
(insn 119 510 120 2 (parallel [
            (set (reg:SI 38 r9 [orig:254 v$8 ] [254])
                (xor:SI (reg:SI 38 r9 [orig:254 v$8 ] [254])
                    (const_int 608135816 [0x243f6a88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:58 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 120 119 742 2 (set (reg:SI 0 ax [orig:137 D.5781 ] [137])
        (mem:SI (plus:DI (reg:DI 2 cx [580])
                (const_int 124 [0x7c])) [2 state_246(D)->salt32+4 S4 A32])) blake_ref.c:59 90 {*movsi_internal}
     (nil))
(insn 742 120 121 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 196 [0xc4])) [6 %sfp+-76 S4 A32])
        (reg:SI 0 ax [orig:137 D.5781 ] [137])) blake_ref.c:59 90 {*movsi_internal}
     (nil))
(insn 121 742 515 2 (parallel [
            (set (reg:SI 0 ax [orig:274 v$9 ] [274])
                (xor:SI (reg:SI 0 ax [orig:274 v$9 ] [274])
                    (const_int -2052912941 [0xffffffff85a308d3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:59 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 515 121 122 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])
        (reg:SI 0 ax [orig:274 v$9 ] [274])) blake_ref.c:59 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:274 v$9 ] [274])
        (nil)))
(insn 122 515 741 2 (set (reg:SI 0 ax [orig:138 D.5781 ] [138])
        (mem:SI (plus:DI (reg:DI 2 cx [583])
                (const_int 128 [0x80])) [2 state_246(D)->salt32+8 S4 A64])) blake_ref.c:60 90 {*movsi_internal}
     (nil))
(insn 741 122 123 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [6 %sfp+-72 S4 A32])
        (reg:SI 0 ax [orig:138 D.5781 ] [138])) blake_ref.c:60 90 {*movsi_internal}
     (nil))
(insn 123 741 519 2 (parallel [
            (set (reg:SI 0 ax [orig:220 v$10 ] [220])
                (xor:SI (reg:SI 0 ax [orig:220 v$10 ] [220])
                    (const_int 320440878 [0x13198a2e])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:60 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 519 123 124 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-240 S4 A32])
        (reg:SI 0 ax [orig:220 v$10 ] [220])) blake_ref.c:60 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:220 v$10 ] [220])
        (nil)))
(insn 124 519 740 2 (set (reg:SI 0 ax [orig:139 D.5781 ] [139])
        (mem:SI (plus:DI (reg:DI 2 cx [586])
                (const_int 132 [0x84])) [2 state_246(D)->salt32+12 S4 A32])) blake_ref.c:61 90 {*movsi_internal}
     (nil))
(insn 740 124 125 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 204 [0xcc])) [6 %sfp+-68 S4 A32])
        (reg:SI 0 ax [orig:139 D.5781 ] [139])) blake_ref.c:61 90 {*movsi_internal}
     (nil))
(insn 125 740 523 2 (parallel [
            (set (reg:SI 0 ax [orig:206 v$11 ] [206])
                (xor:SI (reg:SI 0 ax [orig:206 v$11 ] [206])
                    (const_int 57701188 [0x3707344])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:61 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 523 125 524 2 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-248 S4 A32])
        (reg:SI 0 ax [orig:206 v$11 ] [206])) blake_ref.c:61 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:206 v$11 ] [206])
        (nil)))
(insn 524 523 863 2 (set (reg:DI 0 ax [589])
        (reg:DI 2 cx [ state ])) blake_ref.c:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (nil)))
(insn 863 524 864 2 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg:DI 2 cx [589])
                (const_int 12 [0xc])) [2 state_246(D)->nullt+0 S4 A32])) blake_ref.c:62 90 {*movsi_internal}
     (nil))
(insn 864 863 127 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx)
            (const_int 0 [0]))) blake_ref.c:62 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 127 864 128 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 418)
            (pc))) blake_ref.c:62 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 418)
;;  succ:       8 [50.0%]  (CAN_FALLTHRU)
;;              3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]

;; basic block 3, loop depth 0, count 0, freq 334, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 6 [bp] 17 [flags] 37 [r8] 44 [r15]
;; live  in  	 0 [ax] 2 [cx] 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 2 [cx] 3 [bx] 6 [bp] 37 [r8] 44 [r15]
;; live  kill	 17 [flags]
(note 128 127 129 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 526 3 (set (reg:SI 37 r8 [orig:141 D.5781 ] [141])
        (mem:SI (plus:DI (reg:DI 2 cx [590])
                (const_int 48 [0x30])) [2 state_246(D)->t32+0 S4 A64])) blake_ref.c:69 90 {*movsi_internal}
     (nil))
(insn 526 129 130 3 (set (reg:SI 6 bp [orig:235 v$12 ] [235])
        (reg:SI 37 r8 [orig:141 D.5781 ] [141])) blake_ref.c:69 90 {*movsi_internal}
     (nil))
(insn 130 526 131 3 (parallel [
            (set (reg:SI 6 bp [orig:235 v$12 ] [235])
                (xor:SI (reg:SI 6 bp [orig:235 v$12 ] [235])
                    (const_int -1542899678 [0xffffffffa4093822])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:69 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 529 3 (parallel [
            (set (reg:SI 37 r8 [orig:252 v$13 ] [252])
                (xor:SI (reg:SI 37 r8 [orig:252 v$13 ] [252])
                    (const_int 698298832 [0x299f31d0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:70 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 529 131 132 3 (set (reg:SI 2 cx [orig:252 v$13 ] [252])
        (reg:SI 37 r8 [orig:252 v$13 ] [252])) blake_ref.c:70 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:252 v$13 ] [252])
        (nil)))
(insn 132 529 531 3 (set (reg:SI 44 r15 [orig:142 D.5781 ] [142])
        (mem:SI (plus:DI (reg:DI 0 ax [593])
                (const_int 52 [0x34])) [2 state_246(D)->t32+4 S4 A32])) blake_ref.c:71 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [593])
        (nil)))
(insn 531 132 133 3 (set (reg:SI 3 bx [orig:273 v$14 ] [273])
        (reg:SI 44 r15 [orig:142 D.5781 ] [142])) blake_ref.c:71 90 {*movsi_internal}
     (nil))
(insn 133 531 134 3 (parallel [
            (set (reg:SI 3 bx [orig:273 v$14 ] [273])
                (xor:SI (reg:SI 3 bx [orig:273 v$14 ] [273])
                    (const_int 137296536 [0x82efa98])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:71 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 534 3 (parallel [
            (set (reg:SI 44 r15 [orig:219 v$15 ] [219])
                (xor:SI (reg:SI 44 r15 [orig:219 v$15 ] [219])
                    (const_int -330404727 [0xffffffffec4e6c89])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:72 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 534 134 135 3 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [6 %sfp+-244 S4 A32])
        (reg:SI 44 r15 [orig:219 v$15 ] [219])) blake_ref.c:72 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:219 v$15 ] [219])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]

;; basic block 4, loop depth 0, count 0, freq 670, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [100.0%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 2 [cx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 5 [di] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 37 [r8] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
(code_label 135 534 136 4 2 "" [1 uses])
(note 136 135 137 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 535 4 (set (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
        (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)
        (nil)))
(insn 535 137 35 4 (set (reg:SI 0 ax [orig:128 v$0 ] [128])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 %sfp+-112 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 35 535 536 4 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 0 ax [orig:128 v$0 ] [128])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:128 v$0 ] [128])
        (nil)))
(insn 536 35 36 4 (set (reg:SI 0 ax [orig:129 v$1 ] [129])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 164 [0xa4])) [6 %sfp+-108 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 36 536 37 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [6 %sfp+-268 S4 A32])
        (reg:SI 0 ax [orig:129 v$1 ] [129])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:129 v$1 ] [129])
        (nil)))
(insn 37 36 38 4 (set (reg:SI 42 r13 [orig:250 v$2 ] [250])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 %sfp+-104 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:SI 44 r15 [orig:270 v$3 ] [270])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 172 [0xac])) [6 %sfp+-100 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:SI 37 r8 [orig:276 v$4 ] [276])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-96 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 40 39 537 4 (set (reg:SI 43 r14 [orig:222 v$5 ] [222])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 180 [0xb4])) [6 %sfp+-92 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 537 40 41 4 (set (reg:SI 0 ax [orig:134 v$6 ] [134])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 %sfp+-88 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 41 537 538 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-264 S4 A32])
        (reg:SI 0 ax [orig:134 v$6 ] [134])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:134 v$6 ] [134])
        (nil)))
(insn 538 41 42 4 (set (reg:SI 0 ax [orig:135 v$7 ] [135])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 188 [0xbc])) [6 %sfp+-84 S4 A32])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 42 538 43 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [6 %sfp+-260 S4 A32])
        (reg:SI 0 ax [orig:135 v$7 ] [135])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:135 v$7 ] [135])
        (nil)))
(insn 43 42 44 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 156 [0x9c])) [6 %sfp+-116 S4 A32])
        (const_int 14 [0xe])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 14 [0xe])
        (nil)))
(insn 44 43 45 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 %sfp+-184 S4 A32])
        (const_int 1065670069 [0x3f84d5b5])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1065670069 [0x3f84d5b5])
        (nil)))
(insn 45 44 46 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 84 [0x54])) [6 %sfp+-188 S4 A32])
        (const_int -1253635817 [0xffffffffb5470917])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1253635817 [0xffffffffb5470917])
        (nil)))
(insn 46 45 47 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [6 %sfp+-192 S4 A32])
        (const_int -1062458953 [0xffffffffc0ac29b7])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1062458953 [0xffffffffc0ac29b7])
        (nil)))
(insn 47 46 48 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 76 [0x4c])) [6 %sfp+-196 S4 A32])
        (const_int -914599715 [0xffffffffc97c50dd])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -914599715 [0xffffffffc97c50dd])
        (nil)))
(insn 48 47 49 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-200 S4 A32])
        (const_int -1101764913 [0xffffffffbe5466cf])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1101764913 [0xffffffffbe5466cf])
        (nil)))
(insn 49 48 50 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 68 [0x44])) [6 %sfp+-204 S4 A32])
        (const_int 887688300 [0x34e90c6c])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 887688300 [0x34e90c6c])
        (nil)))
(insn 50 49 51 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-208 S4 A32])
        (const_int 1160258022 [0x452821e6])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1160258022 [0x452821e6])
        (nil)))
(insn 51 50 52 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 60 [0x3c])) [6 %sfp+-212 S4 A32])
        (const_int 953160567 [0x38d01377])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 953160567 [0x38d01377])
        (nil)))
(insn 52 51 53 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-216 S4 A32])
        (const_int 137296536 [0x82efa98])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 137296536 [0x82efa98])
        (nil)))
(insn 53 52 54 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 52 [0x34])) [6 %sfp+-220 S4 A32])
        (const_int -330404727 [0xffffffffec4e6c89])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -330404727 [0xffffffffec4e6c89])
        (nil)))
(insn 54 53 55 4 (set (reg:SI 1 dx [orig:314 D.5787 ] [314])
        (const_int -1542899678 [0xffffffffa4093822])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1542899678 [0xffffffffa4093822])
        (nil)))
(insn 55 54 56 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [6 %sfp+-224 S4 A32])
        (const_int 698298832 [0x299f31d0])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 698298832 [0x299f31d0])
        (nil)))
(insn 56 55 57 4 (set (reg:SI 0 ax [orig:306 D.5787 ] [306])
        (const_int 320440878 [0x13198a2e])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 320440878 [0x13198a2e])
        (nil)))
(insn 57 56 58 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 44 [0x2c])) [6 %sfp+-228 S4 A32])
        (const_int 57701188 [0x3707344])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 57701188 [0x3707344])
        (nil)))
(insn 58 57 758 4 (set (reg:SI 41 r12 [orig:298 D.5787 ] [298])
        (const_int 608135816 [0x243f6a88])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 608135816 [0x243f6a88])
        (nil)))
(note 758 58 59 4 NOTE_INSN_DELETED)
(insn 59 758 426 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-232 S4 A32])
        (const_int -2052912941 [0xffffffff85a308d3])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -2052912941 [0xffffffff85a308d3])
        (nil)))
(insn 426 59 428 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])
        (reg:SI 42 r13 [orig:250 v$2 ] [250])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:250 v$2 ] [250])
        (nil)))
(insn 428 426 435 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [6 %sfp+-252 S4 A32])
        (reg:SI 44 r15 [orig:270 v$3 ] [270])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:270 v$3 ] [270])
        (nil)))
(insn 435 428 436 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [6 %sfp+-180 S4 A32])
        (reg:SI 0 ax [orig:306 D.5787 ] [306])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(insn 436 435 437 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 %sfp+-176 S4 A32])
        (reg:SI 1 dx [orig:314 D.5787 ] [314])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:314 D.5787 ] [314])
        (nil)))
(insn 437 436 438 4 (set (reg:SI 1 dx [orig:297 D.5786 ] [297])
        (reg:SI 5 di [orig:297 D.5786 ] [297])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:297 D.5786 ] [297])
        (nil)))
(insn 438 437 865 4 (set (reg:SI 5 di [orig:252 v$13 ] [252])
        (reg:SI 2 cx [orig:252 v$13 ] [252])) blake_ref.c:63 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:252 v$13 ] [252])
        (nil)))
(jump_insn 865 438 866 4 (set (pc)
        (label_ref 369)) -1
     (nil)
 -> 369)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]

(barrier 866 865 867)
;; basic block 5, loop depth 0, count 0, freq 8710, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [93.3%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  kill	
(code_label 867 866 271 5 7 "" [1 uses])
(note 271 867 273 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 273 271 274 5 NOTE_INSN_DELETED)
(insn 274 273 275 5 (set (reg:DI 0 ax [orig:438 D.5782 ] [438])
        (zero_extend:DI (mem:QI (reg:DI 4 si [orig:281 ivtmp.77 ] [281]) [0 MEM[base: _514, offset: 0B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 275 274 276 5 (set (reg:SI 40 r11 [orig:293 D.5786 ] [293])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:438 D.5782 ] [438])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(note 276 275 277 5 NOTE_INSN_DELETED)
(insn 277 276 278 5 (set (reg/f:DI 2 cx [439])
        (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)
        (nil)))
(insn 278 277 279 5 (set (reg:DI 1 dx [orig:440 D.5782 ] [440])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 1 [0x1])) [0 MEM[base: _514, offset: 1B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 279 278 645 5 (set (reg:SI 39 r10 [orig:296 D.5787 ] [296])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:440 D.5782 ] [440])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUAL (mem/u:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:440 D.5782 ] [440])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("c32") [flags 0x2]  <var_decl 0x6ffffe13a80 c32>)) [2 c32 S4 A32])
        (nil)))
(insn 645 279 281 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-232 S4 A32])
        (reg:SI 39 r10 [orig:296 D.5787 ] [296])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:296 D.5787 ] [296])
        (nil)))
(insn 281 645 284 5 (set (reg:SI 1 dx [orig:297 D.5786 ] [297])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:440 D.5782 ] [440])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 284 281 285 5 (set (reg:SI 41 r12 [orig:298 D.5787 ] [298])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:438 D.5782 ] [438])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:438 D.5782 ] [438])
        (nil)))
(note 285 284 286 5 NOTE_INSN_DELETED)
(insn 286 285 287 5 (set (reg:DI 0 ax [orig:444 D.5782 ] [444])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 2 [0x2])) [0 MEM[base: _514, offset: 2B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 287 286 288 5 (set (reg:SI 39 r10 [orig:301 D.5786 ] [301])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:444 D.5782 ] [444])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(note 288 287 290 5 NOTE_INSN_DELETED)
(insn 290 288 291 5 (set (reg:DI 42 r13 [orig:446 D.5782 ] [446])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 3 [0x3])) [0 MEM[base: _514, offset: 3B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 291 290 646 5 (set (reg:SI 44 r15 [orig:304 D.5787 ] [304])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:446 D.5782 ] [446])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 646 291 293 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 44 [0x2c])) [6 %sfp+-228 S4 A32])
        (reg:SI 44 r15 [orig:304 D.5787 ] [304])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:304 D.5787 ] [304])
        (nil)))
(insn 293 646 647 5 (set (reg:SI 44 r15 [orig:305 D.5786 ] [305])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:446 D.5782 ] [446])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:446 D.5782 ] [446])
        (nil)))
(insn 647 293 296 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 100 [0x64])) [6 %sfp+-172 S4 A32])
        (reg:SI 44 r15 [orig:305 D.5786 ] [305])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:305 D.5786 ] [305])
        (nil)))
(insn 296 647 779 5 (set (reg:SI 0 ax [orig:306 D.5787 ] [306])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:444 D.5782 ] [444])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 779 296 297 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [6 %sfp+-180 S4 A32])
        (reg:SI 0 ax [orig:306 D.5787 ] [306])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:306 D.5787 ] [306])
        (nil)))
(note 297 779 298 5 NOTE_INSN_DELETED)
(insn 298 297 299 5 (set (reg:DI 42 r13 [orig:450 D.5782 ] [450])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 4 [0x4])) [0 MEM[base: _514, offset: 4B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 299 298 648 5 (set (reg:SI 44 r15 [orig:309 D.5786 ] [309])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:450 D.5782 ] [450])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 648 299 300 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [6 %sfp+-168 S4 A32])
        (reg:SI 44 r15 [orig:309 D.5786 ] [309])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:309 D.5786 ] [309])
        (nil)))
(note 300 648 302 5 NOTE_INSN_DELETED)
(insn 302 300 303 5 (set (reg:DI 44 r15 [orig:452 D.5782 ] [452])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 5 [0x5])) [0 MEM[base: _514, offset: 5B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 303 302 649 5 (set (reg:SI 0 ax [orig:312 D.5787 ] [312])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:452 D.5782 ] [452])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 649 303 305 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [6 %sfp+-224 S4 A32])
        (reg:SI 0 ax [orig:312 D.5787 ] [312])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:312 D.5787 ] [312])
        (nil)))
(insn 305 649 650 5 (set (reg:SI 0 ax [orig:313 D.5786 ] [313])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:452 D.5782 ] [452])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:452 D.5782 ] [452])
        (nil)))
(insn 650 305 308 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 108 [0x6c])) [6 %sfp+-164 S4 A32])
        (reg:SI 0 ax [orig:313 D.5786 ] [313])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:313 D.5786 ] [313])
        (nil)))
(insn 308 650 651 5 (set (reg:SI 0 ax [orig:314 D.5787 ] [314])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:450 D.5782 ] [450])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:450 D.5782 ] [450])
        (nil)))
(insn 651 308 309 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 %sfp+-176 S4 A32])
        (reg:SI 0 ax [orig:314 D.5787 ] [314])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:314 D.5787 ] [314])
        (nil)))
(note 309 651 310 5 NOTE_INSN_DELETED)
(insn 310 309 311 5 (set (reg:DI 42 r13 [orig:456 D.5782 ] [456])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 6 [0x6])) [0 MEM[base: _514, offset: 6B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 311 310 652 5 (set (reg:SI 0 ax [orig:317 D.5786 ] [317])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:456 D.5782 ] [456])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 652 311 312 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [6 %sfp+-160 S4 A32])
        (reg:SI 0 ax [orig:317 D.5786 ] [317])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:317 D.5786 ] [317])
        (nil)))
(note 312 652 314 5 NOTE_INSN_DELETED)
(insn 314 312 315 5 (set (reg:DI 44 r15 [orig:458 D.5782 ] [458])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 7 [0x7])) [0 MEM[base: _514, offset: 7B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 315 314 653 5 (set (reg:SI 0 ax [orig:320 D.5787 ] [320])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:458 D.5782 ] [458])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 653 315 317 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 52 [0x34])) [6 %sfp+-220 S4 A32])
        (reg:SI 0 ax [orig:320 D.5787 ] [320])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:320 D.5787 ] [320])
        (nil)))
(insn 317 653 654 5 (set (reg:SI 0 ax [orig:321 D.5786 ] [321])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:458 D.5782 ] [458])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:458 D.5782 ] [458])
        (nil)))
(insn 654 317 320 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 116 [0x74])) [6 %sfp+-156 S4 A32])
        (reg:SI 0 ax [orig:321 D.5786 ] [321])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:321 D.5786 ] [321])
        (nil)))
(insn 320 654 655 5 (set (reg:SI 0 ax [orig:322 D.5787 ] [322])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:456 D.5782 ] [456])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:456 D.5782 ] [456])
        (nil)))
(insn 655 320 321 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-216 S4 A32])
        (reg:SI 0 ax [orig:322 D.5787 ] [322])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:322 D.5787 ] [322])
        (nil)))
(note 321 655 322 5 NOTE_INSN_DELETED)
(insn 322 321 323 5 (set (reg:DI 42 r13 [orig:462 D.5782 ] [462])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 8 [0x8])) [0 MEM[base: _514, offset: 8B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 323 322 656 5 (set (reg:SI 0 ax [orig:325 D.5786 ] [325])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:462 D.5782 ] [462])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 656 323 324 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [6 %sfp+-152 S4 A32])
        (reg:SI 0 ax [orig:325 D.5786 ] [325])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:325 D.5786 ] [325])
        (nil)))
(note 324 656 326 5 NOTE_INSN_DELETED)
(insn 326 324 327 5 (set (reg:DI 44 r15 [orig:464 D.5782 ] [464])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 9 [0x9])) [0 MEM[base: _514, offset: 9B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 327 326 657 5 (set (reg:SI 0 ax [orig:328 D.5787 ] [328])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:464 D.5782 ] [464])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 657 327 329 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 60 [0x3c])) [6 %sfp+-212 S4 A32])
        (reg:SI 0 ax [orig:328 D.5787 ] [328])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:328 D.5787 ] [328])
        (nil)))
(insn 329 657 658 5 (set (reg:SI 0 ax [orig:329 D.5786 ] [329])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:464 D.5782 ] [464])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:464 D.5782 ] [464])
        (nil)))
(insn 658 329 332 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 124 [0x7c])) [6 %sfp+-148 S4 A32])
        (reg:SI 0 ax [orig:329 D.5786 ] [329])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:329 D.5786 ] [329])
        (nil)))
(insn 332 658 659 5 (set (reg:SI 0 ax [orig:330 D.5787 ] [330])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:462 D.5782 ] [462])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:462 D.5782 ] [462])
        (nil)))
(insn 659 332 333 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-208 S4 A32])
        (reg:SI 0 ax [orig:330 D.5787 ] [330])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:330 D.5787 ] [330])
        (nil)))
(note 333 659 334 5 NOTE_INSN_DELETED)
(insn 334 333 335 5 (set (reg:DI 42 r13 [orig:468 D.5782 ] [468])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 10 [0xa])) [0 MEM[base: _514, offset: 10B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 335 334 660 5 (set (reg:SI 0 ax [orig:333 D.5786 ] [333])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:468 D.5782 ] [468])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 660 335 336 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [6 %sfp+-144 S4 A32])
        (reg:SI 0 ax [orig:333 D.5786 ] [333])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:333 D.5786 ] [333])
        (nil)))
(note 336 660 338 5 NOTE_INSN_DELETED)
(insn 338 336 339 5 (set (reg:DI 44 r15 [orig:470 D.5782 ] [470])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 11 [0xb])) [0 MEM[base: _514, offset: 11B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 339 338 661 5 (set (reg:SI 0 ax [orig:336 D.5787 ] [336])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:470 D.5782 ] [470])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 661 339 341 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 68 [0x44])) [6 %sfp+-204 S4 A32])
        (reg:SI 0 ax [orig:336 D.5787 ] [336])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:336 D.5787 ] [336])
        (nil)))
(insn 341 661 662 5 (set (reg:SI 0 ax [orig:337 D.5786 ] [337])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:470 D.5782 ] [470])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:470 D.5782 ] [470])
        (nil)))
(insn 662 341 344 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 132 [0x84])) [6 %sfp+-140 S4 A32])
        (reg:SI 0 ax [orig:337 D.5786 ] [337])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:337 D.5786 ] [337])
        (nil)))
(insn 344 662 663 5 (set (reg:SI 0 ax [orig:338 D.5787 ] [338])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:468 D.5782 ] [468])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:468 D.5782 ] [468])
        (nil)))
(insn 663 344 345 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-200 S4 A32])
        (reg:SI 0 ax [orig:338 D.5787 ] [338])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:338 D.5787 ] [338])
        (nil)))
(note 345 663 346 5 NOTE_INSN_DELETED)
(insn 346 345 347 5 (set (reg:DI 42 r13 [orig:474 D.5782 ] [474])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 12 [0xc])) [0 MEM[base: _514, offset: 12B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 347 346 664 5 (set (reg:SI 0 ax [orig:341 D.5786 ] [341])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:474 D.5782 ] [474])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 664 347 348 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [6 %sfp+-136 S4 A32])
        (reg:SI 0 ax [orig:341 D.5786 ] [341])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:341 D.5786 ] [341])
        (nil)))
(note 348 664 350 5 NOTE_INSN_DELETED)
(insn 350 348 351 5 (set (reg:DI 44 r15 [orig:476 D.5782 ] [476])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 13 [0xd])) [0 MEM[base: _514, offset: 13B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 351 350 665 5 (set (reg:SI 0 ax [orig:344 D.5787 ] [344])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:476 D.5782 ] [476])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 665 351 353 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 76 [0x4c])) [6 %sfp+-196 S4 A32])
        (reg:SI 0 ax [orig:344 D.5787 ] [344])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:344 D.5787 ] [344])
        (nil)))
(insn 353 665 666 5 (set (reg:SI 0 ax [orig:345 D.5786 ] [345])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:476 D.5782 ] [476])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:476 D.5782 ] [476])
        (nil)))
(insn 666 353 356 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 140 [0x8c])) [6 %sfp+-132 S4 A32])
        (reg:SI 0 ax [orig:345 D.5786 ] [345])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:345 D.5786 ] [345])
        (nil)))
(insn 356 666 667 5 (set (reg:SI 0 ax [orig:346 D.5787 ] [346])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:474 D.5782 ] [474])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:474 D.5782 ] [474])
        (nil)))
(insn 667 356 357 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [6 %sfp+-192 S4 A32])
        (reg:SI 0 ax [orig:346 D.5787 ] [346])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:346 D.5787 ] [346])
        (nil)))
(note 357 667 358 5 NOTE_INSN_DELETED)
(insn 358 357 359 5 (set (reg:DI 42 r13 [orig:480 D.5782 ] [480])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 14 [0xe])) [0 MEM[base: _514, offset: 14B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 359 358 668 5 (set (reg:SI 0 ax [orig:349 D.5786 ] [349])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 42 r13 [orig:480 D.5782 ] [480])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 668 359 360 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 %sfp+-128 S4 A32])
        (reg:SI 0 ax [orig:349 D.5786 ] [349])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:349 D.5786 ] [349])
        (nil)))
(note 360 668 362 5 NOTE_INSN_DELETED)
(insn 362 360 363 5 (set (reg:DI 44 r15 [orig:482 D.5782 ] [482])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 15 [0xf])) [0 MEM[base: _514, offset: 15B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 363 362 669 5 (set (reg:SI 0 ax [orig:352 D.5787 ] [352])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 44 r15 [orig:482 D.5782 ] [482])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 669 363 365 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 84 [0x54])) [6 %sfp+-188 S4 A32])
        (reg:SI 0 ax [orig:352 D.5787 ] [352])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:352 D.5787 ] [352])
        (nil)))
(insn 365 669 670 5 (set (reg:SI 0 ax [orig:353 D.5786 ] [353])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 44 r15 [orig:482 D.5782 ] [482])
                        (const_int 4 [0x4]))
                    (reg/f:DI 7 sp))
                (const_int 208 [0xd0])) [2 m S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:482 D.5782 ] [482])
        (nil)))
(insn 670 365 368 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 148 [0x94])) [6 %sfp+-124 S4 A32])
        (reg:SI 0 ax [orig:353 D.5786 ] [353])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:353 D.5786 ] [353])
        (nil)))
(insn 368 670 671 5 (set (reg:SI 0 ax [orig:354 D.5787 ] [354])
        (mem/u:SI (plus:DI (mult:DI (reg:DI 42 r13 [orig:480 D.5782 ] [480])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [439])) [2 c32 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:480 D.5782 ] [480])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [439])
            (nil))))
(insn 671 368 816 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 %sfp+-184 S4 A32])
        (reg:SI 0 ax [orig:354 D.5787 ] [354])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:354 D.5787 ] [354])
        (nil)))
(insn 816 671 369 5 (set (reg:SI 0 ax [orig:386 D.5781 ] [386])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 92 [0x5c])) [6 %sfp+-180 S4 A32])) 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]

;; basic block 6, loop depth 0, count 0, freq 9333, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              4 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 369 816 138 6 4 "" [1 uses])
(note 138 369 539 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 539 138 799 6 NOTE_INSN_DELETED)
(note 799 539 139 6 NOTE_INSN_DELETED)
(insn 139 799 824 6 (parallel [
            (set (reg:SI 40 r11 [orig:374 D.5781 ] [374])
                (xor:SI (reg:SI 40 r11 [orig:293 D.5786 ] [293])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 40 [0x28])) [6 %sfp+-232 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 824 139 540 6 (set (reg:SI 44 r15 [orig:375 D.5781 ] [375])
        (plus:SI (reg:SI 40 r11 [orig:374 D.5781 ] [374])
            (reg:SI 37 r8 [orig:276 v$4 ] [276]))) blake_ref.c:79 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 40 r11 [orig:374 D.5781 ] [374])
        (nil)))
(note 540 824 798 6 NOTE_INSN_DELETED)
(note 798 540 141 6 NOTE_INSN_DELETED)
(insn 141 798 541 6 (parallel [
            (set (reg:SI 44 r15 [orig:144 D.5781 ] [144])
                (plus:SI (reg:SI 44 r15 [orig:375 D.5781 ] [375])
                    (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 541 141 142 6 (set (reg:SI 2 cx [orig:376 D.5781 ] [376])
        (reg:SI 6 bp [orig:235 v$12 ] [235])) blake_ref.c:79 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:235 v$12 ] [235])
        (nil)))
(insn 142 541 143 6 (parallel [
            (set (reg:SI 2 cx [orig:376 D.5781 ] [376])
                (xor:SI (reg:SI 2 cx [orig:376 D.5781 ] [376])
                    (reg:SI 44 r15 [orig:144 D.5781 ] [144])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 142 144 6 (parallel [
            (set (reg:SI 2 cx [orig:146 D.5781 ] [146])
                (rotate:SI (reg:SI 2 cx [orig:376 D.5781 ] [376])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 6 (parallel [
            (set (reg:SI 38 r9 [orig:147 D.5781 ] [147])
                (plus:SI (reg:SI 38 r9 [orig:254 v$8 ] [254])
                    (reg:SI 2 cx [orig:146 D.5781 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 145 144 146 6 (parallel [
            (set (reg:SI 37 r8 [orig:377 D.5781 ] [377])
                (xor:SI (reg:SI 37 r8 [orig:276 v$4 ] [276])
                    (reg:SI 38 r9 [orig:147 D.5781 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 146 145 147 6 (parallel [
            (set (reg:SI 37 r8 [orig:149 D.5781 ] [149])
                (rotatert:SI (reg:SI 37 r8 [orig:377 D.5781 ] [377])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 825 6 (parallel [
            (set (reg:SI 41 r12 [orig:378 D.5781 ] [378])
                (xor:SI (reg:SI 41 r12 [orig:298 D.5787 ] [298])
                    (reg:SI 1 dx [orig:297 D.5786 ] [297])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:297 D.5786 ] [297])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 825 147 149 6 (set (reg:SI 1 dx [orig:379 D.5781 ] [379])
        (plus:SI (reg:SI 41 r12 [orig:378 D.5781 ] [378])
            (reg:SI 44 r15 [orig:144 D.5781 ] [144]))) blake_ref.c:79 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:144 D.5781 ] [144])
        (expr_list:REG_DEAD (reg:SI 41 r12 [orig:378 D.5781 ] [378])
            (nil))))
(insn 149 825 150 6 (parallel [
            (set (reg:SI 1 dx [orig:152 D.5781 ] [152])
                (plus:SI (reg:SI 1 dx [orig:379 D.5781 ] [379])
                    (reg:SI 37 r8 [orig:149 D.5781 ] [149])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 150 149 151 6 (parallel [
            (set (reg:SI 2 cx [orig:380 D.5781 ] [380])
                (xor:SI (reg:SI 2 cx [orig:146 D.5781 ] [146])
                    (reg:SI 1 dx [orig:152 D.5781 ] [152])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 151 150 152 6 (parallel [
            (set (reg:SI 2 cx [orig:154 D.5781 ] [154])
                (rotatert:SI (reg:SI 2 cx [orig:380 D.5781 ] [380])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 152 151 774 6 (parallel [
            (set (reg:SI 38 r9 [orig:155 D.5781 ] [155])
                (plus:SI (reg:SI 38 r9 [orig:147 D.5781 ] [147])
                    (reg:SI 2 cx [orig:154 D.5781 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 774 152 773 6 NOTE_INSN_DELETED)
(insn 773 774 802 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-232 S4 A32])
        (reg:SI 38 r9 [orig:155 D.5781 ] [155])) blake_ref.c:79 90 {*movsi_internal}
     (nil))
(note 802 773 153 6 NOTE_INSN_DELETED)
(insn 153 802 154 6 (parallel [
            (set (reg:SI 37 r8 [orig:381 D.5781 ] [381])
                (xor:SI (reg:SI 37 r8 [orig:149 D.5781 ] [149])
                    (reg:SI 38 r9 [orig:155 D.5781 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:155 D.5781 ] [155])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 154 153 546 6 (parallel [
            (set (reg:SI 37 r8 [orig:157 D.5781 ] [157])
                (rotatert:SI (reg:SI 37 r8 [orig:157 D.5781 ] [157])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:79 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 546 154 801 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 %sfp+-120 S4 A32])
        (reg:SI 37 r8 [orig:157 D.5781 ] [157])) blake_ref.c:79 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:157 D.5781 ] [157])
        (nil)))
(note 801 546 772 6 NOTE_INSN_DELETED)
(note 772 801 547 6 NOTE_INSN_DELETED)
(note 547 772 797 6 NOTE_INSN_DELETED)
(note 797 547 155 6 NOTE_INSN_DELETED)
(insn 155 797 156 6 (parallel [
            (set (reg:SI 39 r10 [orig:382 D.5781 ] [382])
                (xor:SI (reg:SI 39 r10 [orig:301 D.5786 ] [301])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 44 [0x2c])) [6 %sfp+-228 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 156 155 548 6 (parallel [
            (set (reg:SI 39 r10 [orig:383 D.5781 ] [383])
                (plus:SI (reg:SI 39 r10 [orig:382 D.5781 ] [382])
                    (reg:SI 43 r14 [orig:222 v$5 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 548 156 796 6 NOTE_INSN_DELETED)
(note 796 548 157 6 NOTE_INSN_DELETED)
(insn 157 796 158 6 (parallel [
            (set (reg:SI 39 r10 [orig:160 D.5781 ] [160])
                (plus:SI (reg:SI 39 r10 [orig:383 D.5781 ] [383])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 4 [0x4])) [6 %sfp+-268 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 158 157 159 6 (parallel [
            (set (reg:SI 5 di [orig:384 D.5781 ] [384])
                (xor:SI (reg:SI 5 di [orig:252 v$13 ] [252])
                    (reg:SI 39 r10 [orig:160 D.5781 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 159 158 549 6 (parallel [
            (set (reg:SI 5 di [orig:162 D.5781 ] [162])
                (rotate:SI (reg:SI 5 di [orig:384 D.5781 ] [384])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 549 159 160 6 (set (reg:SI 44 r15 [orig:163 D.5781 ] [163])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])) blake_ref.c:80 90 {*movsi_internal}
     (nil))
(insn 160 549 161 6 (parallel [
            (set (reg:SI 44 r15 [orig:163 D.5781 ] [163])
                (plus:SI (reg:SI 44 r15 [orig:163 D.5781 ] [163])
                    (reg:SI 5 di [orig:162 D.5781 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 161 160 552 6 (parallel [
            (set (reg:SI 43 r14 [orig:385 D.5781 ] [385])
                (xor:SI (reg:SI 43 r14 [orig:385 D.5781 ] [385])
                    (reg:SI 44 r15 [orig:163 D.5781 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 552 161 162 6 (set (reg:SI 6 bp [orig:385 D.5781 ] [385])
        (reg:SI 43 r14 [orig:385 D.5781 ] [385])) blake_ref.c:80 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:385 D.5781 ] [385])
        (nil)))
(insn 162 552 553 6 (parallel [
            (set (reg:SI 6 bp [orig:165 D.5781 ] [165])
                (rotatert:SI (reg:SI 6 bp [orig:385 D.5781 ] [385])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 553 162 795 6 NOTE_INSN_DELETED)
(note 795 553 163 6 NOTE_INSN_DELETED)
(insn 163 795 164 6 (parallel [
            (set (reg:SI 0 ax [orig:386 D.5781 ] [386])
                (xor:SI (reg:SI 0 ax [orig:386 D.5781 ] [386])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 100 [0x64])) [6 %sfp+-172 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 163 165 6 (parallel [
            (set (reg:SI 0 ax [orig:387 D.5781 ] [387])
                (plus:SI (reg:SI 0 ax [orig:386 D.5781 ] [386])
                    (reg:SI 39 r10 [orig:160 D.5781 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:160 D.5781 ] [160])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 6 (parallel [
            (set (reg:SI 0 ax [orig:168 D.5781 ] [168])
                (plus:SI (reg:SI 0 ax [orig:387 D.5781 ] [387])
                    (reg:SI 6 bp [orig:165 D.5781 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 166 165 167 6 (parallel [
            (set (reg:SI 5 di [orig:388 D.5781 ] [388])
                (xor:SI (reg:SI 5 di [orig:162 D.5781 ] [162])
                    (reg:SI 0 ax [orig:168 D.5781 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 167 166 826 6 (parallel [
            (set (reg:SI 5 di [orig:170 D.5781 ] [170])
                (rotatert:SI (reg:SI 5 di [orig:388 D.5781 ] [388])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 826 167 771 6 (set (reg:SI 43 r14 [orig:171 D.5781 ] [171])
        (plus:SI (reg:SI 44 r15 [orig:163 D.5781 ] [163])
            (reg:SI 5 di [orig:170 D.5781 ] [170]))) blake_ref.c:80 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:163 D.5781 ] [163])
        (nil)))
(note 771 826 770 6 NOTE_INSN_DELETED)
(insn 770 771 800 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])
        (reg:SI 43 r14 [orig:171 D.5781 ] [171])) blake_ref.c:80 90 {*movsi_internal}
     (nil))
(note 800 770 169 6 NOTE_INSN_DELETED)
(insn 169 800 170 6 (parallel [
            (set (reg:SI 6 bp [orig:389 D.5781 ] [389])
                (xor:SI (reg:SI 6 bp [orig:165 D.5781 ] [165])
                    (reg:SI 43 r14 [orig:171 D.5781 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:171 D.5781 ] [171])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 556 6 (parallel [
            (set (reg:SI 6 bp [orig:173 D.5781 ] [173])
                (rotatert:SI (reg:SI 6 bp [orig:389 D.5781 ] [389])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:80 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 556 170 558 6 (set (reg:SI 39 r10 [orig:390 D.5781 ] [390])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [6 %sfp+-168 S4 A32])) blake_ref.c:81 90 {*movsi_internal}
     (nil))
(note 558 556 792 6 NOTE_INSN_DELETED)
(note 792 558 171 6 NOTE_INSN_DELETED)
(insn 171 792 769 6 (parallel [
            (set (reg:SI 39 r10 [orig:390 D.5781 ] [390])
                (xor:SI (reg:SI 39 r10 [orig:390 D.5781 ] [390])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 48 [0x30])) [6 %sfp+-224 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 769 171 172 6 (set (reg:SI 40 r11 [orig:238 v$6 ] [238])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-264 S4 A32])) blake_ref.c:81 90 {*movsi_internal}
     (nil))
(insn 172 769 560 6 (parallel [
            (set (reg:SI 39 r10 [orig:391 D.5781 ] [391])
                (plus:SI (reg:SI 39 r10 [orig:390 D.5781 ] [390])
                    (reg:SI 40 r11 [orig:238 v$6 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:238 v$6 ] [238])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 560 172 791 6 NOTE_INSN_DELETED)
(note 791 560 173 6 NOTE_INSN_DELETED)
(insn 173 791 174 6 (parallel [
            (set (reg:SI 39 r10 [orig:176 D.5781 ] [176])
                (plus:SI (reg:SI 39 r10 [orig:391 D.5781 ] [391])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 174 173 562 6 (parallel [
            (set (reg:SI 3 bx [orig:392 D.5781 ] [392])
                (xor:SI (reg:SI 3 bx [orig:392 D.5781 ] [392])
                    (reg:SI 39 r10 [orig:176 D.5781 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 562 174 175 6 (set (reg:SI 37 r8 [orig:392 D.5781 ] [392])
        (reg:SI 3 bx [orig:392 D.5781 ] [392])) blake_ref.c:81 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:392 D.5781 ] [392])
        (nil)))
(insn 175 562 563 6 (parallel [
            (set (reg:SI 37 r8 [orig:178 D.5781 ] [178])
                (rotate:SI (reg:SI 37 r8 [orig:392 D.5781 ] [392])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 563 175 176 6 (set (reg:SI 3 bx [orig:179 D.5781 ] [179])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-240 S4 A32])) blake_ref.c:81 90 {*movsi_internal}
     (nil))
(insn 176 563 564 6 (parallel [
            (set (reg:SI 3 bx [orig:179 D.5781 ] [179])
                (plus:SI (reg:SI 3 bx [orig:179 D.5781 ] [179])
                    (reg:SI 37 r8 [orig:178 D.5781 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 564 176 177 6 (set (reg:SI 43 r14 [orig:179 D.5781 ] [179])
        (reg:SI 3 bx [orig:179 D.5781 ] [179])) blake_ref.c:81 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:179 D.5781 ] [179])
        (nil)))
(insn 177 564 178 6 (parallel [
            (set (reg:SI 40 r11 [orig:393 D.5781 ] [393])
                (xor:SI (reg:SI 40 r11 [orig:393 D.5781 ] [393])
                    (reg:SI 3 bx [orig:179 D.5781 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 178 177 567 6 (parallel [
            (set (reg:SI 40 r11 [orig:181 D.5781 ] [181])
                (rotatert:SI (reg:SI 40 r11 [orig:393 D.5781 ] [393])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 567 178 569 6 (set (reg:SI 3 bx [orig:394 D.5781 ] [394])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 108 [0x6c])) [6 %sfp+-164 S4 A32])) blake_ref.c:81 90 {*movsi_internal}
     (nil))
(note 569 567 790 6 NOTE_INSN_DELETED)
(note 790 569 179 6 NOTE_INSN_DELETED)
(insn 179 790 568 6 (parallel [
            (set (reg:SI 3 bx [orig:394 D.5781 ] [394])
                (xor:SI (reg:SI 3 bx [orig:394 D.5781 ] [394])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 96 [0x60])) [6 %sfp+-176 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 568 179 180 6 (set (reg:SI 38 r9 [orig:394 D.5781 ] [394])
        (reg:SI 3 bx [orig:394 D.5781 ] [394])) blake_ref.c:81 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:394 D.5781 ] [394])
        (nil)))
(insn 180 568 181 6 (parallel [
            (set (reg:SI 38 r9 [orig:395 D.5781 ] [395])
                (plus:SI (reg:SI 38 r9 [orig:394 D.5781 ] [394])
                    (reg:SI 39 r10 [orig:176 D.5781 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:176 D.5781 ] [176])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 181 180 182 6 (parallel [
            (set (reg:SI 38 r9 [orig:184 D.5781 ] [184])
                (plus:SI (reg:SI 38 r9 [orig:395 D.5781 ] [395])
                    (reg:SI 40 r11 [orig:181 D.5781 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 182 181 183 6 (parallel [
            (set (reg:SI 37 r8 [orig:396 D.5781 ] [396])
                (xor:SI (reg:SI 37 r8 [orig:178 D.5781 ] [178])
                    (reg:SI 38 r9 [orig:184 D.5781 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 183 182 184 6 (parallel [
            (set (reg:SI 37 r8 [orig:186 D.5781 ] [186])
                (rotatert:SI (reg:SI 37 r8 [orig:396 D.5781 ] [396])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 570 6 (parallel [
            (set (reg:SI 43 r14 [orig:187 D.5781 ] [187])
                (plus:SI (reg:SI 43 r14 [orig:179 D.5781 ] [179])
                    (reg:SI 37 r8 [orig:186 D.5781 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 570 184 185 6 (set (reg:SI 3 bx [orig:397 D.5781 ] [397])
        (reg:SI 40 r11 [orig:181 D.5781 ] [181])) blake_ref.c:81 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [orig:181 D.5781 ] [181])
        (nil)))
(insn 185 570 186 6 (parallel [
            (set (reg:SI 3 bx [orig:397 D.5781 ] [397])
                (xor:SI (reg:SI 3 bx [orig:397 D.5781 ] [397])
                    (reg:SI 43 r14 [orig:187 D.5781 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 186 185 572 6 (parallel [
            (set (reg:SI 3 bx [orig:189 D.5781 ] [189])
                (rotatert:SI (reg:SI 3 bx [orig:397 D.5781 ] [397])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:81 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 572 186 574 6 (set (reg:SI 39 r10 [orig:398 D.5781 ] [398])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [6 %sfp+-160 S4 A32])) blake_ref.c:82 90 {*movsi_internal}
     (nil))
(note 574 572 789 6 NOTE_INSN_DELETED)
(note 789 574 187 6 NOTE_INSN_DELETED)
(insn 187 789 768 6 (parallel [
            (set (reg:SI 39 r10 [orig:398 D.5781 ] [398])
                (xor:SI (reg:SI 39 r10 [orig:398 D.5781 ] [398])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 52 [0x34])) [6 %sfp+-220 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 768 187 188 6 (set (reg:SI 44 r15 [orig:256 v$7 ] [256])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [6 %sfp+-260 S4 A32])) blake_ref.c:82 90 {*movsi_internal}
     (nil))
(insn 188 768 576 6 (parallel [
            (set (reg:SI 39 r10 [orig:399 D.5781 ] [399])
                (plus:SI (reg:SI 39 r10 [orig:398 D.5781 ] [398])
                    (reg:SI 44 r15 [orig:256 v$7 ] [256])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 576 188 788 6 NOTE_INSN_DELETED)
(note 788 576 189 6 NOTE_INSN_DELETED)
(insn 189 788 577 6 (parallel [
            (set (reg:SI 39 r10 [orig:192 D.5781 ] [192])
                (plus:SI (reg:SI 39 r10 [orig:399 D.5781 ] [399])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 20 [0x14])) [6 %sfp+-252 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 577 189 190 6 (set (reg:SI 41 r12 [orig:400 D.5781 ] [400])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [6 %sfp+-244 S4 A32])) blake_ref.c:82 90 {*movsi_internal}
     (nil))
(insn 190 577 191 6 (parallel [
            (set (reg:SI 41 r12 [orig:400 D.5781 ] [400])
                (xor:SI (reg:SI 41 r12 [orig:400 D.5781 ] [400])
                    (reg:SI 39 r10 [orig:192 D.5781 ] [192])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 191 190 579 6 (parallel [
            (set (reg:SI 41 r12 [orig:194 D.5781 ] [194])
                (rotate:SI (reg:SI 41 r12 [orig:400 D.5781 ] [400])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 579 191 192 6 (set (reg:SI 42 r13 [orig:195 D.5781 ] [195])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-248 S4 A32])) blake_ref.c:82 90 {*movsi_internal}
     (nil))
(insn 192 579 581 6 (parallel [
            (set (reg:SI 42 r13 [orig:195 D.5781 ] [195])
                (plus:SI (reg:SI 42 r13 [orig:195 D.5781 ] [195])
                    (reg:SI 41 r12 [orig:194 D.5781 ] [194])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 581 192 193 6 (set (reg:SI 40 r11 [orig:401 D.5781 ] [401])
        (reg:SI 44 r15 [orig:256 v$7 ] [256])) blake_ref.c:82 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:256 v$7 ] [256])
        (nil)))
(insn 193 581 194 6 (parallel [
            (set (reg:SI 40 r11 [orig:401 D.5781 ] [401])
                (xor:SI (reg:SI 40 r11 [orig:401 D.5781 ] [401])
                    (reg:SI 42 r13 [orig:195 D.5781 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 194 193 583 6 (parallel [
            (set (reg:SI 40 r11 [orig:197 D.5781 ] [197])
                (rotatert:SI (reg:SI 40 r11 [orig:401 D.5781 ] [401])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 583 194 585 6 (set (reg:SI 44 r15 [orig:402 D.5781 ] [402])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 116 [0x74])) [6 %sfp+-156 S4 A32])) blake_ref.c:82 90 {*movsi_internal}
     (nil))
(note 585 583 775 6 NOTE_INSN_DELETED)
(note 775 585 195 6 NOTE_INSN_DELETED)
(insn 195 775 196 6 (parallel [
            (set (reg:SI 44 r15 [orig:402 D.5781 ] [402])
                (xor:SI (reg:SI 44 r15 [orig:402 D.5781 ] [402])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 56 [0x38])) [6 %sfp+-216 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 196 195 197 6 (parallel [
            (set (reg:SI 39 r10 [orig:403 D.5781 ] [403])
                (plus:SI (reg:SI 39 r10 [orig:192 D.5781 ] [192])
                    (reg:SI 44 r15 [orig:402 D.5781 ] [402])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:402 D.5781 ] [402])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 197 196 198 6 (parallel [
            (set (reg:SI 39 r10 [orig:200 D.5781 ] [200])
                (plus:SI (reg:SI 39 r10 [orig:403 D.5781 ] [403])
                    (reg:SI 40 r11 [orig:197 D.5781 ] [197])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 198 197 199 6 (parallel [
            (set (reg:SI 41 r12 [orig:404 D.5781 ] [404])
                (xor:SI (reg:SI 41 r12 [orig:194 D.5781 ] [194])
                    (reg:SI 39 r10 [orig:200 D.5781 ] [200])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 198 200 6 (parallel [
            (set (reg:SI 41 r12 [orig:202 D.5781 ] [202])
                (rotatert:SI (reg:SI 41 r12 [orig:404 D.5781 ] [404])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 200 199 201 6 (parallel [
            (set (reg:SI 42 r13 [orig:203 D.5781 ] [203])
                (plus:SI (reg:SI 42 r13 [orig:195 D.5781 ] [195])
                    (reg:SI 41 r12 [orig:202 D.5781 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 201 200 202 6 (parallel [
            (set (reg:SI 40 r11 [orig:405 D.5781 ] [405])
                (xor:SI (reg:SI 40 r11 [orig:197 D.5781 ] [197])
                    (reg:SI 42 r13 [orig:203 D.5781 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 202 201 586 6 (parallel [
            (set (reg:SI 40 r11 [orig:205 D.5781 ] [205])
                (rotatert:SI (reg:SI 40 r11 [orig:405 D.5781 ] [405])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:82 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 586 202 588 6 (set (reg:SI 44 r15 [orig:406 D.5781 ] [406])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [6 %sfp+-152 S4 A32])) blake_ref.c:85 90 {*movsi_internal}
     (nil))
(note 588 586 776 6 NOTE_INSN_DELETED)
(note 776 588 203 6 NOTE_INSN_DELETED)
(insn 203 776 204 6 (parallel [
            (set (reg:SI 44 r15 [orig:406 D.5781 ] [406])
                (xor:SI (reg:SI 44 r15 [orig:406 D.5781 ] [406])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 60 [0x3c])) [6 %sfp+-212 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 204 203 205 6 (parallel [
            (set (reg:SI 1 dx [orig:407 D.5781 ] [407])
                (plus:SI (reg:SI 1 dx [orig:152 D.5781 ] [152])
                    (reg:SI 44 r15 [orig:406 D.5781 ] [406])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:406 D.5781 ] [406])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 205 204 206 6 (parallel [
            (set (reg:SI 1 dx [orig:209 D.5781 ] [209])
                (plus:SI (reg:SI 1 dx [orig:407 D.5781 ] [407])
                    (reg:SI 6 bp [orig:173 D.5781 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 206 205 207 6 (parallel [
            (set (reg:SI 41 r12 [orig:408 D.5781 ] [408])
                (xor:SI (reg:SI 41 r12 [orig:202 D.5781 ] [202])
                    (reg:SI 1 dx [orig:209 D.5781 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 207 206 208 6 (parallel [
            (set (reg:SI 41 r12 [orig:211 D.5781 ] [211])
                (rotate:SI (reg:SI 41 r12 [orig:408 D.5781 ] [408])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 208 207 209 6 (parallel [
            (set (reg:SI 43 r14 [orig:212 D.5781 ] [212])
                (plus:SI (reg:SI 43 r14 [orig:187 D.5781 ] [187])
                    (reg:SI 41 r12 [orig:211 D.5781 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 209 208 210 6 (parallel [
            (set (reg:SI 6 bp [orig:409 D.5781 ] [409])
                (xor:SI (reg:SI 6 bp [orig:173 D.5781 ] [173])
                    (reg:SI 43 r14 [orig:212 D.5781 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 210 209 589 6 (parallel [
            (set (reg:SI 6 bp [orig:214 D.5781 ] [214])
                (rotatert:SI (reg:SI 6 bp [orig:409 D.5781 ] [409])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 589 210 591 6 (set (reg:SI 44 r15 [orig:410 D.5781 ] [410])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 124 [0x7c])) [6 %sfp+-148 S4 A32])) blake_ref.c:85 90 {*movsi_internal}
     (nil))
(note 591 589 777 6 NOTE_INSN_DELETED)
(note 777 591 211 6 NOTE_INSN_DELETED)
(insn 211 777 212 6 (parallel [
            (set (reg:SI 44 r15 [orig:410 D.5781 ] [410])
                (xor:SI (reg:SI 44 r15 [orig:410 D.5781 ] [410])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 64 [0x40])) [6 %sfp+-208 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 212 211 827 6 (parallel [
            (set (reg:SI 1 dx [orig:411 D.5781 ] [411])
                (plus:SI (reg:SI 1 dx [orig:209 D.5781 ] [209])
                    (reg:SI 44 r15 [orig:410 D.5781 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:410 D.5781 ] [410])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 827 212 767 6 (set (reg:SI 44 r15 [orig:217 v$0 ] [217])
        (plus:SI (reg:SI 1 dx [orig:411 D.5781 ] [411])
            (reg:SI 6 bp [orig:214 D.5781 ] [214]))) blake_ref.c:85 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:411 D.5781 ] [411])
        (nil)))
(insn 767 827 214 6 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 44 r15 [orig:217 v$0 ] [217])) blake_ref.c:85 90 {*movsi_internal}
     (nil))
(insn 214 767 215 6 (parallel [
            (set (reg:SI 41 r12 [orig:412 D.5781 ] [412])
                (xor:SI (reg:SI 41 r12 [orig:211 D.5781 ] [211])
                    (reg:SI 44 r15 [orig:217 v$0 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:217 v$0 ] [217])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 214 766 6 (parallel [
            (set (reg:SI 41 r12 [orig:219 v$15 ] [219])
                (rotatert:SI (reg:SI 41 r12 [orig:219 v$15 ] [219])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 766 215 216 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [6 %sfp+-244 S4 A32])
        (reg:SI 41 r12 [orig:219 v$15 ] [219])) blake_ref.c:85 90 {*movsi_internal}
     (nil))
(insn 216 766 765 6 (parallel [
            (set (reg:SI 43 r14 [orig:220 v$10 ] [220])
                (plus:SI (reg:SI 43 r14 [orig:220 v$10 ] [220])
                    (reg:SI 41 r12 [orig:219 v$15 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:219 v$15 ] [219])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 765 216 217 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-240 S4 A32])
        (reg:SI 43 r14 [orig:220 v$10 ] [220])) blake_ref.c:85 90 {*movsi_internal}
     (nil))
(insn 217 765 218 6 (parallel [
            (set (reg:SI 6 bp [orig:413 D.5781 ] [413])
                (xor:SI (reg:SI 6 bp [orig:214 D.5781 ] [214])
                    (reg:SI 43 r14 [orig:220 v$10 ] [220])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:220 v$10 ] [220])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 218 217 601 6 (parallel [
            (set (reg:SI 6 bp [orig:222 v$5 ] [222])
                (rotatert:SI (reg:SI 6 bp [orig:222 v$5 ] [222])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:85 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 601 218 602 6 (set (reg:SI 43 r14 [orig:222 v$5 ] [222])
        (reg:SI 6 bp [orig:222 v$5 ] [222])) blake_ref.c:85 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:222 v$5 ] [222])
        (nil)))
(insn 602 601 604 6 (set (reg:SI 1 dx [orig:414 D.5781 ] [414])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [6 %sfp+-144 S4 A32])) blake_ref.c:86 90 {*movsi_internal}
     (nil))
(note 604 602 787 6 NOTE_INSN_DELETED)
(note 787 604 219 6 NOTE_INSN_DELETED)
(insn 219 787 220 6 (parallel [
            (set (reg:SI 1 dx [orig:414 D.5781 ] [414])
                (xor:SI (reg:SI 1 dx [orig:414 D.5781 ] [414])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 68 [0x44])) [6 %sfp+-204 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 220 219 221 6 (parallel [
            (set (reg:SI 0 ax [orig:415 D.5781 ] [415])
                (plus:SI (reg:SI 0 ax [orig:168 D.5781 ] [168])
                    (reg:SI 1 dx [orig:414 D.5781 ] [414])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:414 D.5781 ] [414])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 6 (parallel [
            (set (reg:SI 0 ax [orig:225 D.5781 ] [225])
                (plus:SI (reg:SI 0 ax [orig:415 D.5781 ] [415])
                    (reg:SI 3 bx [orig:189 D.5781 ] [189])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 6 (parallel [
            (set (reg:SI 2 cx [orig:416 D.5781 ] [416])
                (xor:SI (reg:SI 2 cx [orig:154 D.5781 ] [154])
                    (reg:SI 0 ax [orig:225 D.5781 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 223 222 224 6 (parallel [
            (set (reg:SI 2 cx [orig:227 D.5781 ] [227])
                (rotate:SI (reg:SI 2 cx [orig:416 D.5781 ] [416])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 223 225 6 (parallel [
            (set (reg:SI 42 r13 [orig:228 D.5781 ] [228])
                (plus:SI (reg:SI 42 r13 [orig:203 D.5781 ] [203])
                    (reg:SI 2 cx [orig:227 D.5781 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 225 224 226 6 (parallel [
            (set (reg:SI 3 bx [orig:417 D.5781 ] [417])
                (xor:SI (reg:SI 3 bx [orig:189 D.5781 ] [189])
                    (reg:SI 42 r13 [orig:228 D.5781 ] [228])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 226 225 605 6 (parallel [
            (set (reg:SI 3 bx [orig:230 D.5781 ] [230])
                (rotatert:SI (reg:SI 3 bx [orig:417 D.5781 ] [417])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 605 226 607 6 (set (reg:SI 1 dx [orig:418 D.5781 ] [418])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 132 [0x84])) [6 %sfp+-140 S4 A32])) blake_ref.c:86 90 {*movsi_internal}
     (nil))
(note 607 605 786 6 NOTE_INSN_DELETED)
(note 786 607 227 6 NOTE_INSN_DELETED)
(insn 227 786 228 6 (parallel [
            (set (reg:SI 1 dx [orig:418 D.5781 ] [418])
                (xor:SI (reg:SI 1 dx [orig:418 D.5781 ] [418])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 72 [0x48])) [6 %sfp+-200 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 228 227 828 6 (parallel [
            (set (reg:SI 0 ax [orig:419 D.5781 ] [419])
                (plus:SI (reg:SI 0 ax [orig:225 D.5781 ] [225])
                    (reg:SI 1 dx [orig:418 D.5781 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:418 D.5781 ] [418])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 828 228 764 6 (set (reg:SI 44 r15 [orig:233 v$1 ] [233])
        (plus:SI (reg:SI 0 ax [orig:419 D.5781 ] [419])
            (reg:SI 3 bx [orig:230 D.5781 ] [230]))) blake_ref.c:86 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:419 D.5781 ] [419])
        (nil)))
(insn 764 828 230 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [6 %sfp+-268 S4 A32])
        (reg:SI 44 r15 [orig:233 v$1 ] [233])) blake_ref.c:86 90 {*movsi_internal}
     (nil))
(insn 230 764 231 6 (parallel [
            (set (reg:SI 2 cx [orig:420 D.5781 ] [420])
                (xor:SI (reg:SI 2 cx [orig:227 D.5781 ] [227])
                    (reg:SI 44 r15 [orig:233 v$1 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:233 v$1 ] [233])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 611 6 (parallel [
            (set (reg:SI 2 cx [orig:235 v$12 ] [235])
                (rotatert:SI (reg:SI 2 cx [orig:235 v$12 ] [235])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 611 231 829 6 (set (reg:SI 6 bp [orig:235 v$12 ] [235])
        (reg:SI 2 cx [orig:235 v$12 ] [235])) blake_ref.c:86 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:235 v$12 ] [235])
        (nil)))
(insn 829 611 763 6 (set (reg:SI 2 cx [orig:206 v$11 ] [206])
        (plus:SI (reg:SI 42 r13 [orig:228 D.5781 ] [228])
            (reg:SI 2 cx [orig:235 v$12 ] [235]))) blake_ref.c:86 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 42 r13 [orig:228 D.5781 ] [228])
        (nil)))
(insn 763 829 233 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-248 S4 A32])
        (reg:SI 2 cx [orig:206 v$11 ] [206])) blake_ref.c:86 90 {*movsi_internal}
     (nil))
(insn 233 763 234 6 (parallel [
            (set (reg:SI 3 bx [orig:421 D.5781 ] [421])
                (xor:SI (reg:SI 3 bx [orig:230 D.5781 ] [230])
                    (reg:SI 2 cx [orig:206 v$11 ] [206])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:206 v$11 ] [206])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 234 233 615 6 (parallel [
            (set (reg:SI 3 bx [orig:238 v$6 ] [238])
                (rotatert:SI (reg:SI 3 bx [orig:238 v$6 ] [238])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:86 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 615 234 616 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-264 S4 A32])
        (reg:SI 3 bx [orig:238 v$6 ] [238])) blake_ref.c:86 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:238 v$6 ] [238])
        (nil)))
(insn 616 615 618 6 (set (reg:SI 0 ax [orig:422 D.5781 ] [422])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [6 %sfp+-136 S4 A32])) blake_ref.c:87 90 {*movsi_internal}
     (nil))
(note 618 616 785 6 NOTE_INSN_DELETED)
(note 785 618 235 6 NOTE_INSN_DELETED)
(insn 235 785 236 6 (parallel [
            (set (reg:SI 0 ax [orig:422 D.5781 ] [422])
                (xor:SI (reg:SI 0 ax [orig:422 D.5781 ] [422])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 76 [0x4c])) [6 %sfp+-196 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 236 235 237 6 (parallel [
            (set (reg:SI 0 ax [orig:423 D.5781 ] [423])
                (plus:SI (reg:SI 0 ax [orig:422 D.5781 ] [422])
                    (reg:SI 38 r9 [orig:184 D.5781 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:184 D.5781 ] [184])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 237 236 238 6 (parallel [
            (set (reg:SI 0 ax [orig:241 D.5781 ] [241])
                (plus:SI (reg:SI 0 ax [orig:423 D.5781 ] [423])
                    (reg:SI 40 r11 [orig:205 D.5781 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 238 237 239 6 (parallel [
            (set (reg:SI 5 di [orig:424 D.5781 ] [424])
                (xor:SI (reg:SI 5 di [orig:170 D.5781 ] [170])
                    (reg:SI 0 ax [orig:241 D.5781 ] [241])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 239 238 619 6 (parallel [
            (set (reg:SI 5 di [orig:243 D.5781 ] [243])
                (rotate:SI (reg:SI 5 di [orig:424 D.5781 ] [424])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 619 239 240 6 (set (reg:SI 38 r9 [orig:155 D.5781 ] [155])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-232 S4 A32])) blake_ref.c:87 90 {*movsi_internal}
     (nil))
(insn 240 619 241 6 (parallel [
            (set (reg:SI 38 r9 [orig:244 D.5781 ] [244])
                (plus:SI (reg:SI 38 r9 [orig:155 D.5781 ] [155])
                    (reg:SI 5 di [orig:243 D.5781 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 241 240 242 6 (parallel [
            (set (reg:SI 40 r11 [orig:425 D.5781 ] [425])
                (xor:SI (reg:SI 40 r11 [orig:205 D.5781 ] [205])
                    (reg:SI 38 r9 [orig:244 D.5781 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 242 241 620 6 (parallel [
            (set (reg:SI 40 r11 [orig:247 D.5781 ] [247])
                (rotatert:SI (reg:SI 40 r11 [orig:425 D.5781 ] [425])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 620 242 622 6 (set (reg:SI 1 dx [orig:426 D.5781 ] [426])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 140 [0x8c])) [6 %sfp+-132 S4 A32])) blake_ref.c:87 90 {*movsi_internal}
     (nil))
(note 622 620 784 6 NOTE_INSN_DELETED)
(note 784 622 243 6 NOTE_INSN_DELETED)
(insn 243 784 244 6 (parallel [
            (set (reg:SI 1 dx [orig:426 D.5781 ] [426])
                (xor:SI (reg:SI 1 dx [orig:426 D.5781 ] [426])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 80 [0x50])) [6 %sfp+-192 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 830 6 (parallel [
            (set (reg:SI 0 ax [orig:427 D.5781 ] [427])
                (plus:SI (reg:SI 0 ax [orig:241 D.5781 ] [241])
                    (reg:SI 1 dx [orig:426 D.5781 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:426 D.5781 ] [426])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 830 244 762 6 (set (reg:SI 3 bx [orig:250 v$2 ] [250])
        (plus:SI (reg:SI 0 ax [orig:427 D.5781 ] [427])
            (reg:SI 40 r11 [orig:247 D.5781 ] [247]))) blake_ref.c:87 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:427 D.5781 ] [427])
        (nil)))
(insn 762 830 246 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])
        (reg:SI 3 bx [orig:250 v$2 ] [250])) blake_ref.c:87 90 {*movsi_internal}
     (nil))
(insn 246 762 247 6 (parallel [
            (set (reg:SI 5 di [orig:428 D.5781 ] [428])
                (xor:SI (reg:SI 5 di [orig:243 D.5781 ] [243])
                    (reg:SI 3 bx [orig:250 v$2 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:250 v$2 ] [250])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 247 246 248 6 (parallel [
            (set (reg:SI 5 di [orig:252 v$13 ] [252])
                (rotatert:SI (reg:SI 5 di [orig:428 D.5781 ] [428])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 248 247 249 6 (parallel [
            (set (reg:SI 38 r9 [orig:254 v$8 ] [254])
                (plus:SI (reg:SI 38 r9 [orig:244 D.5781 ] [244])
                    (reg:SI 5 di [orig:252 v$13 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 249 248 250 6 (parallel [
            (set (reg:SI 40 r11 [orig:429 D.5781 ] [429])
                (xor:SI (reg:SI 40 r11 [orig:247 D.5781 ] [247])
                    (reg:SI 38 r9 [orig:254 v$8 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 250 249 626 6 (parallel [
            (set (reg:SI 40 r11 [orig:256 v$7 ] [256])
                (rotatert:SI (reg:SI 40 r11 [orig:256 v$7 ] [256])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:87 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 626 250 627 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [6 %sfp+-260 S4 A32])
        (reg:SI 40 r11 [orig:256 v$7 ] [256])) blake_ref.c:87 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 40 r11 [orig:256 v$7 ] [256])
        (nil)))
(insn 627 626 629 6 (set (reg:SI 0 ax [orig:430 D.5781 ] [430])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 %sfp+-128 S4 A32])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(note 629 627 783 6 NOTE_INSN_DELETED)
(note 783 629 251 6 NOTE_INSN_DELETED)
(insn 251 783 252 6 (parallel [
            (set (reg:SI 0 ax [orig:430 D.5781 ] [430])
                (xor:SI (reg:SI 0 ax [orig:430 D.5781 ] [430])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 84 [0x54])) [6 %sfp+-188 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 252 251 761 6 (parallel [
            (set (reg:SI 39 r10 [orig:431 D.5781 ] [431])
                (plus:SI (reg:SI 39 r10 [orig:200 D.5781 ] [200])
                    (reg:SI 0 ax [orig:430 D.5781 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:430 D.5781 ] [430])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 761 252 253 6 (set (reg:SI 1 dx [orig:157 D.5781 ] [157])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 %sfp+-120 S4 A32])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(insn 253 761 631 6 (parallel [
            (set (reg:SI 39 r10 [orig:260 D.5781 ] [260])
                (plus:SI (reg:SI 39 r10 [orig:431 D.5781 ] [431])
                    (reg:SI 1 dx [orig:157 D.5781 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:157 D.5781 ] [157])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 631 253 254 6 (set (reg:SI 3 bx [orig:432 D.5781 ] [432])
        (reg:SI 37 r8 [orig:186 D.5781 ] [186])) blake_ref.c:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:186 D.5781 ] [186])
        (nil)))
(insn 254 631 255 6 (parallel [
            (set (reg:SI 3 bx [orig:432 D.5781 ] [432])
                (xor:SI (reg:SI 3 bx [orig:432 D.5781 ] [432])
                    (reg:SI 39 r10 [orig:260 D.5781 ] [260])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 255 254 633 6 (parallel [
            (set (reg:SI 3 bx [orig:262 D.5781 ] [262])
                (rotate:SI (reg:SI 3 bx [orig:432 D.5781 ] [432])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 586 {*rotlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 633 255 256 6 (set (reg:SI 0 ax [orig:171 D.5781 ] [171])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(insn 256 633 634 6 (parallel [
            (set (reg:SI 0 ax [orig:264 D.5781 ] [264])
                (plus:SI (reg:SI 0 ax [orig:171 D.5781 ] [171])
                    (reg:SI 3 bx [orig:262 D.5781 ] [262])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 634 256 257 6 (set (reg:SI 37 r8 [orig:433 D.5781 ] [433])
        (reg:SI 1 dx [orig:157 D.5781 ] [157])) blake_ref.c:88 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:157 D.5781 ] [157])
        (nil)))
(insn 257 634 258 6 (parallel [
            (set (reg:SI 37 r8 [orig:433 D.5781 ] [433])
                (xor:SI (reg:SI 37 r8 [orig:433 D.5781 ] [433])
                    (reg:SI 0 ax [orig:264 D.5781 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 258 257 636 6 (parallel [
            (set (reg:SI 37 r8 [orig:266 D.5781 ] [266])
                (rotatert:SI (reg:SI 37 r8 [orig:433 D.5781 ] [433])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 636 258 638 6 (set (reg:SI 1 dx [orig:434 D.5781 ] [434])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 148 [0x94])) [6 %sfp+-124 S4 A32])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(note 638 636 782 6 NOTE_INSN_DELETED)
(note 782 638 259 6 NOTE_INSN_DELETED)
(insn 259 782 260 6 (parallel [
            (set (reg:SI 1 dx [orig:434 D.5781 ] [434])
                (xor:SI (reg:SI 1 dx [orig:434 D.5781 ] [434])
                    (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 88 [0x58])) [6 %sfp+-184 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 260 259 831 6 (parallel [
            (set (reg:SI 39 r10 [orig:435 D.5781 ] [435])
                (plus:SI (reg:SI 39 r10 [orig:260 D.5781 ] [260])
                    (reg:SI 1 dx [orig:434 D.5781 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:434 D.5781 ] [434])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 831 260 760 6 (set (reg:SI 1 dx [orig:270 v$3 ] [270])
        (plus:SI (reg:SI 39 r10 [orig:435 D.5781 ] [435])
            (reg:SI 37 r8 [orig:266 D.5781 ] [266]))) blake_ref.c:88 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:435 D.5781 ] [435])
        (nil)))
(insn 760 831 262 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 20 [0x14])) [6 %sfp+-252 S4 A32])
        (reg:SI 1 dx [orig:270 v$3 ] [270])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(insn 262 760 263 6 (parallel [
            (set (reg:SI 3 bx [orig:436 D.5781 ] [436])
                (xor:SI (reg:SI 3 bx [orig:262 D.5781 ] [262])
                    (reg:SI 1 dx [orig:270 v$3 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 263 262 264 6 (parallel [
            (set (reg:SI 3 bx [orig:273 v$14 ] [273])
                (rotatert:SI (reg:SI 3 bx [orig:436 D.5781 ] [436])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 264 263 759 6 (parallel [
            (set (reg:SI 0 ax [orig:274 v$9 ] [274])
                (plus:SI (reg:SI 0 ax [orig:264 D.5781 ] [264])
                    (reg:SI 3 bx [orig:273 v$14 ] [273])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 759 264 265 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])
        (reg:SI 0 ax [orig:274 v$9 ] [274])) blake_ref.c:88 90 {*movsi_internal}
     (nil))
(insn 265 759 266 6 (parallel [
            (set (reg:SI 37 r8 [orig:437 D.5781 ] [437])
                (xor:SI (reg:SI 37 r8 [orig:266 D.5781 ] [266])
                    (reg:SI 0 ax [orig:274 v$9 ] [274])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:274 v$9 ] [274])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 266 265 267 6 (parallel [
            (set (reg:SI 37 r8 [orig:276 v$4 ] [276])
                (rotatert:SI (reg:SI 37 r8 [orig:437 D.5781 ] [437])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:88 587 {*rotrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 267 266 268 6 NOTE_INSN_DELETED)
(insn 268 267 643 6 (parallel [
            (set (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                (plus:DI (reg:DI 4 si [orig:281 ivtmp.77 ] [281])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 643 268 780 6 NOTE_INSN_DELETED)
(note 780 643 269 6 NOTE_INSN_DELETED)
(insn 269 780 781 6 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                                (const_int 156 [0x9c])) [6 %sfp+-116 S4 A32])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                        (const_int 156 [0x9c])) [6 %sfp+-116 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 156 [0x9c])) [6 %sfp+-116 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
        ]) blake_ref.c:76 225 {*addsi_2}
     (nil))
(note 781 269 644 6 NOTE_INSN_DELETED)
(note 644 781 270 6 NOTE_INSN_DELETED)
(jump_insn 270 644 373 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 867)
            (pc))) blake_ref.c:76 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9333 (nil)))
 -> 867)
;;  succ:       5 [93.3%]  (CAN_FALLTHRU)
;;              7 [6.7%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 667, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [6.7%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 43 [r14]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 373 270 676 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 676 373 675 7 (set (reg:SI 22 xmm1 [487])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 675 676 677 7 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])
        (reg:SI 1 dx [orig:270 v$3 ] [270])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 44 r15 [orig:270 v$3 ] [270])
        (nil)))
(insn 677 675 375 7 (set (reg:SI 26 xmm5 [orig:270 v$3 ] [270])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-256 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 375 677 679 7 (set (reg:V2SI 22 xmm1 [487])
        (vec_concat:V2SI (reg:SI 22 xmm1 [487])
            (reg:SI 26 xmm5 [orig:270 v$3 ] [270]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:270 v$3 ] [270])
        (nil)))
(insn 679 375 681 7 (set (reg:SI 21 xmm0 [488])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 681 679 376 7 (set (reg:SI 26 xmm5 [orig:233 v$1 ] [233])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 4 [0x4])) [6 %sfp+-268 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 376 681 683 7 (set (reg:V2SI 21 xmm0 [488])
        (vec_concat:V2SI (reg:SI 21 xmm0 [488])
            (reg:SI 26 xmm5 [orig:233 v$1 ] [233]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:233 v$1 ] [233])
        (nil)))
(insn 683 376 377 7 (set (reg:V2SI 25 xmm4 [orig:486 vect_cst_.55 ] [486])
        (reg:V2SI 21 xmm0 [488])) 1076 {*movv2si_internal}
     (expr_list:REG_DEAD (reg:V2SI 21 xmm0 [488])
        (nil)))
(insn 377 683 684 7 (set (reg:V4SI 25 xmm4 [orig:486 vect_cst_.55 ] [486])
        (vec_concat:V4SI (reg:V2SI 25 xmm4 [orig:486 vect_cst_.55 ] [486])
            (reg:V2SI 22 xmm1 [487]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [487])
        (nil)))
(insn 684 377 686 7 (set (reg:V4SI 22 xmm1 [orig:486 vect_cst_.55 ] [486])
        (reg:V4SI 25 xmm4 [orig:486 vect_cst_.55 ] [486])) 1194 {*movv4si_internal}
     (expr_list:REG_DEAD (reg:V4SI 25 xmm4 [orig:486 vect_cst_.55 ] [486])
        (nil)))
(insn 686 684 688 7 (set (reg:SI 23 xmm2 [490])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-240 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 688 686 378 7 (set (reg:SI 26 xmm5 [orig:206 v$11 ] [206])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-248 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 378 688 690 7 (set (reg:V2SI 23 xmm2 [490])
        (vec_concat:V2SI (reg:SI 23 xmm2 [490])
            (reg:SI 26 xmm5 [orig:206 v$11 ] [206]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:206 v$11 ] [206])
        (nil)))
(insn 690 378 693 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 38 r9 [orig:254 v$8 ] [254])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:254 v$8 ] [254])
        (nil)))
(insn 693 690 692 7 (set (reg:SI 21 xmm0 [491])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 692 693 379 7 (set (reg:SI 25 xmm4 [orig:274 v$9 ] [274])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 36 [0x24])) [6 %sfp+-236 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 379 692 380 7 (set (reg:V2SI 21 xmm0 [491])
        (vec_concat:V2SI (reg:SI 21 xmm0 [491])
            (reg:SI 25 xmm4 [orig:274 v$9 ] [274]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:274 v$9 ] [274])
        (nil)))
(insn 380 379 381 7 (set (reg:V4SI 21 xmm0 [orig:489 vect_cst_.58 ] [489])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [491])
            (reg:V2SI 23 xmm2 [490]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 23 xmm2 [490])
        (nil)))
(insn 381 380 695 7 (set (reg:V4SI 21 xmm0 [orig:492 D.5780 ] [492])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:489 vect_cst_.58 ] [489])
            (reg:V4SI 22 xmm1 [orig:486 vect_cst_.55 ] [486]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [orig:486 vect_cst_.55 ] [486])
        (nil)))
(insn 695 381 697 7 (set (reg:SI 22 xmm1 [494])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [6 %sfp+-72 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 697 695 382 7 (set (reg:SI 26 xmm5 [orig:139 D.5781 ] [139])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 204 [0xcc])) [6 %sfp+-68 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 382 697 699 7 (set (reg:V2SI 22 xmm1 [494])
        (vec_concat:V2SI (reg:SI 22 xmm1 [494])
            (reg:SI 26 xmm5 [orig:139 D.5781 ] [139]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:139 D.5781 ] [139])
        (nil)))
(insn 699 382 701 7 (set (reg:SI 24 xmm3 [495])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 %sfp+-80 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 701 699 383 7 (set (reg:SI 25 xmm4 [orig:137 D.5781 ] [137])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 196 [0xc4])) [6 %sfp+-76 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 383 701 384 7 (set (reg:V2SI 24 xmm3 [495])
        (vec_concat:V2SI (reg:SI 24 xmm3 [495])
            (reg:SI 25 xmm4 [orig:137 D.5781 ] [137]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:137 D.5781 ] [137])
        (nil)))
(insn 384 383 385 7 (set (reg:V4SI 24 xmm3 [orig:493 vect_cst_.52 ] [493])
        (vec_concat:V4SI (reg:V2SI 24 xmm3 [495])
            (reg:V2SI 22 xmm1 [494]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [494])
        (nil)))
(insn 385 384 703 7 (set (reg:V4SI 21 xmm0 [orig:496 D.5780 ] [496])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:492 D.5780 ] [492])
            (reg:V4SI 24 xmm3 [orig:493 vect_cst_.52 ] [493]))) blake_ref.c:93 3431 {*xorv4si3}
     (nil))
(insn 703 385 705 7 (set (reg:SI 23 xmm2 [498])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 %sfp+-104 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 705 703 386 7 (set (reg:SI 26 xmm5 [orig:131 v$3 ] [131])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 172 [0xac])) [6 %sfp+-100 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 386 705 707 7 (set (reg:V2SI 23 xmm2 [498])
        (vec_concat:V2SI (reg:SI 23 xmm2 [498])
            (reg:SI 26 xmm5 [orig:131 v$3 ] [131]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:131 v$3 ] [131])
        (nil)))
(insn 707 386 709 7 (set (reg:SI 22 xmm1 [499])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 %sfp+-112 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 709 707 387 7 (set (reg:SI 25 xmm4 [orig:129 v$1 ] [129])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 164 [0xa4])) [6 %sfp+-108 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 387 709 388 7 (set (reg:V2SI 22 xmm1 [499])
        (vec_concat:V2SI (reg:SI 22 xmm1 [499])
            (reg:SI 25 xmm4 [orig:129 v$1 ] [129]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:129 v$1 ] [129])
        (nil)))
(insn 388 387 389 7 (set (reg:V4SI 22 xmm1 [orig:497 vect_cst_.50 ] [497])
        (vec_concat:V4SI (reg:V2SI 22 xmm1 [499])
            (reg:V2SI 23 xmm2 [498]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 23 xmm2 [498])
        (nil)))
(insn 389 388 710 7 (set (reg:V4SI 21 xmm0 [orig:500 vect__497.56 ] [500])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:496 D.5780 ] [496])
            (reg:V4SI 22 xmm1 [orig:497 vect_cst_.50 ] [497]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [orig:497 vect_cst_.50 ] [497])
        (nil)))
(insn 710 389 390 7 (set (reg:DI 0 ax [721])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [4 state+0 S8 A64])) blake_ref.c:93 89 {*movdi_internal}
     (nil))
(insn 390 710 712 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [721])
                (const_int 16 [0x10])) [2 MEM[(unsigned int *)state_246(D) + 16B]+0 S16 A32])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:500 vect__497.56 ] [500])
            ] UNSPEC_STOREU)) blake_ref.c:93 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:500 vect__497.56 ] [500])
        (nil)))
(insn 712 390 715 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 3 bx [orig:273 v$14 ] [273])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:273 v$14 ] [273])
        (nil)))
(insn 715 712 714 7 (set (reg:SI 22 xmm1 [502])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 714 715 392 7 (set (reg:SI 26 xmm5 [orig:219 v$15 ] [219])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [6 %sfp+-244 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 392 714 717 7 (set (reg:V2SI 22 xmm1 [502])
        (vec_concat:V2SI (reg:SI 22 xmm1 [502])
            (reg:SI 26 xmm5 [orig:219 v$15 ] [219]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:219 v$15 ] [219])
        (nil)))
(insn 717 392 720 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 6 bp [orig:235 v$12 ] [235])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:235 v$12 ] [235])
        (nil)))
(insn 720 717 719 7 (set (reg:SI 21 xmm0 [503])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 719 720 778 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 5 di [orig:252 v$13 ] [252])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:252 v$13 ] [252])
        (nil)))
(insn 778 719 393 7 (set (reg:SI 25 xmm4 [orig:252 v$13 ] [252])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 393 778 394 7 (set (reg:V2SI 21 xmm0 [503])
        (vec_concat:V2SI (reg:SI 21 xmm0 [503])
            (reg:SI 25 xmm4 [orig:252 v$13 ] [252]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:252 v$13 ] [252])
        (nil)))
(insn 394 393 722 7 (set (reg:V4SI 21 xmm0 [orig:501 vect_cst_.54 ] [501])
        (vec_concat:V4SI (reg:V2SI 21 xmm0 [503])
            (reg:V2SI 22 xmm1 [502]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [502])
        (nil)))
(insn 722 394 724 7 (set (reg:SI 23 xmm2 [505])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-264 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 724 722 395 7 (set (reg:SI 26 xmm5 [orig:256 v$7 ] [256])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [6 %sfp+-260 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 395 724 726 7 (set (reg:V2SI 23 xmm2 [505])
        (vec_concat:V2SI (reg:SI 23 xmm2 [505])
            (reg:SI 26 xmm5 [orig:256 v$7 ] [256]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:256 v$7 ] [256])
        (nil)))
(insn 726 395 729 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 37 r8 [orig:276 v$4 ] [276])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [orig:276 v$4 ] [276])
        (nil)))
(insn 729 726 728 7 (set (reg:SI 22 xmm1 [506])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 728 729 730 7 (set (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])
        (reg:SI 43 r14 [orig:222 v$5 ] [222])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:222 v$5 ] [222])
        (nil)))
(insn 730 728 396 7 (set (reg:SI 25 xmm4 [orig:222 v$5 ] [222])
        (mem/c:SI (reg/f:DI 7 sp) [6 %sfp+-272 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 396 730 397 7 (set (reg:V2SI 22 xmm1 [506])
        (vec_concat:V2SI (reg:SI 22 xmm1 [506])
            (reg:SI 25 xmm4 [orig:222 v$5 ] [222]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:222 v$5 ] [222])
        (nil)))
(insn 397 396 398 7 (set (reg:V4SI 22 xmm1 [orig:504 vect_cst_.57 ] [504])
        (vec_concat:V4SI (reg:V2SI 22 xmm1 [506])
            (reg:V2SI 23 xmm2 [505]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 23 xmm2 [505])
        (nil)))
(insn 398 397 402 7 (set (reg:V4SI 21 xmm0 [orig:507 D.5780 ] [507])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:501 vect_cst_.54 ] [501])
            (reg:V4SI 22 xmm1 [orig:504 vect_cst_.57 ] [504]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 22 xmm1 [orig:504 vect_cst_.57 ] [504])
        (nil)))
(insn 402 398 732 7 (set (reg:V4SI 21 xmm0 [orig:511 D.5780 ] [511])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:507 D.5780 ] [507])
            (reg:V4SI 24 xmm3 [orig:493 vect_cst_.52 ] [493]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:493 vect_cst_.52 ] [493])
        (nil)))
(insn 732 402 734 7 (set (reg:SI 22 xmm1 [513])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 %sfp+-88 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 734 732 403 7 (set (reg:SI 26 xmm5 [orig:135 v$7 ] [135])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 188 [0xbc])) [6 %sfp+-84 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 403 734 736 7 (set (reg:V2SI 22 xmm1 [513])
        (vec_concat:V2SI (reg:SI 22 xmm1 [513])
            (reg:SI 26 xmm5 [orig:135 v$7 ] [135]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 26 xmm5 [orig:135 v$7 ] [135])
        (nil)))
(insn 736 403 738 7 (set (reg:SI 24 xmm3 [514])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-96 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 738 736 404 7 (set (reg:SI 25 xmm4 [orig:133 v$5 ] [133])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 180 [0xb4])) [6 %sfp+-92 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 404 738 405 7 (set (reg:V2SI 24 xmm3 [514])
        (vec_concat:V2SI (reg:SI 24 xmm3 [514])
            (reg:SI 25 xmm4 [orig:133 v$5 ] [133]))) 3671 {*vec_concatv2si}
     (expr_list:REG_DEAD (reg:SI 25 xmm4 [orig:133 v$5 ] [133])
        (nil)))
(insn 405 404 406 7 (set (reg:V4SI 24 xmm3 [orig:512 vect_cst_.49 ] [512])
        (vec_concat:V4SI (reg:V2SI 24 xmm3 [514])
            (reg:V2SI 22 xmm1 [513]))) 3672 {*vec_concatv4si}
     (expr_list:REG_DEAD (reg:V2SI 22 xmm1 [513])
        (nil)))
(insn 406 405 407 7 (set (reg:V4SI 21 xmm0 [orig:515 vect__497.56 ] [515])
        (xor:V4SI (reg:V4SI 21 xmm0 [orig:511 D.5780 ] [511])
            (reg:V4SI 24 xmm3 [orig:512 vect_cst_.49 ] [512]))) blake_ref.c:93 3431 {*xorv4si3}
     (expr_list:REG_DEAD (reg:V4SI 24 xmm3 [orig:512 vect_cst_.49 ] [512])
        (nil)))
(insn 407 406 862 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [738])
                (const_int 32 [0x20])) [2 MEM[(unsigned int *)state_246(D) + 32B]+0 S16 A32])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:515 vect__497.56 ] [515])
            ] UNSPEC_STOREU)) blake_ref.c:93 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:515 vect__497.56 ] [515])
        (expr_list:REG_DEAD (reg:DI 0 ax [738])
            (nil))))
(insn 862 407 413 7 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:103 83 {*movdi_xor}
     (nil))
(insn 413 862 843 7 (use (reg/i:SI 0 ax)) blake_ref.c:103 -1
     (nil))
(note 843 413 844 7 NOTE_INSN_EPILOGUE_BEG)
(insn 844 843 845 7 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:103 677 {blockage}
     (nil))
(insn/f 845 844 846 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 280 [0x118])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:103 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 280 [0x118])))
            (nil))))
(insn/f 846 845 847 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 847 846 848 7 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
            (nil))))
(insn/f 848 847 849 7 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(insn/f 849 848 850 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(insn/f 850 849 851 7 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
            (nil))))
(insn/f 851 850 852 7 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
            (nil))))
(insn/f 852 851 853 7 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
            (nil))))
(insn/f 853 852 854 7 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:103 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 44 r15)
            (nil))))
(jump_insn 854 853 855 7 (simple_return) blake_ref.c:103 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 855 854 418)
;; basic block 8, loop depth 0, count 0, freq 334, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 3 [bx] 6 [bp]
;; live  in  	 5 [di] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 2 [cx] 3 [bx] 6 [bp]
;; live  kill	
(code_label 418 855 417 8 5 "" [1 uses])
(note 417 418 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 31 417 32 8 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 28 [0x1c])) [6 %sfp+-244 S4 A32])
        (const_int -330404727 [0xffffffffec4e6c89])) blake_ref.c:66 90 {*movsi_internal}
     (nil))
(insn 32 31 33 8 (set (reg:SI 3 bx [orig:273 v$14 ] [273])
        (const_int 137296536 [0x82efa98])) blake_ref.c:65 90 {*movsi_internal}
     (nil))
(insn 33 32 34 8 (set (reg:SI 2 cx [orig:252 v$13 ] [252])
        (const_int 698298832 [0x299f31d0])) blake_ref.c:64 90 {*movsi_internal}
     (nil))
(insn 34 33 868 8 (set (reg:SI 6 bp [orig:235 v$12 ] [235])
        (const_int -1542899678 [0xffffffffa4093822])) blake_ref.c:63 90 {*movsi_internal}
     (nil))
(jump_insn 868 34 869 8 (set (pc)
        (label_ref 135)) -1
     (nil)
 -> 135)
;;  succ:       4 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 39 [r10] 40 [r11]

(barrier 869 868 447)
(note 447 869 0 NOTE_INSN_DELETED)

;; Function compress64 (compress64, funcdef_no=12, decl_uid=3221, cgraph_uid=12, symbol_order=20)



compress64

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={93d,116u} r1={24d,45u,31e} r2={17d,51u} r3={17d,22u} r4={8d,23u} r5={18d,24u} r6={13d,16u} r7={19d,245u} r16={1e} r17={138d,2u} r21={21d,20u} r22={13d,12u} r23={5d,5u} r24={5d,5u} r37={19d,25u} r38={19d,25u} r39={17d,19u} r40={15d,20u} r41={20d,31u,7e} r42={12d,15u} r43={26d,38u} r44={14d,20u} 
;;    total ref usage 1351{533d,779u,39e} in 502{502 regular + 0 call} insns.
(note 5 0 38 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 38 [r9] 40 [r11] 41 [r12] 43 [r14] 44 [r15]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 38 [r9] 40 [r11] 41 [r12] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 38 5 789 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 789 38 790 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 790 789 791 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 791 790 792 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 792 791 793 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 793 792 794 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 794 793 795 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 795 794 796 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 4 si)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si)
        (nil)))
(insn/f 796 795 797 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:106 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 797 796 798 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -552 [0xfffffffffffffdd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:106 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -552 [0xfffffffffffffdd8])))
            (nil))))
(insn 798 797 799 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:106 679 {prologue_use}
     (nil))
(note 799 798 6 2 NOTE_INSN_PROLOGUE_END)
(insn 6 799 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 624 [0x270])) [4 state+0 S8 A64])
        (reg:DI 2 cx [ state ])) blake_ref.c:106 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
        (nil)))
(note 8 6 40 2 NOTE_INSN_FUNCTION_BEG)
(insn 40 8 41 2 (set (reg:DI 40 r11 [orig:352 MEM[(const BitSequence *)datablock_5(D)] ] [352])
        (mem:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8])
        (nil)))
(insn 41 40 42 2 (set (reg:DI 40 r11 [orig:287 D.5867 ] [287])
        (bswap:DI (reg:DI 40 r11 [orig:352 MEM[(const BitSequence *)datablock_5(D)] ] [352]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351]) [0 MEM[(const BitSequence *)datablock_5(D)]+0 S8 A8]))
        (nil)))
(insn 42 41 43 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 416 [0x1a0])) [3 m+0 S8 A128])
        (reg:DI 40 r11 [orig:287 D.5867 ] [287])) blake_ref.c:129 89 {*movdi_internal}
     (nil))
(insn 43 42 434 2 (set (reg:DI 6 bp [orig:353 MEM[(const BitSequence *)datablock_5(D) + 8B] ] [353])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8])
        (nil)))
(insn 434 43 44 2 (set (reg:DI 5 di [orig:291 D.5867 ] [291])
        (reg:DI 6 bp [orig:353 MEM[(const BitSequence *)datablock_5(D) + 8B] ] [353])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:353 MEM[(const BitSequence *)datablock_5(D) + 8B] ] [353])
        (nil)))
(insn 44 434 45 2 (set (reg:DI 5 di [orig:291 D.5867 ] [291])
        (bswap:DI (reg:DI 5 di [orig:291 D.5867 ] [291]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 8 [0x8])) [0 MEM[(const BitSequence *)datablock_5(D) + 8B]+0 S8 A8]))
        (nil)))
(insn 45 44 46 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 424 [0x1a8])) [3 m+8 S8 A64])
        (reg:DI 5 di [orig:291 D.5867 ] [291])) blake_ref.c:130 89 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:DI 38 r9 [orig:354 MEM[(const BitSequence *)datablock_5(D) + 16B] ] [354])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8])
        (nil)))
(insn 47 46 734 2 (set (reg:DI 38 r9 [orig:295 D.5867 ] [295])
        (bswap:DI (reg:DI 38 r9 [orig:295 D.5867 ] [295]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 16 [0x10])) [0 MEM[(const BitSequence *)datablock_5(D) + 16B]+0 S8 A8]))
        (nil)))
(insn 734 47 48 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 %sfp+-352 S8 A64])
        (reg:DI 38 r9 [orig:295 D.5867 ] [295])) 89 {*movdi_internal}
     (nil))
(insn 48 734 49 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 432 [0x1b0])) [3 m+16 S8 A128])
        (reg:DI 38 r9 [orig:295 D.5867 ] [295])) blake_ref.c:131 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [orig:295 D.5867 ] [295])
        (nil)))
(insn 49 48 50 2 (set (reg:DI 0 ax [orig:355 MEM[(const BitSequence *)datablock_5(D) + 24B] ] [355])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8])
        (nil)))
(insn 50 49 733 2 (set (reg:DI 0 ax [orig:299 D.5867 ] [299])
        (bswap:DI (reg:DI 0 ax [orig:299 D.5867 ] [299]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 24 [0x18])) [0 MEM[(const BitSequence *)datablock_5(D) + 24B]+0 S8 A8]))
        (nil)))
(insn 733 50 51 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [6 %sfp+-344 S8 A64])
        (reg:DI 0 ax [orig:299 D.5867 ] [299])) 89 {*movdi_internal}
     (nil))
(insn 51 733 52 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 440 [0x1b8])) [3 m+24 S8 A64])
        (reg:DI 0 ax [orig:299 D.5867 ] [299])) blake_ref.c:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:299 D.5867 ] [299])
        (nil)))
(insn 52 51 53 2 (set (reg:DI 0 ax [orig:356 MEM[(const BitSequence *)datablock_5(D) + 32B] ] [356])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8])
        (nil)))
(insn 53 52 732 2 (set (reg:DI 0 ax [orig:303 D.5867 ] [303])
        (bswap:DI (reg:DI 0 ax [orig:303 D.5867 ] [303]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 32 [0x20])) [0 MEM[(const BitSequence *)datablock_5(D) + 32B]+0 S8 A8]))
        (nil)))
(insn 732 53 54 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [6 %sfp+-336 S8 A64])
        (reg:DI 0 ax [orig:303 D.5867 ] [303])) 89 {*movdi_internal}
     (nil))
(insn 54 732 55 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 448 [0x1c0])) [3 m+32 S8 A128])
        (reg:DI 0 ax [orig:303 D.5867 ] [303])) blake_ref.c:133 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:303 D.5867 ] [303])
        (nil)))
(insn 55 54 56 2 (set (reg:DI 0 ax [orig:357 MEM[(const BitSequence *)datablock_5(D) + 40B] ] [357])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8])
        (nil)))
(insn 56 55 731 2 (set (reg:DI 0 ax [orig:307 D.5867 ] [307])
        (bswap:DI (reg:DI 0 ax [orig:307 D.5867 ] [307]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 40 [0x28])) [0 MEM[(const BitSequence *)datablock_5(D) + 40B]+0 S8 A8]))
        (nil)))
(insn 731 56 57 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 %sfp+-328 S8 A64])
        (reg:DI 0 ax [orig:307 D.5867 ] [307])) 89 {*movdi_internal}
     (nil))
(insn 57 731 58 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 456 [0x1c8])) [3 m+40 S8 A64])
        (reg:DI 0 ax [orig:307 D.5867 ] [307])) blake_ref.c:134 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:307 D.5867 ] [307])
        (nil)))
(insn 58 57 59 2 (set (reg:DI 3 bx [orig:358 MEM[(const BitSequence *)datablock_5(D) + 48B] ] [358])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8])
        (nil)))
(insn 59 58 730 2 (set (reg:DI 3 bx [orig:311 D.5867 ] [311])
        (bswap:DI (reg:DI 3 bx [orig:311 D.5867 ] [311]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 48 [0x30])) [0 MEM[(const BitSequence *)datablock_5(D) + 48B]+0 S8 A8]))
        (nil)))
(insn 730 59 60 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [6 %sfp+-320 S8 A64])
        (reg:DI 3 bx [orig:311 D.5867 ] [311])) 89 {*movdi_internal}
     (nil))
(insn 60 730 61 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 464 [0x1d0])) [3 m+48 S8 A128])
        (reg:DI 3 bx [orig:311 D.5867 ] [311])) blake_ref.c:135 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:311 D.5867 ] [311])
        (nil)))
(insn 61 60 62 2 (set (reg:DI 3 bx [orig:359 MEM[(const BitSequence *)datablock_5(D) + 56B] ] [359])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8])
        (nil)))
(insn 62 61 729 2 (set (reg:DI 3 bx [orig:315 D.5867 ] [315])
        (bswap:DI (reg:DI 3 bx [orig:315 D.5867 ] [315]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 56 [0x38])) [0 MEM[(const BitSequence *)datablock_5(D) + 56B]+0 S8 A8]))
        (nil)))
(insn 729 62 63 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [6 %sfp+-312 S8 A64])
        (reg:DI 3 bx [orig:315 D.5867 ] [315])) 89 {*movdi_internal}
     (nil))
(insn 63 729 64 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 472 [0x1d8])) [3 m+56 S8 A64])
        (reg:DI 3 bx [orig:315 D.5867 ] [315])) blake_ref.c:136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:315 D.5867 ] [315])
        (nil)))
(insn 64 63 65 2 (set (reg:DI 0 ax [orig:360 MEM[(const BitSequence *)datablock_5(D) + 64B] ] [360])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8])
        (nil)))
(insn 65 64 728 2 (set (reg:DI 0 ax [orig:319 D.5867 ] [319])
        (bswap:DI (reg:DI 0 ax [orig:319 D.5867 ] [319]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 64 [0x40])) [0 MEM[(const BitSequence *)datablock_5(D) + 64B]+0 S8 A8]))
        (nil)))
(insn 728 65 66 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [6 %sfp+-304 S8 A64])
        (reg:DI 0 ax [orig:319 D.5867 ] [319])) 89 {*movdi_internal}
     (nil))
(insn 66 728 67 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 480 [0x1e0])) [3 m+64 S8 A128])
        (reg:DI 0 ax [orig:319 D.5867 ] [319])) blake_ref.c:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:319 D.5867 ] [319])
        (nil)))
(insn 67 66 68 2 (set (reg:DI 0 ax [orig:361 MEM[(const BitSequence *)datablock_5(D) + 72B] ] [361])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8])
        (nil)))
(insn 68 67 727 2 (set (reg:DI 0 ax [orig:323 D.5867 ] [323])
        (bswap:DI (reg:DI 0 ax [orig:323 D.5867 ] [323]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 72 [0x48])) [0 MEM[(const BitSequence *)datablock_5(D) + 72B]+0 S8 A8]))
        (nil)))
(insn 727 68 69 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [6 %sfp+-296 S8 A64])
        (reg:DI 0 ax [orig:323 D.5867 ] [323])) 89 {*movdi_internal}
     (nil))
(insn 69 727 70 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 488 [0x1e8])) [3 m+72 S8 A64])
        (reg:DI 0 ax [orig:323 D.5867 ] [323])) blake_ref.c:138 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:323 D.5867 ] [323])
        (nil)))
(insn 70 69 71 2 (set (reg:DI 43 r14 [orig:362 MEM[(const BitSequence *)datablock_5(D) + 80B] ] [362])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8])
        (nil)))
(insn 71 70 726 2 (set (reg:DI 43 r14 [orig:327 D.5867 ] [327])
        (bswap:DI (reg:DI 43 r14 [orig:327 D.5867 ] [327]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 80 [0x50])) [0 MEM[(const BitSequence *)datablock_5(D) + 80B]+0 S8 A8]))
        (nil)))
(insn 726 71 72 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [6 %sfp+-288 S8 A64])
        (reg:DI 43 r14 [orig:327 D.5867 ] [327])) 89 {*movdi_internal}
     (nil))
(insn 72 726 73 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 496 [0x1f0])) [3 m+80 S8 A128])
        (reg:DI 43 r14 [orig:327 D.5867 ] [327])) blake_ref.c:139 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:327 D.5867 ] [327])
        (nil)))
(insn 73 72 74 2 (set (reg:DI 43 r14 [orig:363 MEM[(const BitSequence *)datablock_5(D) + 88B] ] [363])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8])
        (nil)))
(insn 74 73 725 2 (set (reg:DI 43 r14 [orig:331 D.5867 ] [331])
        (bswap:DI (reg:DI 43 r14 [orig:331 D.5867 ] [331]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 88 [0x58])) [0 MEM[(const BitSequence *)datablock_5(D) + 88B]+0 S8 A8]))
        (nil)))
(insn 725 74 75 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [6 %sfp+-280 S8 A64])
        (reg:DI 43 r14 [orig:331 D.5867 ] [331])) 89 {*movdi_internal}
     (nil))
(insn 75 725 76 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 504 [0x1f8])) [3 m+88 S8 A64])
        (reg:DI 43 r14 [orig:331 D.5867 ] [331])) blake_ref.c:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:331 D.5867 ] [331])
        (nil)))
(insn 76 75 77 2 (set (reg:DI 0 ax [orig:364 MEM[(const BitSequence *)datablock_5(D) + 96B] ] [364])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8])
        (nil)))
(insn 77 76 724 2 (set (reg:DI 0 ax [orig:335 D.5867 ] [335])
        (bswap:DI (reg:DI 0 ax [orig:335 D.5867 ] [335]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 96 [0x60])) [0 MEM[(const BitSequence *)datablock_5(D) + 96B]+0 S8 A8]))
        (nil)))
(insn 724 77 78 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [6 %sfp+-272 S8 A64])
        (reg:DI 0 ax [orig:335 D.5867 ] [335])) 89 {*movdi_internal}
     (nil))
(insn 78 724 79 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 512 [0x200])) [3 m+96 S8 A128])
        (reg:DI 0 ax [orig:335 D.5867 ] [335])) blake_ref.c:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:335 D.5867 ] [335])
        (nil)))
(insn 79 78 80 2 (set (reg:DI 0 ax [orig:365 MEM[(const BitSequence *)datablock_5(D) + 104B] ] [365])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8])
        (nil)))
(insn 80 79 723 2 (set (reg:DI 0 ax [orig:339 D.5867 ] [339])
        (bswap:DI (reg:DI 0 ax [orig:339 D.5867 ] [339]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 104 [0x68])) [0 MEM[(const BitSequence *)datablock_5(D) + 104B]+0 S8 A8]))
        (nil)))
(insn 723 80 81 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [6 %sfp+-264 S8 A64])
        (reg:DI 0 ax [orig:339 D.5867 ] [339])) 89 {*movdi_internal}
     (nil))
(insn 81 723 82 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 520 [0x208])) [3 m+104 S8 A64])
        (reg:DI 0 ax [orig:339 D.5867 ] [339])) blake_ref.c:142 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:339 D.5867 ] [339])
        (nil)))
(insn 82 81 83 2 (set (reg:DI 44 r15 [orig:366 MEM[(const BitSequence *)datablock_5(D) + 112B] ] [366])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8])
        (nil)))
(insn 83 82 722 2 (set (reg:DI 44 r15 [orig:343 D.5867 ] [343])
        (bswap:DI (reg:DI 44 r15 [orig:343 D.5867 ] [343]))) 766 {*bswapdi2}
     (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                    (const_int 112 [0x70])) [0 MEM[(const BitSequence *)datablock_5(D) + 112B]+0 S8 A8]))
        (nil)))
(insn 722 83 84 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [6 %sfp+-256 S8 A64])
        (reg:DI 44 r15 [orig:343 D.5867 ] [343])) 89 {*movdi_internal}
     (nil))
(insn 84 722 85 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 528 [0x210])) [3 m+112 S8 A128])
        (reg:DI 44 r15 [orig:343 D.5867 ] [343])) blake_ref.c:143 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:343 D.5867 ] [343])
        (nil)))
(insn 85 84 86 2 (set (reg:DI 44 r15 [orig:367 MEM[(const BitSequence *)datablock_5(D) + 120B] ] [367])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
                (const_int 120 [0x78])) [0 MEM[(const BitSequence *)datablock_5(D) + 120B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:351 datablock ] [351])
        (nil)))
(insn 86 85 721 2 (set (reg:DI 44 r15 [orig:347 D.5867 ] [347])
        (bswap:DI (reg:DI 44 r15 [orig:347 D.5867 ] [347]))) 766 {*bswapdi2}
     (nil))
(insn 721 86 87 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [6 %sfp+-248 S8 A64])
        (reg:DI 44 r15 [orig:347 D.5867 ] [347])) 89 {*movdi_internal}
     (nil))
(insn 87 721 88 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 536 [0x218])) [3 m+120 S8 A64])
        (reg:DI 44 r15 [orig:347 D.5867 ] [347])) blake_ref.c:144 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:347 D.5867 ] [347])
        (nil)))
(insn 88 87 479 2 (set (reg:DI 0 ax [orig:119 v$0 ] [119])
        (mem:DI (plus:DI (reg:DI 2 cx [560])
                (const_int 136 [0x88])) [3 state_534(D)->h64+0 S8 A64])) blake_ref.c:147 89 {*movdi_internal}
     (nil))
(insn 479 88 89 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [6 %sfp+-224 S8 A64])
        (reg:DI 0 ax [orig:119 v$0 ] [119])) blake_ref.c:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:119 v$0 ] [119])
        (nil)))
(insn 89 479 481 2 (set (reg:DI 0 ax [orig:120 v$1 ] [120])
        (mem:DI (plus:DI (reg:DI 2 cx [562])
                (const_int 144 [0x90])) [3 state_534(D)->h64+8 S8 A64])) blake_ref.c:148 89 {*movdi_internal}
     (nil))
(insn 481 89 90 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [6 %sfp+-216 S8 A64])
        (reg:DI 0 ax [orig:120 v$1 ] [120])) blake_ref.c:148 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:120 v$1 ] [120])
        (nil)))
(insn 90 481 483 2 (set (reg:DI 0 ax [orig:121 v$2 ] [121])
        (mem:DI (plus:DI (reg:DI 2 cx [564])
                (const_int 152 [0x98])) [3 state_534(D)->h64+16 S8 A64])) blake_ref.c:149 89 {*movdi_internal}
     (nil))
(insn 483 90 91 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [6 %sfp+-208 S8 A64])
        (reg:DI 0 ax [orig:121 v$2 ] [121])) blake_ref.c:149 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 v$2 ] [121])
        (nil)))
(insn 91 483 485 2 (set (reg:DI 0 ax [orig:122 v$3 ] [122])
        (mem:DI (plus:DI (reg:DI 2 cx [566])
                (const_int 160 [0xa0])) [3 state_534(D)->h64+24 S8 A64])) blake_ref.c:150 89 {*movdi_internal}
     (nil))
(insn 485 91 92 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [6 %sfp+-200 S8 A64])
        (reg:DI 0 ax [orig:122 v$3 ] [122])) blake_ref.c:150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:122 v$3 ] [122])
        (nil)))
(insn 92 485 487 2 (set (reg:DI 0 ax [orig:123 v$4 ] [123])
        (mem:DI (plus:DI (reg:DI 2 cx [568])
                (const_int 168 [0xa8])) [3 state_534(D)->h64+32 S8 A64])) blake_ref.c:151 89 {*movdi_internal}
     (nil))
(insn 487 92 93 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [6 %sfp+-192 S8 A64])
        (reg:DI 0 ax [orig:123 v$4 ] [123])) blake_ref.c:151 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:123 v$4 ] [123])
        (nil)))
(insn 93 487 489 2 (set (reg:DI 0 ax [orig:124 v$5 ] [124])
        (mem:DI (plus:DI (reg:DI 2 cx [570])
                (const_int 176 [0xb0])) [3 state_534(D)->h64+40 S8 A64])) blake_ref.c:152 89 {*movdi_internal}
     (nil))
(insn 489 93 94 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [6 %sfp+-184 S8 A64])
        (reg:DI 0 ax [orig:124 v$5 ] [124])) blake_ref.c:152 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:124 v$5 ] [124])
        (nil)))
(insn 94 489 491 2 (set (reg:DI 0 ax [orig:125 v$6 ] [125])
        (mem:DI (plus:DI (reg:DI 2 cx [572])
                (const_int 184 [0xb8])) [3 state_534(D)->h64+48 S8 A64])) blake_ref.c:153 89 {*movdi_internal}
     (nil))
(insn 491 94 95 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [6 %sfp+-176 S8 A64])
        (reg:DI 0 ax [orig:125 v$6 ] [125])) blake_ref.c:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:125 v$6 ] [125])
        (nil)))
(insn 95 491 493 2 (set (reg:DI 0 ax [orig:126 v$7 ] [126])
        (mem:DI (plus:DI (reg:DI 2 cx [574])
                (const_int 192 [0xc0])) [3 state_534(D)->h64+56 S8 A64])) blake_ref.c:154 89 {*movdi_internal}
     (nil))
(insn 493 95 96 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [6 %sfp+-168 S8 A64])
        (reg:DI 0 ax [orig:126 v$7 ] [126])) blake_ref.c:154 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:126 v$7 ] [126])
        (nil)))
(insn 96 493 720 2 (set (reg:DI 0 ax [orig:127 D.5863 ] [127])
        (mem:DI (plus:DI (reg:DI 2 cx [576])
                (const_int 344 [0x158])) [3 state_534(D)->salt64+0 S8 A64])) blake_ref.c:155 89 {*movdi_internal}
     (nil))
(insn 720 96 97 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 384 [0x180])) [6 %sfp+-160 S8 A64])
        (reg:DI 0 ax [orig:127 D.5863 ] [127])) blake_ref.c:155 89 {*movdi_internal}
     (nil))
(insn 97 720 496 2 (set (reg:DI 41 r12 [368])
        (const_int 2611923443488327891 [0x243f6a8885a308d3])) blake_ref.c:155 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 2611923443488327891 [0x243f6a8885a308d3])
        (nil)))
(insn 496 97 98 2 (set (reg:DI 38 r9 [orig:244 v$8 ] [244])
        (reg:DI 41 r12 [368])) blake_ref.c:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [368])
        (nil)))
(insn 98 496 99 2 (parallel [
            (set (reg:DI 38 r9 [orig:244 v$8 ] [244])
                (xor:DI (reg:DI 38 r9 [orig:244 v$8 ] [244])
                    (reg:DI 0 ax [orig:127 D.5863 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:155 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:127 D.5863 ] [127])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 719 2 (set (reg:DI 0 ax [orig:128 D.5863 ] [128])
        (mem:DI (plus:DI (reg:DI 2 cx [580])
                (const_int 352 [0x160])) [3 state_534(D)->salt64+8 S8 A64])) blake_ref.c:156 89 {*movdi_internal}
     (nil))
(insn 719 99 100 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 392 [0x188])) [6 %sfp+-152 S8 A64])
        (reg:DI 0 ax [orig:128 D.5863 ] [128])) blake_ref.c:156 89 {*movdi_internal}
     (nil))
(insn 100 719 101 2 (set (reg:DI 4 si [369])
        (const_int 1376283091369227076 [0x13198a2e03707344])) blake_ref.c:156 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 1376283091369227076 [0x13198a2e03707344])
        (nil)))
(insn 101 100 502 2 (parallel [
            (set (reg:DI 4 si [orig:262 v$9 ] [262])
                (xor:DI (reg:DI 4 si [orig:262 v$9 ] [262])
                    (reg:DI 0 ax [orig:128 D.5863 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:156 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:128 D.5863 ] [128])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 502 101 102 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-480 S8 A64])
        (reg:DI 4 si [orig:262 v$9 ] [262])) blake_ref.c:156 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:262 v$9 ] [262])
        (nil)))
(insn 102 502 718 2 (set (reg:DI 0 ax [orig:129 D.5863 ] [129])
        (mem:DI (plus:DI (reg:DI 2 cx [584])
                (const_int 360 [0x168])) [3 state_534(D)->salt64+16 S8 A64])) blake_ref.c:157 89 {*movdi_internal}
     (nil))
(insn 718 102 103 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 400 [0x190])) [6 %sfp+-144 S8 A64])
        (reg:DI 0 ax [orig:129 D.5863 ] [129])) blake_ref.c:157 89 {*movdi_internal}
     (nil))
(insn 103 718 104 2 (set (reg:DI 43 r14 [370])
        (const_int -6626703657320631856 [0xa4093822299f31d0])) blake_ref.c:157 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -6626703657320631856 [0xa4093822299f31d0])
        (nil)))
(insn 104 103 507 2 (parallel [
            (set (reg:DI 43 r14 [orig:211 v$10 ] [211])
                (xor:DI (reg:DI 43 r14 [orig:211 v$10 ] [211])
                    (reg:DI 0 ax [orig:129 D.5863 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:157 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:129 D.5863 ] [129])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 507 104 105 2 (set (reg:DI 41 r12 [orig:211 v$10 ] [211])
        (reg:DI 43 r14 [orig:211 v$10 ] [211])) blake_ref.c:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:211 v$10 ] [211])
        (nil)))
(insn 105 507 510 2 (set (reg:DI 0 ax [orig:130 D.5863 ] [130])
        (mem:DI (plus:DI (reg:DI 2 cx [588])
                (const_int 368 [0x170])) [3 state_534(D)->salt64+24 S8 A64])) blake_ref.c:158 89 {*movdi_internal}
     (nil))
(insn 510 105 717 2 (set (reg:DI 4 si [orig:130 D.5863 ] [130])
        (reg:DI 0 ax [orig:130 D.5863 ] [130])) blake_ref.c:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:130 D.5863 ] [130])
        (nil)))
(insn 717 510 106 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 408 [0x198])) [6 %sfp+-136 S8 A64])
        (reg:DI 0 ax [orig:130 D.5863 ] [130])) blake_ref.c:158 89 {*movdi_internal}
     (nil))
(insn 106 717 107 2 (set (reg:DI 0 ax [371])
        (const_int 589684135938649225 [0x82efa98ec4e6c89])) blake_ref.c:158 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 589684135938649225 [0x82efa98ec4e6c89])
        (nil)))
(insn 107 106 512 2 (parallel [
            (set (reg:DI 0 ax [orig:197 v$11 ] [197])
                (xor:DI (reg:DI 0 ax [orig:197 v$11 ] [197])
                    (reg:DI 4 si [orig:130 D.5863 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:158 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:130 D.5863 ] [130])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 512 107 818 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [6 %sfp+-496 S8 A64])
        (reg:DI 0 ax [orig:197 v$11 ] [197])) blake_ref.c:158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:197 v$11 ] [197])
        (nil)))
(insn 818 512 819 2 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg:DI 2 cx [592])
                (const_int 12 [0xc])) [2 state_534(D)->nullt+0 S4 A32])) blake_ref.c:159 90 {*movsi_internal}
     (nil))
(insn 819 818 109 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx)
            (const_int 0 [0]))) blake_ref.c:159 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 109 819 110 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 406)
            (pc))) blake_ref.c:159 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 406)
;;  succ:       8 [50.0%]  (CAN_FALLTHRU)
;;              3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]
;; live  out 	 2 [cx] 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 294, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 17 [flags] 37 [r8] 39 [r10] 42 [r13] 44 [r15]
;; live  in  	 2 [cx] 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 37 [r8] 39 [r10] 42 [r13] 44 [r15]
;; live  kill	 17 [flags]
(note 110 109 111 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 3 (set (reg:DI 0 ax [orig:132 D.5863 ] [132])
        (mem:DI (plus:DI (reg:DI 2 cx [593])
                (const_int 200 [0xc8])) [3 state_534(D)->t64+0 S8 A64])) blake_ref.c:166 89 {*movdi_internal}
     (nil))
(insn 112 111 113 3 (set (reg:DI 39 r10 [372])
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:166 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 4983270260364809079 [0x452821e638d01377])
        (nil)))
(insn 113 112 517 3 (parallel [
            (set (reg:DI 39 r10 [orig:227 v$12 ] [227])
                (xor:DI (reg:DI 39 r10 [orig:227 v$12 ] [227])
                    (reg:DI 0 ax [orig:132 D.5863 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:166 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 517 113 114 3 (set (reg:DI 6 bp [orig:227 v$12 ] [227])
        (reg:DI 39 r10 [orig:227 v$12 ] [227])) blake_ref.c:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:227 v$12 ] [227])
        (nil)))
(insn 114 517 115 3 (set (reg:DI 37 r8 [373])
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:167 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -4732044268327596948 [0xbe5466cf34e90c6c])
        (nil)))
(insn 115 114 519 3 (parallel [
            (set (reg:DI 0 ax [orig:243 v$13 ] [243])
                (xor:DI (reg:DI 0 ax [orig:243 v$13 ] [243])
                    (reg:DI 37 r8 [373])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:167 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 37 r8 [373])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 519 115 116 3 (set (reg:DI 42 r13 [orig:243 v$13 ] [243])
        (reg:DI 0 ax [orig:243 v$13 ] [243])) blake_ref.c:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:243 v$13 ] [243])
        (nil)))
(insn 116 519 117 3 (set (reg:DI 0 ax [orig:133 D.5863 ] [133])
        (mem:DI (plus:DI (reg:DI 2 cx [596])
                (const_int 208 [0xd0])) [3 state_534(D)->t64+8 S8 A64])) blake_ref.c:168 89 {*movdi_internal}
     (nil))
(insn 117 116 521 3 (set (reg:DI 2 cx [374])
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:168 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])
        (nil)))
(insn 521 117 118 3 (set (reg:DI 3 bx [orig:260 v$14 ] [260])
        (reg:DI 2 cx [374])) blake_ref.c:168 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [374])
        (nil)))
(insn 118 521 119 3 (parallel [
            (set (reg:DI 3 bx [orig:260 v$14 ] [260])
                (xor:DI (reg:DI 3 bx [orig:260 v$14 ] [260])
                    (reg:DI 0 ax [orig:133 D.5863 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:168 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 119 118 120 3 (set (reg:DI 44 r15 [375])
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:169 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 4577018097722394903 [0x3f84d5b5b5470917])
        (nil)))
(insn 120 119 524 3 (parallel [
            (set (reg:DI 0 ax [orig:210 v$15 ] [210])
                (xor:DI (reg:DI 0 ax [orig:210 v$15 ] [210])
                    (reg:DI 44 r15 [375])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:169 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 44 r15 [375])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 524 120 121 3 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-488 S8 A64])
        (reg:DI 0 ax [orig:210 v$15 ] [210])) blake_ref.c:169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:210 v$15 ] [210])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]

;; basic block 4, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [100.0%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 39 [r10] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 39 [r10] 43 [r14] 44 [r15]
;; live  kill	
(code_label 121 524 122 4 9 "" [1 uses])
(note 122 121 123 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 526 4 (set (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
        (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (symbol_ref:DI ("sigma") [flags 0x2]  <var_decl 0x6ffffe12e20 sigma>)
        (nil)))
(insn 526 123 13 4 (set (reg:DI 0 ax [orig:119 v$0 ] [119])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [6 %sfp+-224 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 13 526 14 4 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 0 ax [orig:119 v$0 ] [119])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:119 v$0 ] [119])
        (nil)))
(insn 14 13 527 4 (set (reg:DI 43 r14 [orig:225 v$1 ] [225])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 328 [0x148])) [6 %sfp+-216 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 527 14 15 4 (set (reg:DI 0 ax [orig:121 v$2 ] [121])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [6 %sfp+-208 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 15 527 16 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-520 S8 A64])
        (reg:DI 0 ax [orig:121 v$2 ] [121])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 v$2 ] [121])
        (nil)))
(insn 16 15 17 4 (set (reg:DI 44 r15 [orig:258 v$3 ] [258])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 344 [0x158])) [6 %sfp+-200 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 17 16 528 4 (set (reg:DI 37 r8 [orig:264 v$4 ] [264])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [6 %sfp+-192 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 528 17 18 4 (set (reg:DI 0 ax [orig:124 v$5 ] [124])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 360 [0x168])) [6 %sfp+-184 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 18 528 529 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-536 S8 A64])
        (reg:DI 0 ax [orig:124 v$5 ] [124])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:124 v$5 ] [124])
        (nil)))
(insn 529 18 19 4 (set (reg:DI 0 ax [orig:125 v$6 ] [125])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [6 %sfp+-176 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 19 529 530 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-528 S8 A64])
        (reg:DI 0 ax [orig:125 v$6 ] [125])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:125 v$6 ] [125])
        (nil)))
(insn 530 19 20 4 (set (reg:DI 0 ax [orig:126 v$7 ] [126])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 376 [0x178])) [6 %sfp+-168 S8 A64])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 20 530 21 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-512 S8 A64])
        (reg:DI 0 ax [orig:126 v$7 ] [126])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:126 v$7 ] [126])
        (nil)))
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 316 [0x13c])) [6 %sfp+-228 S4 A32])
        (const_int 16 [0x10])) blake_ref.c:160 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 16 [0x10])
        (nil)))
(insn 22 21 531 4 (set (reg:DI 0 ax [orig:348 D.5868 ] [348])
        (const_int 577009281997405206 [0x801f2e2858efc16])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 577009281997405206 [0x801f2e2858efc16])
        (nil)))
(insn 531 22 23 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 %sfp+-376 S8 A64])
        (reg:DI 0 ax [orig:348 D.5868 ] [348])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:348 D.5868 ] [348])
        (nil)))
(insn 23 531 532 4 (set (reg:DI 0 ax [orig:346 D.5868 ] [346])
        (const_int 7163292796296056425 [0x636920d871574e69])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 7163292796296056425 [0x636920d871574e69])
        (nil)))
(insn 532 23 24 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 %sfp+-384 S8 A64])
        (reg:DI 0 ax [orig:346 D.5868 ] [346])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:346 D.5868 ] [346])
        (nil)))
(insn 24 532 533 4 (set (reg:DI 0 ax [orig:340 D.5868 ] [340])
        (const_int -5008970055469465703 [0xba7c9045f12c7f99])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -5008970055469465703 [0xba7c9045f12c7f99])
        (nil)))
(insn 533 24 25 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 %sfp+-392 S8 A64])
        (reg:DI 0 ax [orig:340 D.5868 ] [340])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:340 D.5868 ] [340])
        (nil)))
(insn 25 533 534 4 (set (reg:DI 0 ax [orig:338 D.5868 ] [338])
        (const_int 2639559389850201335 [0x24a19947b3916cf7])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 2639559389850201335 [0x24a19947b3916cf7])
        (nil)))
(insn 534 25 26 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 %sfp+-400 S8 A64])
        (reg:DI 0 ax [orig:338 D.5868 ] [338])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:338 D.5868 ] [338])
        (nil)))
(insn 26 534 535 4 (set (reg:DI 0 ax [orig:332 D.5868 ] [332])
        (const_int 3458046377305235383 [0x2ffd72dbd01adfb7])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 3458046377305235383 [0x2ffd72dbd01adfb7])
        (nil)))
(insn 535 26 27 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [6 %sfp+-408 S8 A64])
        (reg:DI 0 ax [orig:332 D.5868 ] [332])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:332 D.5868 ] [332])
        (nil)))
(insn 27 535 536 4 (set (reg:DI 0 ax [orig:330 D.5868 ] [330])
        (const_int -5124621466747896170 [0xb8e1afed6a267e96])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -5124621466747896170 [0xb8e1afed6a267e96])
        (nil)))
(insn 536 27 28 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [6 %sfp+-416 S8 A64])
        (reg:DI 0 ax [orig:330 D.5868 ] [330])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:330 D.5868 ] [330])
        (nil)))
(insn 28 536 537 4 (set (reg:DI 0 ax [orig:324 D.5868 ] [324])
        (const_int -7919907764393346277 [0x9216d5d98979fb1b])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -7919907764393346277 [0x9216d5d98979fb1b])
        (nil)))
(insn 537 28 29 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [6 %sfp+-424 S8 A64])
        (reg:DI 0 ax [orig:324 D.5868 ] [324])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:324 D.5868 ] [324])
        (nil)))
(insn 29 537 538 4 (set (reg:DI 0 ax [orig:322 D.5868 ] [322])
        (const_int -3372901835766516308 [0xd1310ba698dfb5ac])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -3372901835766516308 [0xd1310ba698dfb5ac])
        (nil)))
(insn 538 29 30 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [6 %sfp+-432 S8 A64])
        (reg:DI 0 ax [orig:322 D.5868 ] [322])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:322 D.5868 ] [322])
        (nil)))
(insn 30 538 539 4 (set (reg:DI 0 ax [orig:316 D.5868 ] [316])
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])
        (nil)))
(insn 539 30 31 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [6 %sfp+-440 S8 A64])
        (reg:DI 0 ax [orig:316 D.5868 ] [316])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:316 D.5868 ] [316])
        (nil)))
(insn 31 539 540 4 (set (reg:DI 0 ax [orig:314 D.5868 ] [314])
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 4577018097722394903 [0x3f84d5b5b5470917])
        (nil)))
(insn 540 31 32 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 %sfp+-448 S8 A64])
        (reg:DI 0 ax [orig:314 D.5868 ] [314])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:314 D.5868 ] [314])
        (nil)))
(insn 32 540 33 4 (set (reg:DI 1 dx [orig:308 D.5868 ] [308])
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 4983270260364809079 [0x452821e638d01377])
        (nil)))
(insn 33 32 541 4 (set (reg:DI 0 ax [orig:306 D.5868 ] [306])
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -4732044268327596948 [0xbe5466cf34e90c6c])
        (nil)))
(insn 541 33 34 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 %sfp+-456 S8 A64])
        (reg:DI 0 ax [orig:306 D.5868 ] [306])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:306 D.5868 ] [306])
        (nil)))
(insn 34 541 35 4 (set (reg:DI 0 ax [orig:300 D.5868 ] [300])
        (const_int -6626703657320631856 [0xa4093822299f31d0])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int -6626703657320631856 [0xa4093822299f31d0])
        (nil)))
(insn 35 34 542 4 (set (reg:DI 2 cx [orig:298 D.5868 ] [298])
        (const_int 589684135938649225 [0x82efa98ec4e6c89])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 589684135938649225 [0x82efa98ec4e6c89])
        (nil)))
(insn 542 35 36 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [6 %sfp+-464 S8 A64])
        (reg:DI 2 cx [orig:298 D.5868 ] [298])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:298 D.5868 ] [298])
        (nil)))
(insn 36 542 735 4 (set (reg:DI 2 cx [orig:292 D.5868 ] [292])
        (const_int 2611923443488327891 [0x243f6a8885a308d3])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 2611923443488327891 [0x243f6a8885a308d3])
        (nil)))
(note 735 36 37 4 NOTE_INSN_DELETED)
(insn 37 735 544 4 (set (reg:DI 39 r10 [orig:290 D.5868 ] [290])
        (const_int 1376283091369227076 [0x13198a2e03707344])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 1376283091369227076 [0x13198a2e03707344])
        (nil)))
(insn 544 37 414 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-472 S8 A64])
        (reg:DI 39 r10 [orig:290 D.5868 ] [290])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:290 D.5868 ] [290])
        (nil)))
(insn 414 544 415 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])
        (reg:DI 44 r15 [orig:258 v$3 ] [258])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:258 v$3 ] [258])
        (nil)))
(insn 415 414 420 4 (set (reg:DI 44 r15 [orig:211 v$10 ] [211])
        (reg:DI 41 r12 [orig:211 v$10 ] [211])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:211 v$10 ] [211])
        (nil)))
(insn 420 415 421 4 (set (reg:DI 39 r10 [orig:292 D.5868 ] [292])
        (reg:DI 2 cx [orig:292 D.5868 ] [292])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:292 D.5868 ] [292])
        (nil)))
(insn 421 420 422 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-368 S8 A64])
        (reg:DI 0 ax [orig:300 D.5868 ] [300])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(insn 422 421 423 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 %sfp+-360 S8 A64])
        (reg:DI 1 dx [orig:308 D.5868 ] [308])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:308 D.5868 ] [308])
        (nil)))
(insn 423 422 424 4 (set (reg:DI 1 dx [orig:291 D.5867 ] [291])
        (reg:DI 5 di [orig:291 D.5867 ] [291])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:291 D.5867 ] [291])
        (nil)))
(insn 424 423 820 4 (set (reg:DI 5 di [orig:225 v$1 ] [225])
        (reg:DI 43 r14 [orig:225 v$1 ] [225])) blake_ref.c:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:225 v$1 ] [225])
        (nil)))
(jump_insn 820 424 821 4 (set (pc)
        (label_ref 355)) -1
     (nil)
 -> 355)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]

(barrier 821 820 822)
;; basic block 5, loop depth 0, count 0, freq 8859, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [94.1%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 39 [r10] 40 [r11] 41 [r12] 43 [r14]
;; live  kill	
(code_label 822 821 257 5 13 "" [1 uses])
(note 257 822 259 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 259 257 260 5 NOTE_INSN_DELETED)
(insn 260 259 261 5 (set (reg:DI 0 ax [orig:440 D.5864 ] [440])
        (zero_extend:DI (mem:QI (reg:DI 4 si [orig:269 ivtmp.149 ] [269]) [0 MEM[base: _802, offset: 0B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 261 260 262 5 (set (reg:DI 40 r11 [orig:287 D.5867 ] [287])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:440 D.5864 ] [440])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(note 262 261 263 5 NOTE_INSN_DELETED)
(insn 263 262 264 5 (set (reg/f:DI 2 cx [441])
        (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)
        (nil)))
(insn 264 263 265 5 (set (reg:DI 1 dx [orig:442 D.5864 ] [442])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 1 [0x1])) [0 MEM[base: _802, offset: 1B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 265 264 636 5 (set (reg:DI 39 r10 [orig:290 D.5868 ] [290])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:442 D.5864 ] [442])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:442 D.5864 ] [442])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 636 265 267 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-472 S8 A64])
        (reg:DI 39 r10 [orig:290 D.5868 ] [290])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:290 D.5868 ] [290])
        (nil)))
(insn 267 636 270 5 (set (reg:DI 1 dx [orig:291 D.5867 ] [291])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:442 D.5864 ] [442])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 270 267 271 5 (set (reg:DI 39 r10 [orig:292 D.5868 ] [292])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:440 D.5864 ] [440])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:440 D.5864 ] [440])
        (nil)))
(note 271 270 272 5 NOTE_INSN_DELETED)
(insn 272 271 273 5 (set (reg:DI 0 ax [orig:446 D.5864 ] [446])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 2 [0x2])) [0 MEM[base: _802, offset: 2B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 273 272 637 5 (set (reg:DI 43 r14 [orig:295 D.5867 ] [295])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:446 D.5864 ] [446])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 637 273 274 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 %sfp+-352 S8 A64])
        (reg:DI 43 r14 [orig:295 D.5867 ] [295])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:295 D.5867 ] [295])
        (nil)))
(note 274 637 276 5 NOTE_INSN_DELETED)
(insn 276 274 277 5 (set (reg:DI 41 r12 [orig:448 D.5864 ] [448])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 3 [0x3])) [0 MEM[base: _802, offset: 3B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 277 276 638 5 (set (reg:DI 43 r14 [orig:298 D.5868 ] [298])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:448 D.5864 ] [448])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:448 D.5864 ] [448])
                    (const_int 8 [0x8]))
                (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
        (nil)))
(insn 638 277 279 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [6 %sfp+-464 S8 A64])
        (reg:DI 43 r14 [orig:298 D.5868 ] [298])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:298 D.5868 ] [298])
        (nil)))
(insn 279 638 639 5 (set (reg:DI 43 r14 [orig:299 D.5867 ] [299])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:448 D.5864 ] [448])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:448 D.5864 ] [448])
        (nil)))
(insn 639 279 282 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [6 %sfp+-344 S8 A64])
        (reg:DI 43 r14 [orig:299 D.5867 ] [299])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:299 D.5867 ] [299])
        (nil)))
(insn 282 639 756 5 (set (reg:DI 0 ax [orig:300 D.5868 ] [300])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:446 D.5864 ] [446])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 756 282 283 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-368 S8 A64])
        (reg:DI 0 ax [orig:300 D.5868 ] [300])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:300 D.5868 ] [300])
        (nil)))
(note 283 756 284 5 NOTE_INSN_DELETED)
(insn 284 283 285 5 (set (reg:DI 41 r12 [orig:452 D.5864 ] [452])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 4 [0x4])) [0 MEM[base: _802, offset: 4B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 285 284 640 5 (set (reg:DI 43 r14 [orig:303 D.5867 ] [303])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:452 D.5864 ] [452])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 640 285 286 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [6 %sfp+-336 S8 A64])
        (reg:DI 43 r14 [orig:303 D.5867 ] [303])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:303 D.5867 ] [303])
        (nil)))
(note 286 640 288 5 NOTE_INSN_DELETED)
(insn 288 286 289 5 (set (reg:DI 43 r14 [orig:454 D.5864 ] [454])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 5 [0x5])) [0 MEM[base: _802, offset: 5B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 289 288 641 5 (set (reg:DI 0 ax [orig:306 D.5868 ] [306])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:454 D.5864 ] [454])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 641 289 291 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [6 %sfp+-456 S8 A64])
        (reg:DI 0 ax [orig:306 D.5868 ] [306])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:306 D.5868 ] [306])
        (nil)))
(insn 291 641 642 5 (set (reg:DI 0 ax [orig:307 D.5867 ] [307])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:454 D.5864 ] [454])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:454 D.5864 ] [454])
        (nil)))
(insn 642 291 294 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 %sfp+-328 S8 A64])
        (reg:DI 0 ax [orig:307 D.5867 ] [307])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:307 D.5867 ] [307])
        (nil)))
(insn 294 642 643 5 (set (reg:DI 0 ax [orig:308 D.5868 ] [308])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:452 D.5864 ] [452])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:452 D.5864 ] [452])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:452 D.5864 ] [452])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 643 294 295 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [6 %sfp+-360 S8 A64])
        (reg:DI 0 ax [orig:308 D.5868 ] [308])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:308 D.5868 ] [308])
        (nil)))
(note 295 643 296 5 NOTE_INSN_DELETED)
(insn 296 295 297 5 (set (reg:DI 41 r12 [orig:458 D.5864 ] [458])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 6 [0x6])) [0 MEM[base: _802, offset: 6B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 297 296 644 5 (set (reg:DI 0 ax [orig:311 D.5867 ] [311])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:458 D.5864 ] [458])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 644 297 298 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [6 %sfp+-320 S8 A64])
        (reg:DI 0 ax [orig:311 D.5867 ] [311])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:311 D.5867 ] [311])
        (nil)))
(note 298 644 300 5 NOTE_INSN_DELETED)
(insn 300 298 301 5 (set (reg:DI 43 r14 [orig:460 D.5864 ] [460])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 7 [0x7])) [0 MEM[base: _802, offset: 7B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 301 300 645 5 (set (reg:DI 0 ax [orig:314 D.5868 ] [314])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:460 D.5864 ] [460])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 645 301 303 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [6 %sfp+-448 S8 A64])
        (reg:DI 0 ax [orig:314 D.5868 ] [314])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:314 D.5868 ] [314])
        (nil)))
(insn 303 645 646 5 (set (reg:DI 0 ax [orig:315 D.5867 ] [315])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:460 D.5864 ] [460])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:460 D.5864 ] [460])
        (nil)))
(insn 646 303 306 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [6 %sfp+-312 S8 A64])
        (reg:DI 0 ax [orig:315 D.5867 ] [315])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:315 D.5867 ] [315])
        (nil)))
(insn 306 646 647 5 (set (reg:DI 0 ax [orig:316 D.5868 ] [316])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:458 D.5864 ] [458])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:458 D.5864 ] [458])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:458 D.5864 ] [458])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 647 306 307 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 104 [0x68])) [6 %sfp+-440 S8 A64])
        (reg:DI 0 ax [orig:316 D.5868 ] [316])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:316 D.5868 ] [316])
        (nil)))
(note 307 647 308 5 NOTE_INSN_DELETED)
(insn 308 307 309 5 (set (reg:DI 41 r12 [orig:464 D.5864 ] [464])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 8 [0x8])) [0 MEM[base: _802, offset: 8B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 309 308 648 5 (set (reg:DI 0 ax [orig:319 D.5867 ] [319])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:464 D.5864 ] [464])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 648 309 310 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [6 %sfp+-304 S8 A64])
        (reg:DI 0 ax [orig:319 D.5867 ] [319])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:319 D.5867 ] [319])
        (nil)))
(note 310 648 312 5 NOTE_INSN_DELETED)
(insn 312 310 313 5 (set (reg:DI 43 r14 [orig:466 D.5864 ] [466])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 9 [0x9])) [0 MEM[base: _802, offset: 9B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 313 312 649 5 (set (reg:DI 0 ax [orig:322 D.5868 ] [322])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:466 D.5864 ] [466])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 649 313 315 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [6 %sfp+-432 S8 A64])
        (reg:DI 0 ax [orig:322 D.5868 ] [322])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:322 D.5868 ] [322])
        (nil)))
(insn 315 649 650 5 (set (reg:DI 0 ax [orig:323 D.5867 ] [323])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:466 D.5864 ] [466])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:466 D.5864 ] [466])
        (nil)))
(insn 650 315 318 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [6 %sfp+-296 S8 A64])
        (reg:DI 0 ax [orig:323 D.5867 ] [323])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:323 D.5867 ] [323])
        (nil)))
(insn 318 650 651 5 (set (reg:DI 0 ax [orig:324 D.5868 ] [324])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:464 D.5864 ] [464])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:464 D.5864 ] [464])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:464 D.5864 ] [464])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 651 318 319 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 120 [0x78])) [6 %sfp+-424 S8 A64])
        (reg:DI 0 ax [orig:324 D.5868 ] [324])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:324 D.5868 ] [324])
        (nil)))
(note 319 651 320 5 NOTE_INSN_DELETED)
(insn 320 319 321 5 (set (reg:DI 41 r12 [orig:470 D.5864 ] [470])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 10 [0xa])) [0 MEM[base: _802, offset: 10B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 321 320 652 5 (set (reg:DI 0 ax [orig:327 D.5867 ] [327])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:470 D.5864 ] [470])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 652 321 322 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [6 %sfp+-288 S8 A64])
        (reg:DI 0 ax [orig:327 D.5867 ] [327])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:327 D.5867 ] [327])
        (nil)))
(note 322 652 324 5 NOTE_INSN_DELETED)
(insn 324 322 325 5 (set (reg:DI 43 r14 [orig:472 D.5864 ] [472])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 11 [0xb])) [0 MEM[base: _802, offset: 11B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 325 324 653 5 (set (reg:DI 0 ax [orig:330 D.5868 ] [330])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:472 D.5864 ] [472])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 653 325 327 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [6 %sfp+-416 S8 A64])
        (reg:DI 0 ax [orig:330 D.5868 ] [330])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:330 D.5868 ] [330])
        (nil)))
(insn 327 653 654 5 (set (reg:DI 0 ax [orig:331 D.5867 ] [331])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:472 D.5864 ] [472])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:472 D.5864 ] [472])
        (nil)))
(insn 654 327 330 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [6 %sfp+-280 S8 A64])
        (reg:DI 0 ax [orig:331 D.5867 ] [331])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:331 D.5867 ] [331])
        (nil)))
(insn 330 654 655 5 (set (reg:DI 0 ax [orig:332 D.5868 ] [332])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:470 D.5864 ] [470])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:470 D.5864 ] [470])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:470 D.5864 ] [470])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 655 330 331 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 136 [0x88])) [6 %sfp+-408 S8 A64])
        (reg:DI 0 ax [orig:332 D.5868 ] [332])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:332 D.5868 ] [332])
        (nil)))
(note 331 655 332 5 NOTE_INSN_DELETED)
(insn 332 331 333 5 (set (reg:DI 41 r12 [orig:476 D.5864 ] [476])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 12 [0xc])) [0 MEM[base: _802, offset: 12B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 333 332 656 5 (set (reg:DI 0 ax [orig:335 D.5867 ] [335])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:476 D.5864 ] [476])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 656 333 334 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [6 %sfp+-272 S8 A64])
        (reg:DI 0 ax [orig:335 D.5867 ] [335])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:335 D.5867 ] [335])
        (nil)))
(note 334 656 336 5 NOTE_INSN_DELETED)
(insn 336 334 337 5 (set (reg:DI 43 r14 [orig:478 D.5864 ] [478])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 13 [0xd])) [0 MEM[base: _802, offset: 13B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 337 336 657 5 (set (reg:DI 0 ax [orig:338 D.5868 ] [338])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:478 D.5864 ] [478])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 657 337 339 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 %sfp+-400 S8 A64])
        (reg:DI 0 ax [orig:338 D.5868 ] [338])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:338 D.5868 ] [338])
        (nil)))
(insn 339 657 658 5 (set (reg:DI 0 ax [orig:339 D.5867 ] [339])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:478 D.5864 ] [478])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:478 D.5864 ] [478])
        (nil)))
(insn 658 339 342 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [6 %sfp+-264 S8 A64])
        (reg:DI 0 ax [orig:339 D.5867 ] [339])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:339 D.5867 ] [339])
        (nil)))
(insn 342 658 659 5 (set (reg:DI 0 ax [orig:340 D.5868 ] [340])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:476 D.5864 ] [476])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:476 D.5864 ] [476])
        (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:476 D.5864 ] [476])
                        (const_int 8 [0x8]))
                    (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
            (nil))))
(insn 659 342 343 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 %sfp+-392 S8 A64])
        (reg:DI 0 ax [orig:340 D.5868 ] [340])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:340 D.5868 ] [340])
        (nil)))
(note 343 659 344 5 NOTE_INSN_DELETED)
(insn 344 343 345 5 (set (reg:DI 41 r12 [orig:482 D.5864 ] [482])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 14 [0xe])) [0 MEM[base: _802, offset: 14B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 345 344 660 5 (set (reg:DI 0 ax [orig:343 D.5867 ] [343])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:482 D.5864 ] [482])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 660 345 346 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [6 %sfp+-256 S8 A64])
        (reg:DI 0 ax [orig:343 D.5867 ] [343])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:343 D.5867 ] [343])
        (nil)))
(note 346 660 348 5 NOTE_INSN_DELETED)
(insn 348 346 349 5 (set (reg:DI 43 r14 [orig:484 D.5864 ] [484])
        (zero_extend:DI (mem:QI (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 15 [0xf])) [0 MEM[base: _802, offset: 15B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 349 348 661 5 (set (reg:DI 0 ax [orig:346 D.5868 ] [346])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:484 D.5864 ] [484])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 661 349 351 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 %sfp+-384 S8 A64])
        (reg:DI 0 ax [orig:346 D.5868 ] [346])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:346 D.5868 ] [346])
        (nil)))
(insn 351 661 662 5 (set (reg:DI 0 ax [orig:347 D.5867 ] [347])
        (mem:DI (plus:DI (plus:DI (mult:DI (reg:DI 43 r14 [orig:484 D.5864 ] [484])
                        (const_int 8 [0x8]))
                    (reg/f:DI 7 sp))
                (const_int 416 [0x1a0])) [3 m S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:484 D.5864 ] [484])
        (nil)))
(insn 662 351 354 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [6 %sfp+-248 S8 A64])
        (reg:DI 0 ax [orig:347 D.5867 ] [347])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:347 D.5867 ] [347])
        (nil)))
(insn 354 662 663 5 (set (reg:DI 0 ax [orig:348 D.5868 ] [348])
        (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:482 D.5864 ] [482])
                    (const_int 8 [0x8]))
                (reg/f:DI 2 cx [441])) [3 c64 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:482 D.5864 ] [482])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [441])
            (expr_list:REG_EQUAL (mem/u:DI (plus:DI (mult:DI (reg:DI 41 r12 [orig:482 D.5864 ] [482])
                            (const_int 8 [0x8]))
                        (symbol_ref:DI ("c64") [flags 0x2]  <var_decl 0x6ffffe13ba0 c64>)) [3 c64 S8 A64])
                (nil)))))
(insn 663 354 782 5 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 %sfp+-376 S8 A64])
        (reg:DI 0 ax [orig:348 D.5868 ] [348])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:348 D.5868 ] [348])
        (nil)))
(insn 782 663 355 5 (set (reg:DI 0 ax [orig:388 D.5863 ] [388])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [6 %sfp+-368 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 9412, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,DFS_BACK,CAN_FALLTHRU)
;;              4 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 355 782 124 6 11 "" [1 uses])
(note 124 355 545 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 545 124 775 6 NOTE_INSN_DELETED)
(note 775 545 125 6 NOTE_INSN_DELETED)
(insn 125 775 126 6 (parallel [
            (set (reg:DI 40 r11 [orig:376 D.5863 ] [376])
                (xor:DI (reg:DI 40 r11 [orig:287 D.5867 ] [287])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 72 [0x48])) [6 %sfp+-472 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 546 6 (parallel [
            (set (reg:DI 40 r11 [orig:377 D.5863 ] [377])
                (plus:DI (reg:DI 40 r11 [orig:376 D.5863 ] [376])
                    (reg:DI 37 r8 [orig:264 v$4 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 546 126 774 6 NOTE_INSN_DELETED)
(note 774 546 127 6 NOTE_INSN_DELETED)
(insn 127 774 128 6 (parallel [
            (set (reg:DI 40 r11 [orig:135 D.5863 ] [135])
                (plus:DI (reg:DI 40 r11 [orig:377 D.5863 ] [377])
                    (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 128 127 129 6 (parallel [
            (set (reg:DI 6 bp [orig:378 D.5863 ] [378])
                (xor:DI (reg:DI 6 bp [orig:227 v$12 ] [227])
                    (reg:DI 40 r11 [orig:135 D.5863 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 129 128 130 6 (parallel [
            (set (reg:DI 6 bp [orig:137 D.5863 ] [137])
                (rotate:DI (reg:DI 6 bp [orig:378 D.5863 ] [378])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 130 129 131 6 (parallel [
            (set (reg:DI 38 r9 [orig:138 D.5863 ] [138])
                (plus:DI (reg:DI 38 r9 [orig:244 v$8 ] [244])
                    (reg:DI 6 bp [orig:137 D.5863 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 131 130 132 6 (parallel [
            (set (reg:DI 37 r8 [orig:379 D.5863 ] [379])
                (xor:DI (reg:DI 37 r8 [orig:264 v$4 ] [264])
                    (reg:DI 38 r9 [orig:138 D.5863 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 132 131 133 6 (parallel [
            (set (reg:DI 37 r8 [orig:140 D.5863 ] [140])
                (rotatert:DI (reg:DI 37 r8 [orig:379 D.5863 ] [379])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 133 132 134 6 (parallel [
            (set (reg:DI 39 r10 [orig:380 D.5863 ] [380])
                (xor:DI (reg:DI 39 r10 [orig:292 D.5868 ] [292])
                    (reg:DI 1 dx [orig:291 D.5867 ] [291])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:291 D.5867 ] [291])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 6 (parallel [
            (set (reg:DI 39 r10 [orig:381 D.5863 ] [381])
                (plus:DI (reg:DI 39 r10 [orig:380 D.5863 ] [380])
                    (reg:DI 40 r11 [orig:135 D.5863 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 40 r11 [orig:135 D.5863 ] [135])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 6 (parallel [
            (set (reg:DI 39 r10 [orig:143 D.5863 ] [143])
                (plus:DI (reg:DI 39 r10 [orig:381 D.5863 ] [381])
                    (reg:DI 37 r8 [orig:140 D.5863 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 136 135 137 6 (parallel [
            (set (reg:DI 6 bp [orig:382 D.5863 ] [382])
                (xor:DI (reg:DI 6 bp [orig:137 D.5863 ] [137])
                    (reg:DI 39 r10 [orig:143 D.5863 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 137 136 785 6 (parallel [
            (set (reg:DI 6 bp [orig:145 D.5863 ] [145])
                (rotatert:DI (reg:DI 6 bp [orig:382 D.5863 ] [382])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 785 137 750 6 (set (reg:DI 2 cx [orig:146 D.5863 ] [146])
        (plus:DI (reg:DI 38 r9 [orig:138 D.5863 ] [138])
            (reg:DI 6 bp [orig:145 D.5863 ] [145]))) blake_ref.c:176 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 38 r9 [orig:138 D.5863 ] [138])
        (nil)))
(note 750 785 749 6 NOTE_INSN_DELETED)
(insn 749 750 778 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-472 S8 A64])
        (reg:DI 2 cx [orig:146 D.5863 ] [146])) blake_ref.c:176 89 {*movdi_internal}
     (nil))
(note 778 749 139 6 NOTE_INSN_DELETED)
(insn 139 778 140 6 (parallel [
            (set (reg:DI 37 r8 [orig:383 D.5863 ] [383])
                (xor:DI (reg:DI 37 r8 [orig:140 D.5863 ] [140])
                    (reg:DI 2 cx [orig:146 D.5863 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:146 D.5863 ] [146])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 550 6 (parallel [
            (set (reg:DI 37 r8 [orig:148 D.5863 ] [148])
                (rotatert:DI (reg:DI 37 r8 [orig:148 D.5863 ] [148])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:176 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 550 140 777 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [6 %sfp+-240 S8 A64])
        (reg:DI 37 r8 [orig:148 D.5863 ] [148])) blake_ref.c:176 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:148 D.5863 ] [148])
        (nil)))
(note 777 550 748 6 NOTE_INSN_DELETED)
(note 748 777 551 6 NOTE_INSN_DELETED)
(insn 551 748 553 6 (set (reg:DI 1 dx [orig:384 D.5863 ] [384])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [6 %sfp+-352 S8 A64])) blake_ref.c:177 89 {*movdi_internal}
     (nil))
(note 553 551 773 6 NOTE_INSN_DELETED)
(note 773 553 141 6 NOTE_INSN_DELETED)
(insn 141 773 747 6 (parallel [
            (set (reg:DI 1 dx [orig:384 D.5863 ] [384])
                (xor:DI (reg:DI 1 dx [orig:384 D.5863 ] [384])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 80 [0x50])) [6 %sfp+-464 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 747 141 142 6 (set (reg:DI 40 r11 [orig:214 v$5 ] [214])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-536 S8 A64])) blake_ref.c:177 89 {*movdi_internal}
     (nil))
(insn 142 747 143 6 (parallel [
            (set (reg:DI 1 dx [orig:385 D.5863 ] [385])
                (plus:DI (reg:DI 1 dx [orig:384 D.5863 ] [384])
                    (reg:DI 40 r11 [orig:214 v$5 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:214 v$5 ] [214])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 144 6 (parallel [
            (set (reg:DI 1 dx [orig:151 D.5863 ] [151])
                (plus:DI (reg:DI 1 dx [orig:385 D.5863 ] [385])
                    (reg:DI 5 di [orig:225 v$1 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:225 v$1 ] [225])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 144 143 145 6 (parallel [
            (set (reg:DI 42 r13 [orig:386 D.5863 ] [386])
                (xor:DI (reg:DI 42 r13 [orig:243 v$13 ] [243])
                    (reg:DI 1 dx [orig:151 D.5863 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 145 144 555 6 (parallel [
            (set (reg:DI 42 r13 [orig:153 D.5863 ] [153])
                (rotate:DI (reg:DI 42 r13 [orig:386 D.5863 ] [386])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 555 145 146 6 (set (reg:DI 5 di [orig:154 D.5863 ] [154])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-480 S8 A64])) blake_ref.c:177 89 {*movdi_internal}
     (nil))
(insn 146 555 147 6 (parallel [
            (set (reg:DI 5 di [orig:154 D.5863 ] [154])
                (plus:DI (reg:DI 5 di [orig:154 D.5863 ] [154])
                    (reg:DI 42 r13 [orig:153 D.5863 ] [153])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 6 (parallel [
            (set (reg:DI 40 r11 [orig:387 D.5863 ] [387])
                (xor:DI (reg:DI 40 r11 [orig:387 D.5863 ] [387])
                    (reg:DI 5 di [orig:154 D.5863 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 148 147 559 6 (parallel [
            (set (reg:DI 40 r11 [orig:156 D.5863 ] [156])
                (rotatert:DI (reg:DI 40 r11 [orig:387 D.5863 ] [387])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 559 148 772 6 NOTE_INSN_DELETED)
(note 772 559 149 6 NOTE_INSN_DELETED)
(insn 149 772 150 6 (parallel [
            (set (reg:DI 0 ax [orig:388 D.5863 ] [388])
                (xor:DI (reg:DI 0 ax [orig:388 D.5863 ] [388])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 200 [0xc8])) [6 %sfp+-344 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 150 149 151 6 (parallel [
            (set (reg:DI 0 ax [orig:389 D.5863 ] [389])
                (plus:DI (reg:DI 0 ax [orig:388 D.5863 ] [388])
                    (reg:DI 1 dx [orig:151 D.5863 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:151 D.5863 ] [151])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 152 6 (parallel [
            (set (reg:DI 0 ax [orig:159 D.5863 ] [159])
                (plus:DI (reg:DI 0 ax [orig:389 D.5863 ] [389])
                    (reg:DI 40 r11 [orig:156 D.5863 ] [156])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 152 151 153 6 (parallel [
            (set (reg:DI 42 r13 [orig:390 D.5863 ] [390])
                (xor:DI (reg:DI 42 r13 [orig:153 D.5863 ] [153])
                    (reg:DI 0 ax [orig:159 D.5863 ] [159])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 786 6 (parallel [
            (set (reg:DI 42 r13 [orig:161 D.5863 ] [161])
                (rotatert:DI (reg:DI 42 r13 [orig:390 D.5863 ] [390])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 786 153 746 6 (set (reg:DI 5 di [orig:162 D.5863 ] [162])
        (plus:DI (reg:DI 5 di [orig:154 D.5863 ] [154])
            (reg:DI 42 r13 [orig:161 D.5863 ] [161]))) blake_ref.c:177 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:154 D.5863 ] [154])
        (nil)))
(note 746 786 745 6 NOTE_INSN_DELETED)
(insn 745 746 776 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-480 S8 A64])
        (reg:DI 5 di [orig:162 D.5863 ] [162])) blake_ref.c:177 89 {*movdi_internal}
     (nil))
(note 776 745 155 6 NOTE_INSN_DELETED)
(insn 155 776 156 6 (parallel [
            (set (reg:DI 40 r11 [orig:391 D.5863 ] [391])
                (xor:DI (reg:DI 40 r11 [orig:156 D.5863 ] [156])
                    (reg:DI 5 di [orig:162 D.5863 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:162 D.5863 ] [162])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 156 155 562 6 (parallel [
            (set (reg:DI 40 r11 [orig:164 D.5863 ] [164])
                (rotatert:DI (reg:DI 40 r11 [orig:391 D.5863 ] [391])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:177 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 562 156 564 6 (set (reg:DI 1 dx [orig:392 D.5863 ] [392])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [6 %sfp+-336 S8 A64])) blake_ref.c:178 89 {*movdi_internal}
     (nil))
(note 564 562 769 6 NOTE_INSN_DELETED)
(note 769 564 157 6 NOTE_INSN_DELETED)
(insn 157 769 744 6 (parallel [
            (set (reg:DI 1 dx [orig:392 D.5863 ] [392])
                (xor:DI (reg:DI 1 dx [orig:392 D.5863 ] [392])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 88 [0x58])) [6 %sfp+-456 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 744 157 158 6 (set (reg:DI 5 di [orig:230 v$6 ] [230])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-528 S8 A64])) blake_ref.c:178 89 {*movdi_internal}
     (nil))
(insn 158 744 566 6 (parallel [
            (set (reg:DI 1 dx [orig:393 D.5863 ] [393])
                (plus:DI (reg:DI 1 dx [orig:392 D.5863 ] [392])
                    (reg:DI 5 di [orig:230 v$6 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 566 158 768 6 NOTE_INSN_DELETED)
(note 768 566 159 6 NOTE_INSN_DELETED)
(insn 159 768 160 6 (parallel [
            (set (reg:DI 1 dx [orig:167 D.5863 ] [167])
                (plus:DI (reg:DI 1 dx [orig:393 D.5863 ] [393])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 24 [0x18])) [6 %sfp+-520 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 160 159 161 6 (parallel [
            (set (reg:DI 3 bx [orig:394 D.5863 ] [394])
                (xor:DI (reg:DI 3 bx [orig:260 v$14 ] [260])
                    (reg:DI 1 dx [orig:167 D.5863 ] [167])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 161 160 162 6 (parallel [
            (set (reg:DI 3 bx [orig:169 D.5863 ] [169])
                (rotate:DI (reg:DI 3 bx [orig:394 D.5863 ] [394])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 162 161 567 6 (parallel [
            (set (reg:DI 44 r15 [orig:170 D.5863 ] [170])
                (plus:DI (reg:DI 44 r15 [orig:211 v$10 ] [211])
                    (reg:DI 3 bx [orig:169 D.5863 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 567 162 163 6 (set (reg:DI 38 r9 [orig:395 D.5863 ] [395])
        (reg:DI 5 di [orig:230 v$6 ] [230])) blake_ref.c:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:230 v$6 ] [230])
        (nil)))
(insn 163 567 164 6 (parallel [
            (set (reg:DI 38 r9 [orig:395 D.5863 ] [395])
                (xor:DI (reg:DI 38 r9 [orig:395 D.5863 ] [395])
                    (reg:DI 44 r15 [orig:170 D.5863 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 164 163 569 6 (parallel [
            (set (reg:DI 38 r9 [orig:172 D.5863 ] [172])
                (rotatert:DI (reg:DI 38 r9 [orig:395 D.5863 ] [395])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 569 164 571 6 (set (reg:DI 43 r14 [orig:396 D.5863 ] [396])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [6 %sfp+-328 S8 A64])) blake_ref.c:178 89 {*movdi_internal}
     (nil))
(note 571 569 767 6 NOTE_INSN_DELETED)
(note 767 571 165 6 NOTE_INSN_DELETED)
(insn 165 767 570 6 (parallel [
            (set (reg:DI 43 r14 [orig:396 D.5863 ] [396])
                (xor:DI (reg:DI 43 r14 [orig:396 D.5863 ] [396])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 184 [0xb8])) [6 %sfp+-360 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 570 165 166 6 (set (reg:DI 2 cx [orig:396 D.5863 ] [396])
        (reg:DI 43 r14 [orig:396 D.5863 ] [396])) blake_ref.c:178 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:396 D.5863 ] [396])
        (nil)))
(insn 166 570 167 6 (parallel [
            (set (reg:DI 2 cx [orig:397 D.5863 ] [397])
                (plus:DI (reg:DI 2 cx [orig:396 D.5863 ] [396])
                    (reg:DI 1 dx [orig:167 D.5863 ] [167])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:167 D.5863 ] [167])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 167 166 168 6 (parallel [
            (set (reg:DI 2 cx [orig:175 D.5863 ] [175])
                (plus:DI (reg:DI 2 cx [orig:397 D.5863 ] [397])
                    (reg:DI 38 r9 [orig:172 D.5863 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 168 167 169 6 (parallel [
            (set (reg:DI 3 bx [orig:398 D.5863 ] [398])
                (xor:DI (reg:DI 3 bx [orig:169 D.5863 ] [169])
                    (reg:DI 2 cx [orig:175 D.5863 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 169 168 170 6 (parallel [
            (set (reg:DI 3 bx [orig:177 D.5863 ] [177])
                (rotatert:DI (reg:DI 3 bx [orig:398 D.5863 ] [398])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 169 171 6 (parallel [
            (set (reg:DI 44 r15 [orig:178 D.5863 ] [178])
                (plus:DI (reg:DI 44 r15 [orig:170 D.5863 ] [170])
                    (reg:DI 3 bx [orig:177 D.5863 ] [177])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 171 170 172 6 (parallel [
            (set (reg:DI 38 r9 [orig:399 D.5863 ] [399])
                (xor:DI (reg:DI 38 r9 [orig:172 D.5863 ] [172])
                    (reg:DI 44 r15 [orig:178 D.5863 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 172 171 572 6 (parallel [
            (set (reg:DI 38 r9 [orig:180 D.5863 ] [180])
                (rotatert:DI (reg:DI 38 r9 [orig:399 D.5863 ] [399])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:178 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 572 172 574 6 (set (reg:DI 1 dx [orig:400 D.5863 ] [400])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [6 %sfp+-320 S8 A64])) blake_ref.c:179 89 {*movdi_internal}
     (nil))
(note 574 572 766 6 NOTE_INSN_DELETED)
(note 766 574 173 6 NOTE_INSN_DELETED)
(insn 173 766 743 6 (parallel [
            (set (reg:DI 1 dx [orig:400 D.5863 ] [400])
                (xor:DI (reg:DI 1 dx [orig:400 D.5863 ] [400])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 96 [0x60])) [6 %sfp+-448 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 743 173 174 6 (set (reg:DI 5 di [orig:246 v$7 ] [246])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-512 S8 A64])) blake_ref.c:179 89 {*movdi_internal}
     (nil))
(insn 174 743 576 6 (parallel [
            (set (reg:DI 1 dx [orig:401 D.5863 ] [401])
                (plus:DI (reg:DI 1 dx [orig:400 D.5863 ] [400])
                    (reg:DI 5 di [orig:246 v$7 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 576 174 765 6 NOTE_INSN_DELETED)
(note 765 576 175 6 NOTE_INSN_DELETED)
(insn 175 765 577 6 (parallel [
            (set (reg:DI 1 dx [orig:183 D.5863 ] [183])
                (plus:DI (reg:DI 1 dx [orig:401 D.5863 ] [401])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 577 175 176 6 (set (reg:DI 41 r12 [orig:402 D.5863 ] [402])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-488 S8 A64])) blake_ref.c:179 89 {*movdi_internal}
     (nil))
(insn 176 577 177 6 (parallel [
            (set (reg:DI 41 r12 [orig:402 D.5863 ] [402])
                (xor:DI (reg:DI 41 r12 [orig:402 D.5863 ] [402])
                    (reg:DI 1 dx [orig:183 D.5863 ] [183])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 177 176 579 6 (parallel [
            (set (reg:DI 41 r12 [orig:185 D.5863 ] [185])
                (rotate:DI (reg:DI 41 r12 [orig:402 D.5863 ] [402])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 579 177 178 6 (set (reg:DI 43 r14 [orig:186 D.5863 ] [186])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [6 %sfp+-496 S8 A64])) blake_ref.c:179 89 {*movdi_internal}
     (nil))
(insn 178 579 179 6 (parallel [
            (set (reg:DI 43 r14 [orig:186 D.5863 ] [186])
                (plus:DI (reg:DI 43 r14 [orig:186 D.5863 ] [186])
                    (reg:DI 41 r12 [orig:185 D.5863 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 179 178 582 6 (parallel [
            (set (reg:DI 5 di [orig:403 D.5863 ] [403])
                (xor:DI (reg:DI 5 di [orig:403 D.5863 ] [403])
                    (reg:DI 43 r14 [orig:186 D.5863 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 582 179 180 6 (set (reg:DI 37 r8 [orig:403 D.5863 ] [403])
        (reg:DI 5 di [orig:403 D.5863 ] [403])) blake_ref.c:179 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:403 D.5863 ] [403])
        (nil)))
(insn 180 582 583 6 (parallel [
            (set (reg:DI 37 r8 [orig:188 D.5863 ] [188])
                (rotatert:DI (reg:DI 37 r8 [orig:403 D.5863 ] [403])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 583 180 585 6 (set (reg:DI 5 di [orig:404 D.5863 ] [404])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [6 %sfp+-312 S8 A64])) blake_ref.c:179 89 {*movdi_internal}
     (nil))
(note 585 583 752 6 NOTE_INSN_DELETED)
(note 752 585 181 6 NOTE_INSN_DELETED)
(insn 181 752 182 6 (parallel [
            (set (reg:DI 5 di [orig:404 D.5863 ] [404])
                (xor:DI (reg:DI 5 di [orig:404 D.5863 ] [404])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 104 [0x68])) [6 %sfp+-440 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 182 181 183 6 (parallel [
            (set (reg:DI 1 dx [orig:405 D.5863 ] [405])
                (plus:DI (reg:DI 1 dx [orig:183 D.5863 ] [183])
                    (reg:DI 5 di [orig:404 D.5863 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:404 D.5863 ] [404])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 183 182 184 6 (parallel [
            (set (reg:DI 1 dx [orig:191 D.5863 ] [191])
                (plus:DI (reg:DI 1 dx [orig:405 D.5863 ] [405])
                    (reg:DI 37 r8 [orig:188 D.5863 ] [188])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 185 6 (parallel [
            (set (reg:DI 41 r12 [orig:406 D.5863 ] [406])
                (xor:DI (reg:DI 41 r12 [orig:185 D.5863 ] [185])
                    (reg:DI 1 dx [orig:191 D.5863 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 185 184 186 6 (parallel [
            (set (reg:DI 41 r12 [orig:193 D.5863 ] [193])
                (rotatert:DI (reg:DI 41 r12 [orig:406 D.5863 ] [406])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 186 185 187 6 (parallel [
            (set (reg:DI 43 r14 [orig:194 D.5863 ] [194])
                (plus:DI (reg:DI 43 r14 [orig:186 D.5863 ] [186])
                    (reg:DI 41 r12 [orig:193 D.5863 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 187 186 188 6 (parallel [
            (set (reg:DI 37 r8 [orig:407 D.5863 ] [407])
                (xor:DI (reg:DI 37 r8 [orig:188 D.5863 ] [188])
                    (reg:DI 43 r14 [orig:194 D.5863 ] [194])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 188 187 586 6 (parallel [
            (set (reg:DI 37 r8 [orig:196 D.5863 ] [196])
                (rotatert:DI (reg:DI 37 r8 [orig:407 D.5863 ] [407])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:179 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 586 188 588 6 (set (reg:DI 5 di [orig:408 D.5863 ] [408])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [6 %sfp+-304 S8 A64])) blake_ref.c:181 89 {*movdi_internal}
     (nil))
(note 588 586 753 6 NOTE_INSN_DELETED)
(note 753 588 189 6 NOTE_INSN_DELETED)
(insn 189 753 190 6 (parallel [
            (set (reg:DI 5 di [orig:408 D.5863 ] [408])
                (xor:DI (reg:DI 5 di [orig:408 D.5863 ] [408])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 112 [0x70])) [6 %sfp+-432 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 190 189 191 6 (parallel [
            (set (reg:DI 39 r10 [orig:409 D.5863 ] [409])
                (plus:DI (reg:DI 39 r10 [orig:143 D.5863 ] [143])
                    (reg:DI 5 di [orig:408 D.5863 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:408 D.5863 ] [408])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 191 190 192 6 (parallel [
            (set (reg:DI 39 r10 [orig:200 D.5863 ] [200])
                (plus:DI (reg:DI 39 r10 [orig:409 D.5863 ] [409])
                    (reg:DI 40 r11 [orig:164 D.5863 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 192 191 193 6 (parallel [
            (set (reg:DI 41 r12 [orig:410 D.5863 ] [410])
                (xor:DI (reg:DI 41 r12 [orig:193 D.5863 ] [193])
                    (reg:DI 39 r10 [orig:200 D.5863 ] [200])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 192 194 6 (parallel [
            (set (reg:DI 41 r12 [orig:202 D.5863 ] [202])
                (rotate:DI (reg:DI 41 r12 [orig:410 D.5863 ] [410])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 194 193 195 6 (parallel [
            (set (reg:DI 44 r15 [orig:203 D.5863 ] [203])
                (plus:DI (reg:DI 44 r15 [orig:178 D.5863 ] [178])
                    (reg:DI 41 r12 [orig:202 D.5863 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 195 194 196 6 (parallel [
            (set (reg:DI 40 r11 [orig:411 D.5863 ] [411])
                (xor:DI (reg:DI 40 r11 [orig:164 D.5863 ] [164])
                    (reg:DI 44 r15 [orig:203 D.5863 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 196 195 589 6 (parallel [
            (set (reg:DI 40 r11 [orig:205 D.5863 ] [205])
                (rotatert:DI (reg:DI 40 r11 [orig:411 D.5863 ] [411])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 589 196 591 6 (set (reg:DI 5 di [orig:412 D.5863 ] [412])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [6 %sfp+-296 S8 A64])) blake_ref.c:181 89 {*movdi_internal}
     (nil))
(note 591 589 754 6 NOTE_INSN_DELETED)
(note 754 591 197 6 NOTE_INSN_DELETED)
(insn 197 754 198 6 (parallel [
            (set (reg:DI 5 di [orig:412 D.5863 ] [412])
                (xor:DI (reg:DI 5 di [orig:412 D.5863 ] [412])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 120 [0x78])) [6 %sfp+-424 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 198 197 199 6 (parallel [
            (set (reg:DI 39 r10 [orig:413 D.5863 ] [413])
                (plus:DI (reg:DI 39 r10 [orig:200 D.5863 ] [200])
                    (reg:DI 5 di [orig:412 D.5863 ] [412])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 5 di [orig:412 D.5863 ] [412])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 742 6 (parallel [
            (set (reg:DI 39 r10 [orig:208 v$0 ] [208])
                (plus:DI (reg:DI 39 r10 [orig:413 D.5863 ] [413])
                    (reg:DI 40 r11 [orig:205 D.5863 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 742 199 200 6 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 39 r10 [orig:208 v$0 ] [208])) blake_ref.c:181 89 {*movdi_internal}
     (nil))
(insn 200 742 201 6 (parallel [
            (set (reg:DI 41 r12 [orig:414 D.5863 ] [414])
                (xor:DI (reg:DI 41 r12 [orig:202 D.5863 ] [202])
                    (reg:DI 39 r10 [orig:208 v$0 ] [208])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:208 v$0 ] [208])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 201 200 741 6 (parallel [
            (set (reg:DI 41 r12 [orig:210 v$15 ] [210])
                (rotatert:DI (reg:DI 41 r12 [orig:210 v$15 ] [210])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 741 201 202 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-488 S8 A64])
        (reg:DI 41 r12 [orig:210 v$15 ] [210])) blake_ref.c:181 89 {*movdi_internal}
     (nil))
(insn 202 741 203 6 (parallel [
            (set (reg:DI 44 r15 [orig:211 v$10 ] [211])
                (plus:DI (reg:DI 44 r15 [orig:203 D.5863 ] [203])
                    (reg:DI 41 r12 [orig:210 v$15 ] [210])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 41 r12 [orig:210 v$15 ] [210])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 6 (parallel [
            (set (reg:DI 40 r11 [orig:415 D.5863 ] [415])
                (xor:DI (reg:DI 40 r11 [orig:205 D.5863 ] [205])
                    (reg:DI 44 r15 [orig:211 v$10 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 204 203 598 6 (parallel [
            (set (reg:DI 40 r11 [orig:214 v$5 ] [214])
                (rotatert:DI (reg:DI 40 r11 [orig:214 v$5 ] [214])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:181 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 598 204 599 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [6 %sfp+-536 S8 A64])
        (reg:DI 40 r11 [orig:214 v$5 ] [214])) blake_ref.c:181 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 40 r11 [orig:214 v$5 ] [214])
        (nil)))
(insn 599 598 601 6 (set (reg:DI 39 r10 [orig:416 D.5863 ] [416])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [6 %sfp+-288 S8 A64])) blake_ref.c:182 89 {*movdi_internal}
     (nil))
(note 601 599 764 6 NOTE_INSN_DELETED)
(note 764 601 205 6 NOTE_INSN_DELETED)
(insn 205 764 206 6 (parallel [
            (set (reg:DI 39 r10 [orig:416 D.5863 ] [416])
                (xor:DI (reg:DI 39 r10 [orig:416 D.5863 ] [416])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 128 [0x80])) [6 %sfp+-416 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 206 205 207 6 (parallel [
            (set (reg:DI 0 ax [orig:417 D.5863 ] [417])
                (plus:DI (reg:DI 0 ax [orig:159 D.5863 ] [159])
                    (reg:DI 39 r10 [orig:416 D.5863 ] [416])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:416 D.5863 ] [416])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 207 206 208 6 (parallel [
            (set (reg:DI 0 ax [orig:217 D.5863 ] [217])
                (plus:DI (reg:DI 0 ax [orig:417 D.5863 ] [417])
                    (reg:DI 38 r9 [orig:180 D.5863 ] [180])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 208 207 209 6 (parallel [
            (set (reg:DI 6 bp [orig:418 D.5863 ] [418])
                (xor:DI (reg:DI 6 bp [orig:145 D.5863 ] [145])
                    (reg:DI 0 ax [orig:217 D.5863 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 209 208 210 6 (parallel [
            (set (reg:DI 6 bp [orig:219 D.5863 ] [219])
                (rotate:DI (reg:DI 6 bp [orig:418 D.5863 ] [418])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 210 209 211 6 (parallel [
            (set (reg:DI 43 r14 [orig:220 D.5863 ] [220])
                (plus:DI (reg:DI 43 r14 [orig:194 D.5863 ] [194])
                    (reg:DI 6 bp [orig:219 D.5863 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 211 210 212 6 (parallel [
            (set (reg:DI 38 r9 [orig:419 D.5863 ] [419])
                (xor:DI (reg:DI 38 r9 [orig:180 D.5863 ] [180])
                    (reg:DI 43 r14 [orig:220 D.5863 ] [220])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 212 211 602 6 (parallel [
            (set (reg:DI 38 r9 [orig:222 D.5863 ] [222])
                (rotatert:DI (reg:DI 38 r9 [orig:419 D.5863 ] [419])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 602 212 604 6 (set (reg:DI 39 r10 [orig:420 D.5863 ] [420])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 264 [0x108])) [6 %sfp+-280 S8 A64])) blake_ref.c:182 89 {*movdi_internal}
     (nil))
(note 604 602 763 6 NOTE_INSN_DELETED)
(note 763 604 213 6 NOTE_INSN_DELETED)
(insn 213 763 214 6 (parallel [
            (set (reg:DI 39 r10 [orig:420 D.5863 ] [420])
                (xor:DI (reg:DI 39 r10 [orig:420 D.5863 ] [420])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 136 [0x88])) [6 %sfp+-408 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 214 213 787 6 (parallel [
            (set (reg:DI 0 ax [orig:421 D.5863 ] [421])
                (plus:DI (reg:DI 0 ax [orig:217 D.5863 ] [217])
                    (reg:DI 39 r10 [orig:420 D.5863 ] [420])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:420 D.5863 ] [420])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 787 214 216 6 (set (reg:DI 5 di [orig:225 v$1 ] [225])
        (plus:DI (reg:DI 0 ax [orig:421 D.5863 ] [421])
            (reg:DI 38 r9 [orig:222 D.5863 ] [222]))) blake_ref.c:182 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:421 D.5863 ] [421])
        (nil)))
(insn 216 787 217 6 (parallel [
            (set (reg:DI 6 bp [orig:422 D.5863 ] [422])
                (xor:DI (reg:DI 6 bp [orig:219 D.5863 ] [219])
                    (reg:DI 5 di [orig:225 v$1 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 217 216 218 6 (parallel [
            (set (reg:DI 6 bp [orig:227 v$12 ] [227])
                (rotatert:DI (reg:DI 6 bp [orig:422 D.5863 ] [422])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 218 217 740 6 (parallel [
            (set (reg:DI 43 r14 [orig:197 v$11 ] [197])
                (plus:DI (reg:DI 43 r14 [orig:220 D.5863 ] [220])
                    (reg:DI 6 bp [orig:227 v$12 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 740 218 219 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [6 %sfp+-496 S8 A64])
        (reg:DI 43 r14 [orig:197 v$11 ] [197])) blake_ref.c:182 89 {*movdi_internal}
     (nil))
(insn 219 740 220 6 (parallel [
            (set (reg:DI 38 r9 [orig:423 D.5863 ] [423])
                (xor:DI (reg:DI 38 r9 [orig:222 D.5863 ] [222])
                    (reg:DI 43 r14 [orig:197 v$11 ] [197])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:197 v$11 ] [197])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 220 219 608 6 (parallel [
            (set (reg:DI 38 r9 [orig:230 v$6 ] [230])
                (rotatert:DI (reg:DI 38 r9 [orig:230 v$6 ] [230])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:182 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 608 220 609 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-528 S8 A64])
        (reg:DI 38 r9 [orig:230 v$6 ] [230])) blake_ref.c:182 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [orig:230 v$6 ] [230])
        (nil)))
(insn 609 608 611 6 (set (reg:DI 38 r9 [orig:424 D.5863 ] [424])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 272 [0x110])) [6 %sfp+-272 S8 A64])) blake_ref.c:183 89 {*movdi_internal}
     (nil))
(note 611 609 762 6 NOTE_INSN_DELETED)
(note 762 611 221 6 NOTE_INSN_DELETED)
(insn 221 762 222 6 (parallel [
            (set (reg:DI 38 r9 [orig:424 D.5863 ] [424])
                (xor:DI (reg:DI 38 r9 [orig:424 D.5863 ] [424])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 144 [0x90])) [6 %sfp+-400 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 6 (parallel [
            (set (reg:DI 2 cx [orig:425 D.5863 ] [425])
                (plus:DI (reg:DI 2 cx [orig:175 D.5863 ] [175])
                    (reg:DI 38 r9 [orig:424 D.5863 ] [424])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:424 D.5863 ] [424])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 223 222 224 6 (parallel [
            (set (reg:DI 2 cx [orig:233 D.5863 ] [233])
                (plus:DI (reg:DI 2 cx [orig:425 D.5863 ] [425])
                    (reg:DI 37 r8 [orig:196 D.5863 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 223 225 6 (parallel [
            (set (reg:DI 42 r13 [orig:426 D.5863 ] [426])
                (xor:DI (reg:DI 42 r13 [orig:161 D.5863 ] [161])
                    (reg:DI 2 cx [orig:233 D.5863 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 225 224 612 6 (parallel [
            (set (reg:DI 42 r13 [orig:235 D.5863 ] [235])
                (rotate:DI (reg:DI 42 r13 [orig:426 D.5863 ] [426])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 612 225 788 6 (set (reg:DI 0 ax [orig:146 D.5863 ] [146])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [6 %sfp+-472 S8 A64])) blake_ref.c:183 89 {*movdi_internal}
     (nil))
(insn 788 612 227 6 (set (reg:DI 38 r9 [orig:236 D.5863 ] [236])
        (plus:DI (reg:DI 0 ax [orig:146 D.5863 ] [146])
            (reg:DI 42 r13 [orig:235 D.5863 ] [235]))) blake_ref.c:183 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:146 D.5863 ] [146])
        (nil)))
(insn 227 788 228 6 (parallel [
            (set (reg:DI 37 r8 [orig:427 D.5863 ] [427])
                (xor:DI (reg:DI 37 r8 [orig:196 D.5863 ] [196])
                    (reg:DI 38 r9 [orig:236 D.5863 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 228 227 613 6 (parallel [
            (set (reg:DI 37 r8 [orig:238 D.5863 ] [238])
                (rotatert:DI (reg:DI 37 r8 [orig:427 D.5863 ] [427])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 613 228 615 6 (set (reg:DI 0 ax [orig:428 D.5863 ] [428])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 280 [0x118])) [6 %sfp+-264 S8 A64])) blake_ref.c:183 89 {*movdi_internal}
     (nil))
(note 615 613 761 6 NOTE_INSN_DELETED)
(note 761 615 229 6 NOTE_INSN_DELETED)
(insn 229 761 230 6 (parallel [
            (set (reg:DI 0 ax [orig:428 D.5863 ] [428])
                (xor:DI (reg:DI 0 ax [orig:428 D.5863 ] [428])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 152 [0x98])) [6 %sfp+-392 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 230 229 231 6 (parallel [
            (set (reg:DI 2 cx [orig:429 D.5863 ] [429])
                (plus:DI (reg:DI 2 cx [orig:233 D.5863 ] [233])
                    (reg:DI 0 ax [orig:428 D.5863 ] [428])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:428 D.5863 ] [428])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 231 230 739 6 (parallel [
            (set (reg:DI 2 cx [orig:241 v$2 ] [241])
                (plus:DI (reg:DI 2 cx [orig:429 D.5863 ] [429])
                    (reg:DI 37 r8 [orig:238 D.5863 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 739 231 232 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-520 S8 A64])
        (reg:DI 2 cx [orig:241 v$2 ] [241])) blake_ref.c:183 89 {*movdi_internal}
     (nil))
(insn 232 739 233 6 (parallel [
            (set (reg:DI 42 r13 [orig:430 D.5863 ] [430])
                (xor:DI (reg:DI 42 r13 [orig:235 D.5863 ] [235])
                    (reg:DI 2 cx [orig:241 v$2 ] [241])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:241 v$2 ] [241])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 6 (parallel [
            (set (reg:DI 42 r13 [orig:243 v$13 ] [243])
                (rotatert:DI (reg:DI 42 r13 [orig:430 D.5863 ] [430])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 6 (parallel [
            (set (reg:DI 38 r9 [orig:244 v$8 ] [244])
                (plus:DI (reg:DI 38 r9 [orig:236 D.5863 ] [236])
                    (reg:DI 42 r13 [orig:243 v$13 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 235 234 618 6 (parallel [
            (set (reg:DI 37 r8 [orig:431 D.5863 ] [431])
                (xor:DI (reg:DI 37 r8 [orig:238 D.5863 ] [238])
                    (reg:DI 38 r9 [orig:244 v$8 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 618 235 236 6 (set (reg:DI 2 cx [orig:246 v$7 ] [246])
        (reg:DI 37 r8 [orig:431 D.5863 ] [431])) blake_ref.c:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:431 D.5863 ] [431])
        (nil)))
(insn 236 618 619 6 (parallel [
            (set (reg:DI 2 cx [orig:246 v$7 ] [246])
                (rotatert:DI (reg:DI 2 cx [orig:246 v$7 ] [246])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:183 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 619 236 620 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [6 %sfp+-512 S8 A64])
        (reg:DI 2 cx [orig:246 v$7 ] [246])) blake_ref.c:183 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:246 v$7 ] [246])
        (nil)))
(insn 620 619 622 6 (set (reg:DI 0 ax [orig:432 D.5863 ] [432])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [6 %sfp+-256 S8 A64])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(note 622 620 760 6 NOTE_INSN_DELETED)
(note 760 622 237 6 NOTE_INSN_DELETED)
(insn 237 760 238 6 (parallel [
            (set (reg:DI 0 ax [orig:432 D.5863 ] [432])
                (xor:DI (reg:DI 0 ax [orig:432 D.5863 ] [432])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 160 [0xa0])) [6 %sfp+-384 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 238 237 738 6 (parallel [
            (set (reg:DI 1 dx [orig:433 D.5863 ] [433])
                (plus:DI (reg:DI 1 dx [orig:191 D.5863 ] [191])
                    (reg:DI 0 ax [orig:432 D.5863 ] [432])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:432 D.5863 ] [432])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 738 238 239 6 (set (reg:DI 37 r8 [orig:148 D.5863 ] [148])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 304 [0x130])) [6 %sfp+-240 S8 A64])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(insn 239 738 240 6 (parallel [
            (set (reg:DI 1 dx [orig:250 D.5863 ] [250])
                (plus:DI (reg:DI 1 dx [orig:433 D.5863 ] [433])
                    (reg:DI 37 r8 [orig:148 D.5863 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 240 239 241 6 (parallel [
            (set (reg:DI 3 bx [orig:434 D.5863 ] [434])
                (xor:DI (reg:DI 3 bx [orig:177 D.5863 ] [177])
                    (reg:DI 1 dx [orig:250 D.5863 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 241 240 624 6 (parallel [
            (set (reg:DI 3 bx [orig:252 D.5863 ] [252])
                (rotate:DI (reg:DI 3 bx [orig:434 D.5863 ] [434])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 588 {*rotldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 624 241 242 6 (set (reg:DI 0 ax [orig:162 D.5863 ] [162])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-480 S8 A64])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(insn 242 624 243 6 (parallel [
            (set (reg:DI 0 ax [orig:253 D.5863 ] [253])
                (plus:DI (reg:DI 0 ax [orig:162 D.5863 ] [162])
                    (reg:DI 3 bx [orig:252 D.5863 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 243 242 244 6 (parallel [
            (set (reg:DI 37 r8 [orig:435 D.5863 ] [435])
                (xor:DI (reg:DI 37 r8 [orig:435 D.5863 ] [435])
                    (reg:DI 0 ax [orig:253 D.5863 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 244 243 627 6 (parallel [
            (set (reg:DI 37 r8 [orig:255 D.5863 ] [255])
                (rotatert:DI (reg:DI 37 r8 [orig:435 D.5863 ] [435])
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 627 244 629 6 (set (reg:DI 2 cx [orig:436 D.5863 ] [436])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 296 [0x128])) [6 %sfp+-248 S8 A64])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(note 629 627 759 6 NOTE_INSN_DELETED)
(note 759 629 245 6 NOTE_INSN_DELETED)
(insn 245 759 246 6 (parallel [
            (set (reg:DI 2 cx [orig:436 D.5863 ] [436])
                (xor:DI (reg:DI 2 cx [orig:436 D.5863 ] [436])
                    (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                            (const_int 168 [0xa8])) [6 %sfp+-376 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 246 245 247 6 (parallel [
            (set (reg:DI 1 dx [orig:437 D.5863 ] [437])
                (plus:DI (reg:DI 1 dx [orig:250 D.5863 ] [250])
                    (reg:DI 2 cx [orig:436 D.5863 ] [436])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:436 D.5863 ] [436])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 247 246 737 6 (parallel [
            (set (reg:DI 1 dx [orig:258 v$3 ] [258])
                (plus:DI (reg:DI 1 dx [orig:437 D.5863 ] [437])
                    (reg:DI 37 r8 [orig:255 D.5863 ] [255])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 737 247 248 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])
        (reg:DI 1 dx [orig:258 v$3 ] [258])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(insn 248 737 249 6 (parallel [
            (set (reg:DI 3 bx [orig:438 D.5863 ] [438])
                (xor:DI (reg:DI 3 bx [orig:252 D.5863 ] [252])
                    (reg:DI 1 dx [orig:258 v$3 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:258 v$3 ] [258])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 6 (parallel [
            (set (reg:DI 3 bx [orig:260 v$14 ] [260])
                (rotatert:DI (reg:DI 3 bx [orig:438 D.5863 ] [438])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 250 249 736 6 (parallel [
            (set (reg:DI 0 ax [orig:262 v$9 ] [262])
                (plus:DI (reg:DI 0 ax [orig:253 D.5863 ] [253])
                    (reg:DI 3 bx [orig:260 v$14 ] [260])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 736 250 251 6 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [6 %sfp+-480 S8 A64])
        (reg:DI 0 ax [orig:262 v$9 ] [262])) blake_ref.c:184 89 {*movdi_internal}
     (nil))
(insn 251 736 252 6 (parallel [
            (set (reg:DI 37 r8 [orig:439 D.5863 ] [439])
                (xor:DI (reg:DI 37 r8 [orig:255 D.5863 ] [255])
                    (reg:DI 0 ax [orig:262 v$9 ] [262])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 402 {*xordi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:262 v$9 ] [262])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 6 (parallel [
            (set (reg:DI 37 r8 [orig:264 v$4 ] [264])
                (rotatert:DI (reg:DI 37 r8 [orig:439 D.5863 ] [439])
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:184 589 {*rotrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 253 252 254 6 NOTE_INSN_DELETED)
(insn 254 253 634 6 (parallel [
            (set (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                (plus:DI (reg:DI 4 si [orig:269 ivtmp.149 ] [269])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 634 254 757 6 NOTE_INSN_DELETED)
(note 757 634 255 6 NOTE_INSN_DELETED)
(insn 255 757 758 6 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                                (const_int 316 [0x13c])) [6 %sfp+-228 S4 A32])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                        (const_int 316 [0x13c])) [6 %sfp+-228 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                            (const_int 316 [0x13c])) [6 %sfp+-228 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
        ]) blake_ref.c:173 225 {*addsi_2}
     (nil))
(note 758 255 635 6 NOTE_INSN_DELETED)
(note 635 758 256 6 NOTE_INSN_DELETED)
(jump_insn 256 635 359 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 822)
            (pc))) blake_ref.c:173 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9412 (nil)))
 -> 822)
;;  succ:       5 [94.1%]  (CAN_FALLTHRU)
;;              7 [5.9%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]

;; basic block 7, loop depth 0, count 0, freq 588, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [5.9%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(note 359 256 425 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 425 359 751 7 (set (reg:DI 4 si [orig:211 v$10 ] [211])
        (reg:DI 44 r15 [orig:211 v$10 ] [211])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:211 v$10 ] [211])
        (nil)))
(note 751 425 430 7 NOTE_INSN_DELETED)
(insn 430 751 665 7 (set (reg:DI 44 r15 [orig:258 v$3 ] [258])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 665 430 667 7 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])
        (reg:DI 38 r9 [orig:244 v$8 ] [244])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [orig:244 v$8 ] [244])
        (nil)))
(insn 667 665 361 7 (set (reg:DI 22 xmm1 [orig:488 vect_cst_.130 ] [488])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-504 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 361 667 669 7 (set (reg:V2DI 22 xmm1 [orig:488 vect_cst_.130 ] [488])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:488 vect_cst_.130 ] [488])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])) [6 %sfp+-480 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 669 361 671 7 (set (reg:DI 21 xmm0 [orig:489 vect_cst_.125 ] [489])
        (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 671 669 362 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 5 di [orig:225 v$1 ] [225])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 43 r14 [orig:225 v$1 ] [225])
        (nil)))
(insn 362 671 363 7 (set (reg:V2DI 21 xmm0 [orig:489 vect_cst_.125 ] [489])
        (vec_concat:V2DI (reg:DI 21 xmm0 [orig:489 vect_cst_.125 ] [489])
            (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 363 362 673 7 (set (reg:V2DI 21 xmm0 [orig:490 D.5862 ] [490])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:489 vect_cst_.125 ] [489])
            (reg:V2DI 22 xmm1 [orig:488 vect_cst_.130 ] [488]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:488 vect_cst_.130 ] [488])
        (nil)))
(insn 673 363 364 7 (set (reg:DI 24 xmm3 [orig:491 vect_cst_.120 ] [491])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 384 [0x180])) [6 %sfp+-160 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 364 673 365 7 (set (reg:V2DI 24 xmm3 [orig:491 vect_cst_.120 ] [491])
        (vec_concat:V2DI (reg:DI 24 xmm3 [orig:491 vect_cst_.120 ] [491])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 392 [0x188])) [6 %sfp+-152 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 365 364 676 7 (set (reg:V2DI 21 xmm0 [orig:492 D.5862 ] [492])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:490 D.5862 ] [490])
            (reg:V2DI 24 xmm3 [orig:491 vect_cst_.120 ] [491]))) blake_ref.c:189 3449 {*xorv2di3}
     (nil))
(insn 676 365 366 7 (set (reg:DI 22 xmm1 [orig:493 vect_cst_.116 ] [493])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 320 [0x140])) [6 %sfp+-224 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 366 676 367 7 (set (reg:V2DI 22 xmm1 [orig:493 vect_cst_.116 ] [493])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:493 vect_cst_.116 ] [493])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 328 [0x148])) [6 %sfp+-216 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 367 366 678 7 (set (reg:V2DI 21 xmm0 [orig:494 vect__785.126 ] [494])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:492 D.5862 ] [492])
            (reg:V2DI 22 xmm1 [orig:493 vect_cst_.116 ] [493]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:493 vect_cst_.116 ] [493])
        (nil)))
(insn 678 367 368 7 (set (reg:DI 0 ax [718])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 624 [0x270])) [4 state+0 S8 A64])) blake_ref.c:189 89 {*movdi_internal}
     (nil))
(insn 368 678 680 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [718])
                (const_int 136 [0x88])) [3 MEM[(long long unsigned int *)state_534(D) + 136B]+0 S16 A64])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:494 vect__785.126 ] [494])
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:494 vect__785.126 ] [494])
        (nil)))
(insn 680 368 682 7 (set (reg:DI 22 xmm1 [orig:495 vect_cst_.124 ] [495])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [6 %sfp+-520 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 682 680 370 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 44 r15 [orig:258 v$3 ] [258])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:258 v$3 ] [258])
        (nil)))
(insn 370 682 684 7 (set (reg:V2DI 22 xmm1 [orig:495 vect_cst_.124 ] [495])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:495 vect_cst_.124 ] [495])
            (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 684 370 755 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 4 si [orig:211 v$10 ] [211])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:211 v$10 ] [211])
        (nil)))
(insn 755 684 371 7 (set (reg:DI 21 xmm0 [orig:496 vect_cst_.129 ] [496])
        (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 371 755 372 7 (set (reg:V2DI 21 xmm0 [orig:496 vect_cst_.129 ] [496])
        (vec_concat:V2DI (reg:DI 21 xmm0 [orig:496 vect_cst_.129 ] [496])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])) [6 %sfp+-496 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 372 371 687 7 (set (reg:V2DI 21 xmm0 [orig:497 D.5862 ] [497])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:496 vect_cst_.129 ] [496])
            (reg:V2DI 22 xmm1 [orig:495 vect_cst_.124 ] [495]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:495 vect_cst_.124 ] [495])
        (nil)))
(insn 687 372 373 7 (set (reg:DI 23 xmm2 [orig:498 vect_cst_.119 ] [498])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 400 [0x190])) [6 %sfp+-144 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 373 687 374 7 (set (reg:V2DI 23 xmm2 [orig:498 vect_cst_.119 ] [498])
        (vec_concat:V2DI (reg:DI 23 xmm2 [orig:498 vect_cst_.119 ] [498])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 408 [0x198])) [6 %sfp+-136 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 374 373 690 7 (set (reg:V2DI 21 xmm0 [orig:499 D.5862 ] [499])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:497 D.5862 ] [497])
            (reg:V2DI 23 xmm2 [orig:498 vect_cst_.119 ] [498]))) blake_ref.c:189 3449 {*xorv2di3}
     (nil))
(insn 690 374 375 7 (set (reg:DI 22 xmm1 [orig:500 vect_cst_.115 ] [500])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 336 [0x150])) [6 %sfp+-208 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 375 690 376 7 (set (reg:V2DI 22 xmm1 [orig:500 vect_cst_.115 ] [500])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:500 vect_cst_.115 ] [500])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 344 [0x158])) [6 %sfp+-200 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 376 375 377 7 (set (reg:V2DI 21 xmm0 [orig:501 vect__785.126 ] [501])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:499 D.5862 ] [499])
            (reg:V2DI 22 xmm1 [orig:500 vect_cst_.115 ] [500]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:500 vect_cst_.115 ] [500])
        (nil)))
(insn 377 376 694 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [724])
                (const_int 152 [0x98])) [3 MEM[(long long unsigned int *)state_534(D) + 152B]+0 S16 A64])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:501 vect__785.126 ] [501])
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:501 vect__785.126 ] [501])
        (nil)))
(insn 694 377 697 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 6 bp [orig:227 v$12 ] [227])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:227 v$12 ] [227])
        (nil)))
(insn 697 694 696 7 (set (reg:DI 21 xmm0 [orig:502 vect_cst_.123 ] [502])
        (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 696 697 379 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 42 r13 [orig:243 v$13 ] [243])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:243 v$13 ] [243])
        (nil)))
(insn 379 696 699 7 (set (reg:V2DI 21 xmm0 [orig:502 vect_cst_.123 ] [502])
        (vec_concat:V2DI (reg:DI 21 xmm0 [orig:502 vect_cst_.123 ] [502])
            (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 699 379 701 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 37 r8 [orig:264 v$4 ] [264])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:264 v$4 ] [264])
        (nil)))
(insn 701 699 380 7 (set (reg:DI 22 xmm1 [orig:503 vect_cst_.128 ] [503])
        (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 380 701 381 7 (set (reg:V2DI 22 xmm1 [orig:503 vect_cst_.128 ] [503])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:503 vect_cst_.128 ] [503])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])) [6 %sfp+-536 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 381 380 383 7 (set (reg:V2DI 21 xmm0 [orig:504 D.5862 ] [504])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:502 vect_cst_.123 ] [502])
            (reg:V2DI 22 xmm1 [orig:503 vect_cst_.128 ] [503]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:503 vect_cst_.128 ] [503])
        (nil)))
(insn 383 381 703 7 (set (reg:V2DI 21 xmm0 [orig:506 D.5862 ] [506])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:504 D.5862 ] [504])
            (reg:V2DI 24 xmm3 [orig:491 vect_cst_.120 ] [491]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [orig:491 vect_cst_.120 ] [491])
        (nil)))
(insn 703 383 384 7 (set (reg:DI 24 xmm3 [orig:507 vect_cst_.114 ] [507])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 352 [0x160])) [6 %sfp+-192 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 384 703 385 7 (set (reg:V2DI 24 xmm3 [orig:507 vect_cst_.114 ] [507])
        (vec_concat:V2DI (reg:DI 24 xmm3 [orig:507 vect_cst_.114 ] [507])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 360 [0x168])) [6 %sfp+-184 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 385 384 386 7 (set (reg:V2DI 21 xmm0 [orig:508 vect__785.126 ] [508])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:506 D.5862 ] [506])
            (reg:V2DI 24 xmm3 [orig:507 vect_cst_.114 ] [507]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 24 xmm3 [orig:507 vect_cst_.114 ] [507])
        (nil)))
(insn 386 385 707 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [731])
                (const_int 168 [0xa8])) [3 MEM[(long long unsigned int *)state_534(D) + 168B]+0 S16 A64])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:508 vect__785.126 ] [508])
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:508 vect__785.126 ] [508])
        (nil)))
(insn 707 386 388 7 (set (reg:DI 21 xmm0 [orig:509 vect_cst_.127 ] [509])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [6 %sfp+-528 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 388 707 710 7 (set (reg:V2DI 21 xmm0 [orig:509 vect_cst_.127 ] [509])
        (vec_concat:V2DI (reg:DI 21 xmm0 [orig:509 vect_cst_.127 ] [509])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])) [6 %sfp+-512 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 710 388 712 7 (set (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])
        (reg:DI 3 bx [orig:260 v$14 ] [260])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [orig:260 v$14 ] [260])
        (nil)))
(insn 712 710 389 7 (set (reg:DI 22 xmm1 [orig:510 vect_cst_.122 ] [510])
        (mem/c:DI (reg/f:DI 7 sp) [6 %sfp+-544 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 389 712 390 7 (set (reg:V2DI 22 xmm1 [orig:510 vect_cst_.122 ] [510])
        (vec_concat:V2DI (reg:DI 22 xmm1 [orig:510 vect_cst_.122 ] [510])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 56 [0x38])) [6 %sfp+-488 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 390 389 392 7 (set (reg:V2DI 21 xmm0 [orig:511 D.5862 ] [511])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:509 vect_cst_.127 ] [509])
            (reg:V2DI 22 xmm1 [orig:510 vect_cst_.122 ] [510]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 22 xmm1 [orig:510 vect_cst_.122 ] [510])
        (nil)))
(insn 392 390 714 7 (set (reg:V2DI 21 xmm0 [orig:513 D.5862 ] [513])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:511 D.5862 ] [511])
            (reg:V2DI 23 xmm2 [orig:498 vect_cst_.119 ] [498]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 23 xmm2 [orig:498 vect_cst_.119 ] [498])
        (nil)))
(insn 714 392 393 7 (set (reg:DI 23 xmm2 [orig:514 vect_cst_.113 ] [514])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 368 [0x170])) [6 %sfp+-176 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 393 714 394 7 (set (reg:V2DI 23 xmm2 [orig:514 vect_cst_.113 ] [514])
        (vec_concat:V2DI (reg:DI 23 xmm2 [orig:514 vect_cst_.113 ] [514])
            (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 376 [0x178])) [6 %sfp+-168 S8 A64]))) 3673 {vec_concatv2di}
     (nil))
(insn 394 393 395 7 (set (reg:V2DI 21 xmm0 [orig:515 vect__785.126 ] [515])
        (xor:V2DI (reg:V2DI 21 xmm0 [orig:513 D.5862 ] [513])
            (reg:V2DI 23 xmm2 [orig:514 vect_cst_.113 ] [514]))) blake_ref.c:189 3449 {*xorv2di3}
     (expr_list:REG_DEAD (reg:V2DI 23 xmm2 [orig:514 vect_cst_.113 ] [514])
        (nil)))
(insn 395 394 817 7 (set (mem:V16QI (plus:DI (reg:DI 0 ax [736])
                (const_int 184 [0xb8])) [3 MEM[(long long unsigned int *)state_534(D) + 184B]+0 S16 A64])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [orig:515 vect__785.126 ] [515])
            ] UNSPEC_STOREU)) blake_ref.c:189 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [orig:515 vect__785.126 ] [515])
        (expr_list:REG_DEAD (reg:DI 0 ax [736])
            (nil))))
(insn 817 395 401 7 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:199 83 {*movdi_xor}
     (nil))
(insn 401 817 800 7 (use (reg/i:SI 0 ax)) blake_ref.c:199 -1
     (nil))
(note 800 401 801 7 NOTE_INSN_EPILOGUE_BEG)
(insn 801 800 802 7 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:199 677 {blockage}
     (nil))
(insn/f 802 801 803 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 552 [0x228])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:199 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 552 [0x228])))
            (nil))))
(insn/f 803 802 804 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 804 803 805 7 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
            (nil))))
(insn/f 805 804 806 7 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(insn/f 806 805 807 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(insn/f 807 806 808 7 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
            (nil))))
(insn/f 808 807 809 7 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
            (nil))))
(insn/f 809 808 810 7 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
            (nil))))
(insn/f 810 809 811 7 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:199 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 44 r15)
            (nil))))
(jump_insn 811 810 812 7 (simple_return) blake_ref.c:199 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 812 811 406)
;; basic block 8, loop depth 0, count 0, freq 294, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 42 [r13]
;; live  in  	 5 [di] 7 [sp] 38 [r9] 40 [r11] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 42 [r13]
;; live  kill	
(code_label 406 812 405 8 12 "" [1 uses])
(note 405 406 9 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 9 405 525 8 (set (reg:DI 0 ax [orig:210 v$15 ] [210])
        (const_int 4577018097722394903 [0x3f84d5b5b5470917])) blake_ref.c:163 89 {*movdi_internal}
     (nil))
(insn 525 9 10 8 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [6 %sfp+-488 S8 A64])
        (reg:DI 0 ax [orig:210 v$15 ] [210])) blake_ref.c:163 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:210 v$15 ] [210])
        (nil)))
(insn 10 525 11 8 (set (reg:DI 3 bx [orig:260 v$14 ] [260])
        (const_int -4563226453097033507 [0xc0ac29b7c97c50dd])) blake_ref.c:162 89 {*movdi_internal}
     (nil))
(insn 11 10 12 8 (set (reg:DI 42 r13 [orig:243 v$13 ] [243])
        (const_int -4732044268327596948 [0xbe5466cf34e90c6c])) blake_ref.c:161 89 {*movdi_internal}
     (nil))
(insn 12 11 823 8 (set (reg:DI 6 bp [orig:227 v$12 ] [227])
        (const_int 4983270260364809079 [0x452821e638d01377])) blake_ref.c:160 89 {*movdi_internal}
     (nil))
(jump_insn 823 12 824 8 (set (pc)
        (label_ref 121)) -1
     (nil)
 -> 121)
;;  succ:       4 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 38 [r9] 40 [r11] 41 [r12] 42 [r13]

(barrier 824 823 433)
(note 433 824 0 NOTE_INSN_DELETED)

;; Function Update32.part.0 (Update32.part.0, funcdef_no=22, decl_uid=5562, cgraph_uid=0, symbol_order=31)

Splitting with gen_split_5740
scanning new insn with uid = 320.
deleting insn with uid = 283.
deleting insn with uid = 283.


Update32.part.0

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={16d,23u} r1={9d,16u} r2={9d,9u} r3={4d,18u,2e} r4={7d,9u} r5={11d,18u,6e} r6={7d,11u} r7={25d,59u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={3e} r17={45d,14u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={3d} r26={3d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={13d,15u,3e} r38={9d,6u} r39={4d,2u,1e} r40={5d,2u,1e} r41={6d,8u,1e} r42={4d,5u} r43={4d,4u} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 558{322d,219u,17e} in 140{137 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 8 1 253 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 253 8 254 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 254 253 255 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 255 254 256 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 256 255 257 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 257 256 258 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 258 257 259 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 4 si)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si)
        (nil)))
(insn/f 259 258 260 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:289 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 260 259 261 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:289 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (nil))))
(insn 261 260 262 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:289 679 {prologue_use}
     (nil))
(note 262 261 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 262 3 2 (set (reg/v/f:DI 3 bx [orig:124 state ] [124])
        (reg:DI 2 cx [ state ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 4 si [orig:125 data ] [125])
        (reg:DI 1 dx [ data ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 6 bp [orig:126 databitlen ] [126])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 235 2 NOTE_INSN_DELETED)
(insn 235 10 11 2 (set (reg/v:SI 41 r12 [orig:88 left ] [88])
        (mem:SI (plus:DI (reg/f:DI 2 cx [orig:124 state ] [124])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])) blake_ref.c:298 90 {*movsi_internal}
     (nil))
(insn 11 235 12 2 (parallel [
            (set (reg/v:SI 41 r12 [orig:88 left ] [88])
                (ashiftrt:SI (reg/v:SI 41 r12 [orig:88 left ] [88])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:298 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (ashiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                        (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
                (const_int 3 [0x3]))
            (nil))))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 41 r12 [orig:88 left ] [88])
            (const_int 0 [0]))) blake_ref.c:302 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) blake_ref.c:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 50)
;;  succ:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 0 [ax] 5 [di] 17 [flags] 42 [r13]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 42 [r13]
;; live  kill	 17 [flags]
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 5 di [128])
        (const_int 64 [0x40])) blake_ref.c:299 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 64 [0x40])
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (reg/v:SI 5 di [orig:89 fill ] [89])
                (minus:SI (reg:SI 5 di [128])
                    (reg/v:SI 41 r12 [orig:88 left ] [88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:299 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 64 [0x40])
                (reg/v:SI 41 r12 [orig:88 left ] [88]))
            (nil))))
(insn 17 16 237 3 (set (reg:DI 42 r13 [orig:91 D.5880 ] [91])
        (sign_extend:DI (reg/v:SI 5 di [orig:89 fill ] [89]))) blake_ref.c:302 142 {*extendsidi2_rex64}
     (nil))
(insn 237 17 18 3 (set (reg:DI 0 ax [orig:129 D.5880 ] [129])
        (reg:DI 37 r8 [orig:126 databitlen ] [126])) blake_ref.c:302 89 {*movdi_internal}
     (nil))
(insn 18 237 19 3 (parallel [
            (set (reg:DI 0 ax [orig:129 D.5880 ] [129])
                (lshiftrt:DI (reg:DI 0 ax [orig:129 D.5880 ] [129])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:302 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:129 D.5880 ] [129])
            (reg:DI 42 r13 [orig:91 D.5880 ] [91]))) blake_ref.c:302 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:129 D.5880 ] [129])
        (nil)))
(jump_insn 20 19 50 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 305)
            (pc))) blake_ref.c:302 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 305)
;;  succ:       23 [29.0%]  (CAN_FALLTHRU)
;;              4 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;;              3 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              25 [100.0%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 50 20 51 4 15 "" [2 uses])
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 6 bp [orig:126 databitlen ] [126])
            (const_int 511 [0x1ff]))) blake_ref.c:318 8 {*cmpdi_1}
     (nil))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 188)
            (pc))) blake_ref.c:318 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 188)
;;  succ:       5 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              26 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]

;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	 17 [flags]
(note 54 53 249 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 249 54 56 5 (set (reg:DI 5 di [orig:140 D.5880 ] [140])
        (plus:DI (reg/v:DI 6 bp [orig:126 databitlen ] [126])
            (const_int -512 [0xfffffffffffffe00]))) 214 {*leadi}
     (nil))
(insn 56 249 57 5 (parallel [
            (set (reg:DI 5 di [orig:141 D.5880 ] [141])
                (lshiftrt:DI (reg:DI 5 di [orig:140 D.5880 ] [140])
                    (const_int 9 [0x9])))
            (clobber (reg:CC 17 flags))
        ]) 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 57 56 58 5 (parallel [
            (set (reg:DI 5 di [orig:142 D.5882 ] [142])
                (plus:DI (reg:DI 5 di [orig:141 D.5880 ] [141])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 5 (parallel [
            (set (reg:DI 5 di [orig:143 D.5882 ] [143])
                (ashift:DI (reg:DI 5 di [orig:142 D.5882 ] [142])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 58 74 5 (parallel [
            (set (reg/v/f:DI 5 di [orig:122 data ] [122])
                (plus:DI (reg:DI 5 di [orig:143 D.5882 ] [143])
                    (reg/v/f:DI 4 si [orig:125 data ] [125])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 6, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 74 59 60 6 19 "" [1 uses])
(note 60 74 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 61 60 285 6 NOTE_INSN_DELETED)
(insn 285 61 65 6 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                        (const_int 512 [0x200]))
                    (const_int 0 [0])))
            (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                        (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                            (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                    (const_int 512 [0x200])))
        ]) blake_ref.c:323 225 {*addsi_2}
     (nil))
(jump_insn 65 285 66 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) blake_ref.c:323 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 68)
;;  succ:       7 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 7, loop depth 0, count 0, freq 4550, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	 17 [flags]
(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 7 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                            (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:324 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [50.0%]  (CAN_FALLTHRU)
;;              7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 68 67 69 8 18 "" [1 uses])
(note 69 68 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 4 si [orig:125 data ] [125])) blake_ref.c:325 89 {*movdi_internal}
     (nil))
(insn 71 70 72 8 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:124 state ] [124])) blake_ref.c:325 89 {*movdi_internal}
     (nil))
(call_insn 72 71 73 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>) [0 compress32 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:325 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 73 72 75 8 (parallel [
            (set (reg/v/f:DI 4 si [orig:125 data ] [125])
                (plus:DI (reg/v/f:DI 4 si [orig:125 data ] [125])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:326 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 75 73 76 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 4 si [orig:125 data ] [125])
            (reg/v/f:DI 5 di [orig:122 data ] [122]))) blake_ref.c:318 8 {*cmpdi_1}
     (nil))
(jump_insn 76 75 77 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) blake_ref.c:318 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 74)
;;  succ:       6 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              9 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 9, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 6 [bp]
;; live  kill	 17 [flags]
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (parallel [
            (set (reg/v:DI 6 bp [orig:126 databitlen ] [126])
                (and:DI (reg/v:DI 6 bp [orig:126 databitlen ] [126])
                    (const_int 511 [0x1ff])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              26 [100.0%]  (CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 79 78 80 10 17 "" [1 uses])
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 6 bp [orig:126 databitlen ] [126])
            (const_int 0 [0]))) blake_ref.c:330 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 82 81 175 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 306)
            (pc))) blake_ref.c:330 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 306)
;;  succ:       13 [29.0%]  (CAN_FALLTHRU)
;;              11 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 11, loop depth 0, count 0, freq 639, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       10 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 175 82 176 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 11 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:339 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:124 state ] [124])
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 769, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       17 [50.0%]  (CAN_FALLTHRU)
;;              11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 0 [ax] 17 [flags]
(code_label 177 176 178 12 27 "" [1 uses])
(note 178 177 182 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 182 178 183 12 (clobber (reg:SI 0 ax [orig:123 <retval> ] [123])) blake_ref.c:343 -1
     (nil))
(insn 183 182 263 12 (use (reg/i:SI 0 ax)) blake_ref.c:343 -1
     (expr_list:REG_DEAD (reg/i:SI 0 ax)
        (nil)))
(note 263 183 264 12 NOTE_INSN_EPILOGUE_BEG)
(insn 264 263 265 12 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:343 677 {blockage}
     (nil))
(insn/f 265 264 266 12 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:343 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (nil))))
(insn/f 266 265 267 12 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 267 266 268 12 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
            (nil))))
(insn/f 268 267 269 12 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(insn/f 269 268 270 12 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(insn/f 270 269 271 12 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
            (nil))))
(insn/f 271 270 272 12 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
            (nil))))
(insn/f 272 271 273 12 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
            (nil))))
(jump_insn 273 272 274 12 (simple_return) blake_ref.c:343 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 274 273 306)
;; basic block 13, loop depth 0, count 0, freq 261, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [29.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 306 274 83 13 41 "" [1 uses])
(note 83 306 241 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 241 83 84 13 (set (reg:DI 1 dx [orig:107 D.5880 ] [107])
        (reg/v:DI 6 bp [orig:126 databitlen ] [126])) blake_ref.c:332 89 {*movdi_internal}
     (nil))
(insn 84 241 85 13 (parallel [
            (set (reg:DI 1 dx [orig:107 D.5880 ] [107])
                (lshiftrt:DI (reg:DI 1 dx [orig:107 D.5880 ] [107])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:332 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 13 (set (reg:DI 2 cx [orig:109 D.5882 ] [109])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:88 left ] [88]))) blake_ref.c:331 142 {*extendsidi2_rex64}
     (nil))
(note 86 85 87 13 NOTE_INSN_DELETED)
(insn 87 86 91 13 (set (reg:DI 0 ax [orig:146 D.5883 ] [146])
        (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                (reg:DI 2 cx [orig:109 D.5882 ] [109]))
            (const_int 56 [0x38]))) blake_ref.c:331 214 {*leadi}
     (nil))
(insn 91 87 92 13 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:107 D.5880 ] [107])
            (const_int 8 [0x8]))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 92 91 189 13 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 127)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 127)
;;  succ:       19 [50.0%]  (CAN_FALLTHRU)
;;              14 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 14, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 189 92 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(note 93 189 248 14 NOTE_INSN_DELETED)
(insn 248 93 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:107 D.5880 ] [107])
                (const_int 4 [0x4]))
            (const_int 0 [0]))) blake_ref.c:331 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 95 248 191 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 307)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 307)
;;  succ:       15 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              27 [10.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 15, loop depth 0, count 0, freq 118, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 191 95 109 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 109 191 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:107 D.5880 ] [107])
            (const_int 0 [0]))) blake_ref.c:331 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 110 109 192 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 159)
;;  succ:       17 [50.0%]  (CAN_FALLTHRU)
;;              16 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 16, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags] 37 [r8]
;; live  kill	
(note 192 110 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 111 192 112 16 (set (reg:QI 37 r8 [159])
        (mem:QI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S1 A8])) blake_ref.c:331 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S1 A8])
        (nil)))
(insn 112 111 113 16 (set (mem:QI (reg:DI 0 ax [orig:146 D.5883 ] [146]) [0  S1 A8])
        (reg:QI 37 r8 [159])) blake_ref.c:331 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [159])
        (nil)))
(note 113 112 247 16 NOTE_INSN_DELETED)
(insn 247 113 115 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:107 D.5880 ] [107])
                (const_int 2 [0x2]))
            (const_int 0 [0]))) blake_ref.c:331 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 115 247 159 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 308)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 308)
;;  succ:       17 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              28 [10.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 17, loop depth 0, count 0, freq 178, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              15 [50.0%]  (CAN_FALLTHRU)
;;              22 [100.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;;              19 [20.0%]  (CAN_FALLTHRU)
;;              27 [100.0%]  (CAN_FALLTHRU)
;;              28 [100.0%]  (CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags]
;; live  kill	
(code_label 159 115 200 17 22 "" [5 uses])
(note 200 159 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(note 160 200 161 17 NOTE_INSN_DELETED)
(insn 161 160 162 17 (set (reg:SI 0 ax [183])
        (plus:SI (mult:SI (reg/v:SI 41 r12 [orig:88 left ] [88])
                (const_int 8 [0x8]))
            (reg:SI 6 bp [orig:126 databitlen ] [126]))) blake_ref.c:333 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:88 left ] [88])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                    (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
            (nil))))
(insn 162 161 163 17 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (reg:SI 0 ax [183])) blake_ref.c:333 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [183])
        (nil)))
(note 163 162 320 17 NOTE_INSN_DELETED)
(insn 320 163 165 17 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 6 bp [orig:126 databitlen ] [126])
                        (const_int 7 [0x7]))
                    (const_int 0 [0])))
            (set (reg:SI 6 bp [orig:126 databitlen ] [126])
                (and:SI (reg:SI 6 bp [orig:126 databitlen ] [126])
                    (const_int 7 [0x7])))
        ]) blake_ref.c:335 392 {*andsi_2}
     (nil))
(jump_insn 165 320 166 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 177)
            (pc))) blake_ref.c:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 177)
;;  succ:       18 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              12 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]

;; basic block 18, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       17 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(note 166 165 167 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 18 (set (reg:QI 0 ax [orig:119 D.5887 ] [119])
        (mem:QI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                (reg:DI 1 dx [orig:107 D.5880 ] [107])) [0 *_40+0 S1 A8])) blake_ref.c:336 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:122 data ] [122])
        (nil)))
(insn 168 167 169 18 (parallel [
            (set (reg:DI 1 dx [185])
                (plus:DI (reg:DI 1 dx [orig:107 D.5880 ] [107])
                    (reg/v/f:DI 3 bx [orig:124 state ] [124])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:336 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:124 state ] [124])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 169 168 171 18 NOTE_INSN_DELETED)
(insn 171 169 289 18 (set (mem/j:QI (plus:DI (plus:DI (reg:DI 2 cx [orig:109 D.5882 ] [109])
                    (reg:DI 1 dx [185]))
                (const_int 56 [0x38])) [0 state_1(D)->data32 S1 A8])
        (reg:QI 0 ax [orig:119 D.5887 ] [119])) blake_ref.c:336 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:109 D.5882 ] [109])
        (expr_list:REG_DEAD (reg:DI 1 dx [185])
            (expr_list:REG_DEAD (reg:QI 0 ax [orig:119 D.5887 ] [119])
                (nil)))))
(insn 289 171 290 18 (clobber (reg:SI 0 ax [orig:123 <retval> ] [123])) blake_ref.c:343 -1
     (nil))
(insn 290 289 291 18 (use (reg/i:SI 0 ax)) blake_ref.c:343 -1
     (expr_list:REG_DEAD (reg/i:SI 0 ax)
        (nil)))
(note 291 290 292 18 NOTE_INSN_EPILOGUE_BEG)
(insn 292 291 293 18 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:343 677 {blockage}
     (nil))
(insn/f 293 292 294 18 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:343 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn/f 294 293 295 18 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 295 294 296 18 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 296 295 297 18 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 297 296 298 18 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 298 297 299 18 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 299 298 300 18 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 300 299 301 18 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:343 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(jump_insn 301 300 304 18 (simple_return) blake_ref.c:343 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 304 301 127)
;; basic block 19, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  kill	 17 [flags]
(code_label 127 304 195 19 21 "" [1 uses])
(note 195 127 128 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 128 195 129 19 (set (reg:DI 37 r8 [168])
        (mem:DI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S8 A8])
        (nil)))
(insn 129 128 130 19 (set (mem:DI (reg:DI 0 ax [orig:146 D.5883 ] [146]) [0  S8 A8])
        (reg:DI 37 r8 [168])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [168])
        (nil)))
(insn 130 129 131 19 (set (reg:DI 37 r8 [orig:169 D.5880 ] [169])
        (zero_extend:DI (reg:SI 1 dx [orig:107 D.5880 ] [107]))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(note 131 130 132 19 NOTE_INSN_DELETED)
(note 132 131 134 19 NOTE_INSN_DELETED)
(note 134 132 135 19 NOTE_INSN_DELETED)
(note 135 134 136 19 NOTE_INSN_DELETED)
(insn 136 135 137 19 (set (reg:DI 38 r9 [175])
        (mem:DI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:169 D.5880 ] [169]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:169 D.5880 ] [169]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
        (nil)))
(insn 137 136 246 19 (set (mem:DI (plus:DI (plus:DI (reg:DI 0 ax [orig:146 D.5883 ] [146])
                    (reg:DI 37 r8 [orig:169 D.5880 ] [169]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
        (reg:DI 38 r9 [175])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [175])
        (expr_list:REG_DEAD (reg:DI 37 r8 [orig:169 D.5880 ] [169])
            (nil))))
(insn 246 137 139 19 (set (reg/f:DI 37 r8 [176])
        (plus:DI (reg:DI 0 ax [orig:146 D.5883 ] [146])
            (const_int 8 [0x8]))) blake_ref.c:331 214 {*leadi}
     (nil))
(insn 139 246 140 19 (parallel [
            (set (reg/f:DI 37 r8 [176])
                (and:DI (reg/f:DI 37 r8 [176])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 140 139 243 19 (parallel [
            (set (reg/f:DI 0 ax [orig:148 D.5883 ] [148])
                (minus:DI (reg:DI 0 ax [orig:146 D.5883 ] [146])
                    (reg/f:DI 37 r8 [176])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 243 140 141 19 (set (reg/f:DI 40 r11 [orig:149 data ] [149])
        (reg/v/f:DI 5 di [orig:122 data ] [122])) blake_ref.c:331 89 {*movdi_internal}
     (nil))
(insn 141 243 142 19 (parallel [
            (set (reg/f:DI 40 r11 [orig:149 data ] [149])
                (minus:DI (reg/f:DI 40 r11 [orig:149 data ] [149])
                    (reg/f:DI 0 ax [orig:148 D.5883 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 142 141 143 19 (parallel [
            (set (reg:SI 0 ax [orig:147 D.5880 ] [147])
                (plus:SI (reg:SI 0 ax [orig:148 D.5883 ] [148])
                    (reg:SI 1 dx [orig:107 D.5880 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 143 142 144 19 (parallel [
            (set (reg:SI 0 ax [orig:147 D.5880 ] [147])
                (and:SI (reg:SI 0 ax [orig:147 D.5880 ] [147])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 144 143 145 19 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:147 D.5880 ] [147])
            (const_int 8 [0x8]))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 145 144 196 19 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 159)
;;  succ:       17 [20.0%]  (CAN_FALLTHRU)
;;              20 [80.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 40 [r11] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 40 [r11] 41 [r12]

;; basic block 20, loop depth 0, count 0, freq 105, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [80.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 40 [r11] 41 [r12]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 40 [r11] 41 [r12]
;; live  gen 	 0 [ax] 38 [r9]
;; live  kill	 17 [flags]
(note 196 145 146 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 146 196 284 20 (parallel [
            (set (reg:SI 0 ax [178])
                (and:SI (reg:SI 0 ax [orig:147 D.5880 ] [147])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 284 146 148 20 (parallel [
            (set (reg:DI 38 r9 [177])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 83 {*movdi_xor}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]

;; basic block 21, loop depth 0, count 0, freq 105, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 [80.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]
;; lr  use 	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 40 [r11]
;; lr  def 	 4 [si] 17 [flags] 38 [r9] 39 [r10]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]
;; live  gen 	 4 [si] 17 [flags] 38 [r9] 39 [r10]
;; live  kill	 17 [flags]
(code_label 148 284 197 21 25 "" [1 uses])
(note 197 148 149 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 149 197 150 21 (set (reg:DI 39 r10 [179])
        (zero_extend:DI (reg:SI 38 r9 [177]))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(insn 150 149 151 21 (set (reg:DI 4 si [180])
        (mem:DI (plus:DI (reg/f:DI 40 r11 [orig:149 data ] [149])
                (reg:DI 39 r10 [179])) [0  S8 A8])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/f:DI 40 r11 [orig:149 data ] [149])
                (reg:DI 39 r10 [179])) [0  S8 A8])
        (nil)))
(insn 151 150 152 21 (set (mem:DI (plus:DI (reg/f:DI 37 r8 [176])
                (reg:DI 39 r10 [179])) [0  S8 A64])
        (reg:DI 4 si [180])) blake_ref.c:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 39 r10 [179])
        (expr_list:REG_DEAD (reg:DI 4 si [180])
            (nil))))
(insn 152 151 153 21 (parallel [
            (set (reg:SI 38 r9 [177])
                (plus:SI (reg:SI 38 r9 [177])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:331 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 153 152 154 21 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 38 r9 [177])
            (reg:SI 0 ax [178]))) blake_ref.c:331 7 {*cmpsi_1}
     (nil))
(jump_insn 154 153 309 21 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) blake_ref.c:331 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 8000 (nil)))
 -> 148)
;;  succ:       21 [80.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              22 [20.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 40 [r11] 41 [r12]

;; basic block 22, loop depth 0, count 0, freq 21, maybe hot
;;  prev block 21, next block 23, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       21 [20.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	
;; lr  use 	
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
(note 309 154 310 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 310 309 311 22 (set (pc)
        (label_ref 159)) -1
     (nil)
 -> 159)
;;  succ:       17 [100.0%]  (CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	
;; live  out 	

(barrier 311 310 305)
;; basic block 23, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [29.0%]  (CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 43 [r14]
;; live  kill	 17 [flags]
(code_label 305 311 21 23 40 "" [1 uses])
(note 21 305 251 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 251 21 23 23 (set (reg/f:DI 43 r14 [orig:92 D.5881 ] [92])
        (plus:DI (reg/f:DI 2 cx [orig:124 state ] [124])
            (const_int 56 [0x38]))) blake_ref.c:303 214 {*leadi}
     (nil))
(insn 23 251 24 23 (set (reg:DI 2 cx [orig:130 D.5882 ] [130])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:88 left ] [88]))) blake_ref.c:303 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:88 left ] [88])
        (nil)))
(insn 24 23 28 23 (parallel [
            (set (reg:DI 2 cx [orig:131 D.5883 ] [131])
                (plus:DI (reg:DI 2 cx [orig:130 D.5882 ] [130])
                    (reg/f:DI 43 r14 [orig:92 D.5881 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:303 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 24 31 23 (set (reg:DI 37 r8)
        (reg:DI 42 r13 [orig:91 D.5880 ] [91])) blake_ref.c:303 89 {*movdi_internal}
     (nil))
(call_insn 31 28 34 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>) [0 memcpy S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:303 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 2 cx))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 37 r8))
                    (nil))))))
(note 34 31 287 23 NOTE_INSN_DELETED)
(insn 287 34 38 23 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                                (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                        (const_int 512 [0x200]))
                    (const_int 0 [0])))
            (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                        (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                            (const_int 48 [0x30])) [2 state_1(D)->t32+0 S4 A64])
                    (const_int 512 [0x200])))
        ]) blake_ref.c:307 225 {*addsi_2}
     (nil))
(jump_insn 38 287 39 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) blake_ref.c:307 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 41)
;;  succ:       24 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              25 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 24, loop depth 0, count 0, freq 65, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       23 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	 17 [flags]
(note 39 38 40 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 24 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                        (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:124 state ] [124])
                            (const_int 52 [0x34])) [2 state_1(D)->t32+4 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:308 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 25, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [50.0%]  (CAN_FALLTHRU)
;;              24 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 6 [bp] 41 [r12]
;; live  kill	 17 [flags]
(code_label 41 40 42 25 16 "" [1 uses])
(note 42 41 43 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 25 (set (reg:DI 1 dx)
        (reg/f:DI 43 r14 [orig:92 D.5881 ] [92])) blake_ref.c:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:92 D.5881 ] [92])
        (nil)))
(insn 44 43 45 25 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:124 state ] [124])) blake_ref.c:310 89 {*movdi_internal}
     (nil))
(call_insn 45 44 46 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>) [0 compress32 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:310 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress32") [flags 0x3]  <function_decl 0x6ffffd816c8 compress32>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 46 45 250 25 (parallel [
            (set (reg/v/f:DI 4 si [orig:125 data ] [125])
                (plus:DI (reg/v/f:DI 4 si [orig:125 data ] [125])
                    (reg:DI 42 r13 [orig:91 D.5880 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:311 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:91 D.5880 ] [91])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 250 46 48 25 (set (reg:SI 0 ax [orig:138 D.5879 ] [138])
        (mult:SI (reg/v:SI 5 di [orig:89 fill ] [89])
            (const_int 8 [0x8]))) blake_ref.c:312 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:89 fill ] [89])
        (nil)))
(insn 48 250 49 25 (set (reg:DI 0 ax [orig:139 D.5880 ] [139])
        (sign_extend:DI (reg:SI 0 ax [orig:138 D.5879 ] [138]))) blake_ref.c:312 142 {*extendsidi2_rex64}
     (nil))
(insn 49 48 286 25 (parallel [
            (set (reg/v:DI 6 bp [orig:126 databitlen ] [126])
                (minus:DI (reg/v:DI 6 bp [orig:126 databitlen ] [126])
                    (reg:DI 0 ax [orig:139 D.5880 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:312 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:139 D.5880 ] [139])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 286 49 312 25 (parallel [
            (set (reg:DI 41 r12 [orig:88 left ] [88])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:314 83 {*movdi_xor}
     (nil))
(jump_insn 312 286 313 25 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
;;  succ:       4 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]

(barrier 313 312 188)
;; basic block 26, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 188 313 187 26 28 "" [1 uses])
(note 187 188 7 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 7 187 314 26 (set (reg/v/f:DI 5 di [orig:122 data ] [122])
        (reg/v/f:DI 4 si [orig:125 data ] [125])) blake_ref.c:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:125 data ] [125])
        (nil)))
(jump_insn 314 7 315 26 (set (pc)
        (label_ref 79)) -1
     (nil)
 -> 79)
;;  succ:       10 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

(barrier 315 314 307)
;; basic block 27, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [10.0%]  (CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 37 [r8] 38 [r9]
;; live  kill	
(code_label 307 315 190 27 42 "" [1 uses])
(note 190 307 96 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 96 190 97 27 (set (reg:SI 37 r8 [151])
        (mem:SI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S4 A8])) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 5 di [orig:122 data ] [122]) [0  S4 A8])
        (nil)))
(insn 97 96 98 27 (set (mem:SI (reg:DI 0 ax [orig:146 D.5883 ] [146]) [0  S4 A8])
        (reg:SI 37 r8 [151])) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [151])
        (nil)))
(insn 98 97 99 27 (set (reg:DI 37 r8 [orig:152 D.5880 ] [152])
        (zero_extend:DI (reg:SI 1 dx [orig:107 D.5880 ] [107]))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(note 99 98 100 27 NOTE_INSN_DELETED)
(note 100 99 102 27 NOTE_INSN_DELETED)
(note 102 100 103 27 NOTE_INSN_DELETED)
(note 103 102 104 27 NOTE_INSN_DELETED)
(insn 104 103 105 27 (set (reg:SI 38 r9 [158])
        (mem:SI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:152 D.5880 ] [152]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:152 D.5880 ] [152]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])
        (nil)))
(insn 105 104 316 27 (set (mem:SI (plus:DI (plus:DI (reg:DI 0 ax [orig:146 D.5883 ] [146])
                    (reg:DI 37 r8 [orig:152 D.5880 ] [152]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])
        (reg:SI 38 r9 [158])) blake_ref.c:331 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [158])
        (expr_list:REG_DEAD (reg:DI 37 r8 [orig:152 D.5880 ] [152])
            (expr_list:REG_DEAD (reg:DI 0 ax [orig:146 D.5883 ] [146])
                (nil)))))
(jump_insn 316 105 317 27 (set (pc)
        (label_ref 159)) -1
     (nil)
 -> 159)
;;  succ:       17 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

(barrier 317 316 308)
;; basic block 28, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 27, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [10.0%]  (CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 37 [r8] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 37 [r8] 38 [r9]
;; live  kill	
(code_label 308 317 193 28 43 "" [1 uses])
(note 193 308 116 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 116 193 118 28 (set (reg:DI 37 r8 [orig:162 D.5880 ] [162])
        (zero_extend:DI (reg:SI 1 dx [orig:107 D.5880 ] [107]))) blake_ref.c:331 133 {*zero_extendsidi2}
     (nil))
(note 118 116 121 28 NOTE_INSN_DELETED)
(note 121 118 122 28 NOTE_INSN_DELETED)
(insn 122 121 123 28 (set (reg:HI 38 r9 [167])
        (mem:HI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:162 D.5880 ] [162]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) blake_ref.c:331 92 {*movhi_internal}
     (expr_list:REG_EQUIV (mem:HI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:122 data ] [122])
                    (reg:DI 37 r8 [orig:162 D.5880 ] [162]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (nil)))
(insn 123 122 318 28 (set (mem:HI (plus:DI (plus:DI (reg:DI 0 ax [orig:146 D.5883 ] [146])
                    (reg:DI 37 r8 [orig:162 D.5880 ] [162]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 38 r9 [167])) blake_ref.c:331 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 38 r9 [167])
        (expr_list:REG_DEAD (reg:DI 37 r8 [orig:162 D.5880 ] [162])
            (expr_list:REG_DEAD (reg:DI 0 ax [orig:146 D.5883 ] [146])
                (nil)))))
(jump_insn 318 123 319 28 (set (pc)
        (label_ref 159)) -1
     (nil)
 -> 159)
;;  succ:       17 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

(barrier 319 318 234)
(note 234 319 0 NOTE_INSN_DELETED)

;; Function Update64.part.1 (Update64.part.1, funcdef_no=23, decl_uid=5571, cgraph_uid=1, symbol_order=32)

Splitting with gen_split_5740
scanning new insn with uid = 281.
deleting insn with uid = 248.
deleting insn with uid = 248.


Update64.part.1

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={15d,21u} r1={9d,16u} r2={16d,19u,3e} r3={6d,8u} r4={7d,8u} r5={7d,8u} r6={4d,12u,2e} r7={25d,52u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={3e} r17={38d,10u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d} r26={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={6d,5u} r38={7d,3u} r39={3d} r40={3d} r41={11d,18u,6e} r42={7d,11u} r43={6d,8u,1e} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 524{310d,199u,15e} in 128{125 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 42 [r13] 43 [r14]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(note 8 1 218 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 218 8 219 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 219 218 220 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 220 219 221 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 221 220 222 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 222 221 223 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 223 222 224 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 4 si)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si)
        (nil)))
(insn/f 224 223 225 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:345 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 225 224 226 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:345 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -32 [0xffffffffffffffe0])))
            (nil))))
(insn 226 225 227 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:345 679 {prologue_use}
     (nil))
(note 227 226 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 227 3 2 (set (reg/v/f:DI 6 bp [orig:120 state ] [120])
        (reg:DI 2 cx [ state ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 3 bx [orig:121 data ] [121])
        (reg:DI 1 dx [ data ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ data ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 data+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
        (reg:DI 37 r8 [ databitlen ])) blake_ref.c:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ databitlen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 16 [0x10])) [3 databitlen+0 S8 A64])
            (nil))))
(note 5 4 10 2 NOTE_INSN_FUNCTION_BEG)
(note 10 5 201 2 NOTE_INSN_DELETED)
(insn 201 10 11 2 (set (reg/v:SI 43 r14 [orig:88 left ] [88])
        (mem:SI (plus:DI (reg/f:DI 2 cx [orig:120 state ] [120])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])) blake_ref.c:354 90 {*movsi_internal}
     (nil))
(insn 11 201 12 2 (parallel [
            (set (reg/v:SI 43 r14 [orig:88 left ] [88])
                (ashiftrt:SI (reg/v:SI 43 r14 [orig:88 left ] [88])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:354 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (ashiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                        (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
                (const_int 3 [0x3]))
            (nil))))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 43 r14 [orig:88 left ] [88])
            (const_int 0 [0]))) blake_ref.c:358 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) blake_ref.c:358 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 42)
;;  succ:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 37 [r8] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 37 [r8] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 37 [r8] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 37 [r8] 43 [r14]
;; lr  def 	 0 [ax] 4 [si] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 37 [r8] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 4 [si] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:SI 41 r12 [124])
        (const_int 128 [0x80])) blake_ref.c:355 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (reg/v:SI 41 r12 [orig:89 fill ] [89])
                (minus:SI (reg:SI 41 r12 [124])
                    (reg/v:SI 43 r14 [orig:88 left ] [88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:355 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 128 [0x80])
                (reg/v:SI 43 r14 [orig:88 left ] [88]))
            (nil))))
(insn 17 16 203 3 (set (reg:DI 4 si [orig:91 D.5911 ] [91])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:89 fill ] [89]))) blake_ref.c:358 142 {*extendsidi2_rex64}
     (nil))
(insn 203 17 18 3 (set (reg:DI 0 ax [orig:125 D.5911 ] [125])
        (reg:DI 37 r8 [orig:122 databitlen ] [122])) blake_ref.c:358 89 {*movdi_internal}
     (nil))
(insn 18 203 19 3 (parallel [
            (set (reg:DI 0 ax [orig:125 D.5911 ] [125])
                (lshiftrt:DI (reg:DI 0 ax [orig:125 D.5911 ] [125])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:358 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:125 D.5911 ] [125])
            (reg:DI 4 si [orig:91 D.5911 ] [91]))) blake_ref.c:358 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:125 D.5911 ] [125])
        (nil)))
(jump_insn 20 19 42 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 267)
            (pc))) blake_ref.c:358 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 267)
;;  succ:       18 [29.0%]  (CAN_FALLTHRU)
;;              4 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;;              3 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 [100.0%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 42 20 43 4 45 "" [2 uses])
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
            (const_int 1023 [0x3ff]))) blake_ref.c:372 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 4 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 160)
            (pc))) blake_ref.c:372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 160)
;;  succ:       5 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 [9.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [91.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 41 [r12]
;; live  kill	 17 [flags]
(note 46 45 213 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 213 46 48 5 (set (reg:DI 41 r12 [orig:135 D.5911 ] [135])
        (plus:DI (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
            (const_int -1024 [0xfffffffffffffc00]))) 214 {*leadi}
     (nil))
(insn 48 213 49 5 (parallel [
            (set (reg:DI 41 r12 [orig:136 D.5911 ] [136])
                (lshiftrt:DI (reg:DI 41 r12 [orig:135 D.5911 ] [135])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 41 r12 [orig:137 D.5913 ] [137])
                (plus:DI (reg:DI 41 r12 [orig:136 D.5911 ] [136])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 5 (parallel [
            (set (reg:DI 41 r12 [orig:138 D.5913 ] [138])
                (ashift:DI (reg:DI 41 r12 [orig:137 D.5913 ] [137])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 58 5 (parallel [
            (set (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                (plus:DI (reg:DI 41 r12 [orig:138 D.5913 ] [138])
                    (reg/v/f:DI 3 bx [orig:121 data ] [121])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 6, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 58 51 52 6 47 "" [1 uses])
(note 52 58 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                            (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:375 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 54 53 55 6 (set (reg:DI 1 dx)
        (reg/v/f:DI 3 bx [orig:121 data ] [121])) blake_ref.c:376 89 {*movdi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 6 bp [orig:120 state ] [120])) blake_ref.c:376 89 {*movdi_internal}
     (nil))
(call_insn 56 55 57 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:376 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 57 56 59 6 (parallel [
            (set (reg/v/f:DI 3 bx [orig:121 data ] [121])
                (plus:DI (reg/v/f:DI 3 bx [orig:121 data ] [121])
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:377 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 57 60 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:121 data ] [121])
            (reg/v/f:DI 41 r12 [orig:117 data ] [117]))) blake_ref.c:372 8 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) blake_ref.c:372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 58)
;;  succ:       6 [91.0%]  (DFS_BACK,CAN_FALLTHRU)
;;              7 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU,CAN_FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags] 42 [r13]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 42 [r13]
;; live  kill	 17 [flags]
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (parallel [
            (set (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
                (and:DI (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
                    (const_int 1023 [0x3ff])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 8, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 63 62 64 8 46 "" [1 uses])
(note 64 63 65 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
            (const_int 0 [0]))) blake_ref.c:381 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 66 65 147 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) blake_ref.c:381 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 268)
;;  succ:       11 [29.0%]  (CAN_FALLTHRU)
;;              9 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 9, loop depth 0, count 0, freq 639, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       8 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 147 66 148 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 9 (set (mem:SI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:391 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:120 state ] [120])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 769, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (CAN_FALLTHRU)
;;              9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 0 [ax] 17 [flags]
(code_label 149 148 150 10 53 "" [1 uses])
(note 150 149 154 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 154 150 155 10 (clobber (reg:SI 0 ax [orig:119 <retval> ] [119])) blake_ref.c:394 -1
     (nil))
(insn 155 154 228 10 (use (reg/i:SI 0 ax)) blake_ref.c:394 -1
     (expr_list:REG_DEAD (reg/i:SI 0 ax)
        (nil)))
(note 228 155 229 10 NOTE_INSN_EPILOGUE_BEG)
(insn 229 228 230 10 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:394 677 {blockage}
     (nil))
(insn/f 230 229 231 10 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:394 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (nil))))
(insn/f 231 230 232 10 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 232 231 233 10 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
            (nil))))
(insn/f 233 232 234 10 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(insn/f 234 233 235 10 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(insn/f 235 234 236 10 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
            (nil))))
(insn/f 236 235 237 10 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
            (nil))))
(insn/f 237 236 238 10 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
            (nil))))
(jump_insn 238 237 239 10 (simple_return) blake_ref.c:394 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 239 238 268)
;; basic block 11, loop depth 0, count 0, freq 261, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [29.0%]  (CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(code_label 268 239 67 11 66 "" [1 uses])
(note 67 268 205 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 205 67 68 11 (set (reg:DI 1 dx [orig:103 D.5911 ] [103])
        (reg/v:DI 42 r13 [orig:122 databitlen ] [122])) blake_ref.c:383 89 {*movdi_internal}
     (nil))
(insn 68 205 69 11 (parallel [
            (set (reg:DI 1 dx [orig:103 D.5911 ] [103])
                (lshiftrt:DI (reg:DI 1 dx [orig:103 D.5911 ] [103])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:383 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 69 68 70 11 (set (reg:DI 37 r8 [orig:106 D.5913 ] [106])
        (sign_extend:DI (reg/v:SI 43 r14 [orig:88 left ] [88]))) blake_ref.c:382 142 {*extendsidi2_rex64}
     (nil))
(note 70 69 71 11 NOTE_INSN_DELETED)
(insn 71 70 75 11 (set (reg:DI 0 ax [orig:140 D.5914 ] [140])
        (plus:DI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                (reg:DI 37 r8 [orig:106 D.5913 ] [106]))
            (const_int 216 [0xd8]))) blake_ref.c:382 214 {*leadi}
     (nil))
(insn 75 71 76 11 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 1 dx [orig:103 D.5911 ] [103])
            (const_int 8 [0x8]))) blake_ref.c:382 7 {*cmpsi_1}
     (nil))
(jump_insn 76 75 161 11 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 111)
;;  succ:       17 [50.0%]  (CAN_FALLTHRU)
;;              12 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 12, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 161 76 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 77 161 212 12 NOTE_INSN_DELETED)
(insn 212 77 79 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:103 D.5911 ] [103])
                (const_int 4 [0x4]))
            (const_int 0 [0]))) blake_ref.c:382 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 79 212 163 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 269)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 269)
;;  succ:       13 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              20 [10.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 13, loop depth 0, count 0, freq 118, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 163 79 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 93 163 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:103 D.5911 ] [103])
            (const_int 0 [0]))) blake_ref.c:382 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 94 93 164 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 131)
;;  succ:       15 [50.0%]  (CAN_FALLTHRU)
;;              14 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 14, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 17 [flags]
;; live  kill	
(note 164 94 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 95 164 96 14 (set (reg:QI 2 cx [153])
        (mem:QI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S1 A8])) blake_ref.c:382 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S1 A8])
        (nil)))
(insn 96 95 97 14 (set (mem:QI (reg:DI 0 ax [orig:140 D.5914 ] [140]) [0  S1 A8])
        (reg:QI 2 cx [153])) blake_ref.c:382 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [153])
        (nil)))
(note 97 96 211 14 NOTE_INSN_DELETED)
(insn 211 97 99 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:103 D.5911 ] [103])
                (const_int 2 [0x2]))
            (const_int 0 [0]))) blake_ref.c:382 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 99 211 131 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 270)
            (pc))) blake_ref.c:382 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 270)
;;  succ:       15 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 [10.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 15, loop depth 0, count 0, freq 262, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [90.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              13 [50.0%]  (CAN_FALLTHRU)
;;              17 [100.0%]  (CAN_FALLTHRU)
;;              20 [100.0%]  (CAN_FALLTHRU)
;;              21 [100.0%]  (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 42 [r13]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 17 [flags] 42 [r13]
;; live  kill	
(code_label 131 99 168 15 50 "" [4 uses])
(note 168 131 132 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(note 132 168 133 15 NOTE_INSN_DELETED)
(insn 133 132 134 15 (set (reg:SI 0 ax [174])
        (plus:SI (mult:SI (reg/v:SI 43 r14 [orig:88 left ] [88])
                (const_int 8 [0x8]))
            (reg:SI 42 r13 [orig:122 databitlen ] [122]))) blake_ref.c:384 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:88 left ] [88])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                    (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
            (nil))))
(insn 134 133 135 15 (set (mem:SI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                (const_int 4 [0x4])) [2 state_1(D)->datalen+0 S4 A32])
        (reg:SI 0 ax [174])) blake_ref.c:384 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [174])
        (nil)))
(note 135 134 281 15 NOTE_INSN_DELETED)
(insn 281 135 137 15 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 42 r13 [orig:122 databitlen ] [122])
                        (const_int 7 [0x7]))
                    (const_int 0 [0])))
            (set (reg:SI 42 r13 [orig:122 databitlen ] [122])
                (and:SI (reg:SI 42 r13 [orig:122 databitlen ] [122])
                    (const_int 7 [0x7])))
        ]) blake_ref.c:387 392 {*andsi_2}
     (nil))
(jump_insn 137 281 138 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) blake_ref.c:387 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 149)
;;  succ:       16 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12]

;; basic block 16, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(note 138 137 139 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 16 (set (reg:QI 0 ax [orig:116 D.5917 ] [116])
        (mem:QI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                (reg:DI 1 dx [orig:103 D.5911 ] [103])) [0 *_37+0 S1 A8])) blake_ref.c:388 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:117 data ] [117])
        (nil)))
(insn 140 139 141 16 (parallel [
            (set (reg:DI 1 dx [176])
                (plus:DI (reg:DI 1 dx [orig:103 D.5911 ] [103])
                    (reg/v/f:DI 6 bp [orig:120 state ] [120])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:388 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:120 state ] [120])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 141 140 143 16 NOTE_INSN_DELETED)
(insn 143 141 251 16 (set (mem/j:QI (plus:DI (plus:DI (reg:DI 37 r8 [orig:106 D.5913 ] [106])
                    (reg:DI 1 dx [176]))
                (const_int 216 [0xd8])) [0 state_1(D)->data64 S1 A8])
        (reg:QI 0 ax [orig:116 D.5917 ] [116])) blake_ref.c:388 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:106 D.5913 ] [106])
        (expr_list:REG_DEAD (reg:DI 1 dx [176])
            (expr_list:REG_DEAD (reg:QI 0 ax [orig:116 D.5917 ] [116])
                (nil)))))
(insn 251 143 252 16 (clobber (reg:SI 0 ax [orig:119 <retval> ] [119])) blake_ref.c:394 -1
     (nil))
(insn 252 251 253 16 (use (reg/i:SI 0 ax)) blake_ref.c:394 -1
     (expr_list:REG_DEAD (reg/i:SI 0 ax)
        (nil)))
(note 253 252 254 16 NOTE_INSN_EPILOGUE_BEG)
(insn 254 253 255 16 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:394 677 {blockage}
     (nil))
(insn/f 255 254 256 16 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:394 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn/f 256 255 257 16 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 257 256 258 16 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 258 257 259 16 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 259 258 260 16 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 260 259 261 16 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 261 260 262 16 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 42 r13)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 262 261 263 16 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:394 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 43 r14)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(jump_insn 263 262 266 16 (simple_return) blake_ref.c:394 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 266 263 111)
;; basic block 17, loop depth 0, count 0, freq 131, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [50.0%]  (CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 38 [r9]
;; live  kill	 17 [flags]
(code_label 111 266 167 17 49 "" [1 uses])
(note 167 111 112 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 112 167 113 17 (set (reg:DI 2 cx [162])
        (mem:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S8 A8])) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S8 A8])
        (nil)))
(insn 113 112 114 17 (set (mem:DI (reg:DI 0 ax [orig:140 D.5914 ] [140]) [0  S8 A8])
        (reg:DI 2 cx [162])) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [162])
        (nil)))
(insn 114 113 115 17 (set (reg:DI 2 cx [orig:163 D.5911 ] [163])
        (zero_extend:DI (reg:SI 1 dx [orig:103 D.5911 ] [103]))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(note 115 114 116 17 NOTE_INSN_DELETED)
(note 116 115 118 17 NOTE_INSN_DELETED)
(note 118 116 119 17 NOTE_INSN_DELETED)
(note 119 118 120 17 NOTE_INSN_DELETED)
(insn 120 119 121 17 (set (reg:DI 38 r9 [169])
        (mem:DI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:163 D.5911 ] [163]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:163 D.5911 ] [163]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
        (nil)))
(insn 121 120 210 17 (set (mem:DI (plus:DI (plus:DI (reg:DI 0 ax [orig:140 D.5914 ] [140])
                    (reg:DI 2 cx [orig:163 D.5911 ] [163]))
                (const_int -8 [0xfffffffffffffff8])) [0  S8 A8])
        (reg:DI 38 r9 [169])) blake_ref.c:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [169])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:163 D.5911 ] [163])
            (nil))))
(insn 210 121 123 17 (set (reg/f:DI 5 di [170])
        (plus:DI (reg:DI 0 ax [orig:140 D.5914 ] [140])
            (const_int 8 [0x8]))) blake_ref.c:382 214 {*leadi}
     (nil))
(insn 123 210 124 17 (parallel [
            (set (reg/f:DI 5 di [170])
                (and:DI (reg/f:DI 5 di [170])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 124 123 207 17 (parallel [
            (set (reg/f:DI 0 ax [orig:142 D.5914 ] [142])
                (minus:DI (reg:DI 0 ax [orig:140 D.5914 ] [140])
                    (reg/f:DI 5 di [170])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 207 124 125 17 (set (reg/f:DI 4 si [orig:143 data ] [143])
        (reg/v/f:DI 41 r12 [orig:117 data ] [117])) blake_ref.c:382 89 {*movdi_internal}
     (nil))
(insn 125 207 126 17 (parallel [
            (set (reg/f:DI 4 si [orig:143 data ] [143])
                (minus:DI (reg/f:DI 4 si [orig:143 data ] [143])
                    (reg/f:DI 0 ax [orig:142 D.5914 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 126 125 127 17 (parallel [
            (set (reg:SI 0 ax [orig:141 D.5911 ] [141])
                (plus:SI (reg:SI 0 ax [orig:142 D.5914 ] [142])
                    (reg:SI 1 dx [orig:103 D.5911 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 127 126 128 17 NOTE_INSN_DELETED)
(insn 128 127 129 17 (parallel [
            (set (reg:SI 0 ax [171])
                (lshiftrt:SI (reg:SI 0 ax [orig:141 D.5911 ] [141])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:382 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 129 128 130 17 (set (reg:DI 2 cx [172])
        (zero_extend:DI (reg:SI 0 ax [171]))) blake_ref.c:382 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 0 ax [171])
        (nil)))
(insn 130 129 271 17 (parallel [
            (set (reg:DI 2 cx [172])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [170])
                (plus:DI (ashift:DI (reg:DI 2 cx [172])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [170])))
            (set (reg/f:DI 4 si [orig:143 data ] [143])
                (plus:DI (ashift:DI (reg:DI 2 cx [172])
                        (const_int 3 [0x3]))
                    (reg/f:DI 4 si [orig:143 data ] [143])))
            (set (mem:BLK (reg/f:DI 5 di [170]) [0  A64])
                (mem:BLK (reg/f:DI 4 si [orig:143 data ] [143]) [0  A8]))
            (use (reg:DI 2 cx [172]))
        ]) blake_ref.c:382 919 {*rep_movdi_rex64}
     (expr_list:REG_UNUSED (reg/f:DI 5 di [170])
        (expr_list:REG_UNUSED (reg/f:DI 4 si [orig:143 data ] [143])
            (expr_list:REG_UNUSED (reg:DI 2 cx [172])
                (nil)))))
(jump_insn 271 130 272 17 (set (pc)
        (label_ref 131)) -1
     (nil)
 -> 131)
;;  succ:       15 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 272 271 267)
;; basic block 18, loop depth 0, count 0, freq 130, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [29.0%]  (CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 42 [r13] 43 [r14] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 37 [r8] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(code_label 267 272 21 18 65 "" [1 uses])
(note 21 267 214 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 214 21 23 18 (set (reg/f:DI 5 di [orig:92 D.5912 ] [92])
        (plus:DI (reg/f:DI 2 cx [orig:120 state ] [120])
            (const_int 216 [0xd8]))) blake_ref.c:359 214 {*leadi}
     (nil))
(insn 23 214 24 18 (set (reg:DI 2 cx [orig:126 D.5913 ] [126])
        (sign_extend:DI (reg/v:SI 43 r14 [orig:88 left ] [88]))) blake_ref.c:359 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:88 left ] [88])
        (nil)))
(insn 24 23 28 18 (parallel [
            (set (reg:DI 2 cx [orig:127 D.5914 ] [127])
                (plus:DI (reg:DI 2 cx [orig:126 D.5913 ] [126])
                    (reg/f:DI 5 di [orig:92 D.5912 ] [92])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:359 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 24 31 18 (set (reg:DI 37 r8)
        (reg:DI 4 si [orig:91 D.5911 ] [91])) blake_ref.c:359 89 {*movdi_internal}
     (nil))
(call_insn 31 28 34 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>) [0 memcpy S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:359 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x43]  <function_decl 0x6ffff8a3cc0 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 2 cx))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 37 r8))
                    (nil))))))
(insn 34 31 35 18 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                        (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 6 bp [orig:120 state ] [120])
                            (const_int 200 [0xc8])) [3 state_1(D)->t64+0 S8 A64])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 18 (set (reg:DI 1 dx)
        (reg/f:DI 5 di [orig:92 D.5912 ] [92])) blake_ref.c:364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:92 D.5912 ] [92])
        (nil)))
(insn 36 35 37 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 6 bp [orig:120 state ] [120])) blake_ref.c:364 89 {*movdi_internal}
     (nil))
(call_insn 37 36 38 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 38 37 215 18 (parallel [
            (set (reg/v/f:DI 3 bx [orig:121 data ] [121])
                (plus:DI (reg/v/f:DI 3 bx [orig:121 data ] [121])
                    (reg:DI 4 si [orig:91 D.5911 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:365 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:91 D.5911 ] [91])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 38 40 18 (set (reg:SI 0 ax [orig:133 D.5910 ] [133])
        (mult:SI (reg/v:SI 41 r12 [orig:89 fill ] [89])
            (const_int 8 [0x8]))) blake_ref.c:366 213 {*leasi}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:89 fill ] [89])
        (nil)))
(insn 40 215 41 18 (set (reg:DI 0 ax [orig:134 D.5911 ] [134])
        (sign_extend:DI (reg:SI 0 ax [orig:133 D.5910 ] [133]))) blake_ref.c:366 142 {*extendsidi2_rex64}
     (nil))
(insn 41 40 249 18 (parallel [
            (set (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
                (minus:DI (reg/v:DI 42 r13 [orig:122 databitlen ] [122])
                    (reg:DI 0 ax [orig:134 D.5911 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:366 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:134 D.5911 ] [134])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 41 273 18 (parallel [
            (set (reg:DI 43 r14 [orig:88 left ] [88])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:368 83 {*movdi_xor}
     (nil))
(jump_insn 273 249 274 18 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
;;  succ:       4 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]

(barrier 274 273 160)
;; basic block 19, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [9.0%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; live  gen 	 41 [r12]
;; live  kill	
(code_label 160 274 159 19 54 "" [1 uses])
(note 159 160 7 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 7 159 275 19 (set (reg/v/f:DI 41 r12 [orig:117 data ] [117])
        (reg/v/f:DI 3 bx [orig:121 data ] [121])) blake_ref.c:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:121 data ] [121])
        (nil)))
(jump_insn 275 7 276 19 (set (pc)
        (label_ref 63)) -1
     (nil)
 -> 63)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 276 275 269)
;; basic block 20, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [10.0%]  (CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 38 [r9]
;; live  kill	
(code_label 269 276 162 20 67 "" [1 uses])
(note 162 269 80 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 80 162 81 20 (set (reg:SI 2 cx [145])
        (mem:SI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S4 A8])) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 41 r12 [orig:117 data ] [117]) [0  S4 A8])
        (nil)))
(insn 81 80 82 20 (set (mem:SI (reg:DI 0 ax [orig:140 D.5914 ] [140]) [0  S4 A8])
        (reg:SI 2 cx [145])) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [145])
        (nil)))
(insn 82 81 83 20 (set (reg:DI 2 cx [orig:146 D.5911 ] [146])
        (zero_extend:DI (reg:SI 1 dx [orig:103 D.5911 ] [103]))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(note 83 82 84 20 NOTE_INSN_DELETED)
(note 84 83 86 20 NOTE_INSN_DELETED)
(note 86 84 87 20 NOTE_INSN_DELETED)
(note 87 86 88 20 NOTE_INSN_DELETED)
(insn 88 87 89 20 (set (reg:SI 38 r9 [152])
        (mem:SI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:146 D.5911 ] [146]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:146 D.5911 ] [146]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])
        (nil)))
(insn 89 88 277 20 (set (mem:SI (plus:DI (plus:DI (reg:DI 0 ax [orig:140 D.5914 ] [140])
                    (reg:DI 2 cx [orig:146 D.5911 ] [146]))
                (const_int -4 [0xfffffffffffffffc])) [0  S4 A8])
        (reg:SI 38 r9 [152])) blake_ref.c:382 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [152])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:146 D.5911 ] [146])
            (expr_list:REG_DEAD (reg:DI 0 ax [orig:140 D.5914 ] [140])
                (nil)))))
(jump_insn 277 89 278 20 (set (pc)
        (label_ref 131)) -1
     (nil)
 -> 131)
;;  succ:       15 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 278 277 270)
;; basic block 21, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [10.0%]  (CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 2 [cx] 38 [r9]
;; live  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 38 [r9]
;; live  kill	
(code_label 270 278 165 21 68 "" [1 uses])
(note 165 270 100 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 100 165 102 21 (set (reg:DI 2 cx [orig:156 D.5911 ] [156])
        (zero_extend:DI (reg:SI 1 dx [orig:103 D.5911 ] [103]))) blake_ref.c:382 133 {*zero_extendsidi2}
     (nil))
(note 102 100 105 21 NOTE_INSN_DELETED)
(note 105 102 106 21 NOTE_INSN_DELETED)
(insn 106 105 107 21 (set (reg:HI 38 r9 [161])
        (mem:HI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:156 D.5911 ] [156]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])) blake_ref.c:382 92 {*movhi_internal}
     (expr_list:REG_EQUIV (mem:HI (plus:DI (plus:DI (reg/v/f:DI 41 r12 [orig:117 data ] [117])
                    (reg:DI 2 cx [orig:156 D.5911 ] [156]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (nil)))
(insn 107 106 279 21 (set (mem:HI (plus:DI (plus:DI (reg:DI 0 ax [orig:140 D.5914 ] [140])
                    (reg:DI 2 cx [orig:156 D.5911 ] [156]))
                (const_int -2 [0xfffffffffffffffe])) [0  S2 A8])
        (reg:HI 38 r9 [161])) blake_ref.c:382 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 38 r9 [161])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:156 D.5911 ] [156])
            (expr_list:REG_DEAD (reg:DI 0 ax [orig:140 D.5914 ] [140])
                (nil)))))
(jump_insn 279 107 280 21 (set (pc)
        (label_ref 131)) -1
     (nil)
 -> 131)
;;  succ:       15 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 1 [dx] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 280 279 200)
(note 200 280 0 NOTE_INSN_DELETED)

;; Function GetHashStateSize (GetHashStateSize, funcdef_no=10, decl_uid=3156, cgraph_uid=10, symbol_order=18)



GetHashStateSize

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 7[sp]
;;  ref usage 	r0={1d,2u} r1={1d} r2={1d} r7={1d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} 
;;    total ref usage 15{10d,5u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 13 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 13 3 14 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:5 679 {prologue_use}
     (nil))
(note 14 13 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 376 [0x178])) blake_ref.c:7 90 {*movsi_internal}
     (nil))
(insn 10 9 16 2 (use (reg/i:SI 0 ax)) blake_ref.c:7 -1
     (nil))
(jump_insn 16 10 15 2 (simple_return) blake_ref.c:7 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 12)
(note 12 15 0 NOTE_INSN_DELETED)

;; Function Init (Init, funcdef_no=13, decl_uid=3182, cgraph_uid=13, symbol_order=21)



Init

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 5 [di] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8]
;;  ref usage 	r0={10d,10u} r1={1d,5u} r2={33d,33u} r5={8d,10u} r7={3d,16u} r16={1e} r17={13d,4u} r21={2d,1u} r22={1d} r23={1d} r24={1d} r37={2d,45u} r38={1d} 
;;    total ref usage 201{76d,124u,1e} in 104{104 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags] 37 [r8]
;; live  kill	
(note 7 1 182 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 182 7 183 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:203 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn 183 182 184 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:203 679 {prologue_use}
     (nil))
(note 184 183 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 184 4 2 (set (reg/v/f:DI 37 r8 [orig:100 state ] [100])
        (reg:DI 2 cx [ state ])) blake_ref.c:203 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(note 4 2 181 2 NOTE_INSN_FUNCTION_BEG)
(insn 181 4 11 2 (set (reg:SI 0 ax [orig:102 D.5934 ] [102])
        (plus:SI (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])
            (const_int -224 [0xffffffffffffff20]))) blake_ref.c:207 213 {*leasi}
     (nil))
(note 11 181 200 2 NOTE_INSN_DELETED)
(insn 200 11 13 2 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 0 ax [orig:102 D.5934 ] [102])
                        (const_int -33 [0xffffffffffffffdf]))
                    (const_int 0 [0])))
            (set (reg:SI 0 ax [orig:102 D.5934 ] [102])
                (and:SI (reg:SI 0 ax [orig:102 D.5934 ] [102])
                    (const_int -33 [0xffffffffffffffdf])))
        ]) blake_ref.c:207 392 {*andsi_2}
     (nil))
(jump_insn 13 200 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) blake_ref.c:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 67)
;;  succ:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 3, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])
            (const_int 224 [0xe0]))) blake_ref.c:210 7 {*cmpsi_1}
     (nil))
(jump_insn 16 15 31 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 201)
            (pc))) blake_ref.c:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 201)
;;  succ:       12 [28.0%]  (CAN_FALLTHRU)
;;              4 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 4, loop depth 0, count 0, freq 111, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 2 [cx]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 2 [cx]
;; live  kill	
(note 31 16 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 31 35 4 (set (reg:DI 2 cx [orig:112 MEM[(void *)&IV256] ] [112])
        (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(void *)&IV256]+0 S8 A256])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(void *)&IV256]+0 S8 A256])
        (nil)))
(insn 35 34 36 4 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+0 S8 A8])
        (reg:DI 2 cx [orig:112 MEM[(void *)&IV256] ] [112])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:112 MEM[(void *)&IV256] ] [112])
        (nil)))
(insn 36 35 37 4 (set (reg:DI 2 cx [orig:113 MEM[(void *)&IV256]+8 ] [113])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV256]+8 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV256]+8 S8 A64])
        (nil)))
(insn 37 36 38 4 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 16B]+8 S8 A8])
        (reg:DI 2 cx [orig:113 MEM[(void *)&IV256]+8 ] [113])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:113 MEM[(void *)&IV256]+8 ] [113])
        (nil)))
(insn 38 37 39 4 (set (reg:DI 2 cx [orig:114 MEM[(void *)&IV256]+16 ] [114])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV256]+16 S8 A128])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV256]+16 S8 A128])
        (nil)))
(insn 39 38 40 4 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 32 [0x20])) [0 MEM[(void *)state_18(D) + 16B]+16 S8 A8])
        (reg:DI 2 cx [orig:114 MEM[(void *)&IV256]+16 ] [114])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:114 MEM[(void *)&IV256]+16 ] [114])
        (nil)))
(insn 40 39 41 4 (set (reg:DI 2 cx [orig:115 MEM[(void *)&IV256]+24 ] [115])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV256]+24 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV256]+24 S8 A64])
        (nil)))
(insn 41 40 42 4 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 40 [0x28])) [0 MEM[(void *)state_18(D) + 16B]+24 S8 A8])
        (reg:DI 2 cx [orig:115 MEM[(void *)&IV256]+24 ] [115])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:115 MEM[(void *)&IV256]+24 ] [115])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 5, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              12 [100.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 2 [cx] 5 [di] 17 [flags] 21 [xmm0]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 2 [cx] 5 [di] 21 [xmm0]
;; live  kill	 17 [flags]
(code_label 42 41 43 5 73 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (mem:SI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 48 [0x30])) [2 state_18(D)->t32+0 S4 A64])
        (const_int 0 [0])) blake_ref.c:215 90 {*movsi_internal}
     (nil))
(insn 45 44 46 5 (set (mem:SI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 52 [0x34])) [2 state_18(D)->t32+4 S4 A32])
        (const_int 0 [0])) blake_ref.c:216 90 {*movsi_internal}
     (nil))
(note 46 45 50 5 NOTE_INSN_DELETED)
(insn 50 46 53 5 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 56 [0x38])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(note 53 50 54 5 NOTE_INSN_DELETED)
(insn 54 53 178 5 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 112 [0x70])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 178 54 56 5 (set (reg/f:DI 5 di [123])
        (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
            (const_int 64 [0x40]))) 214 {*leadi}
     (nil))
(insn 56 178 170 5 (parallel [
            (set (reg/f:DI 5 di [123])
                (and:DI (reg/f:DI 5 di [123])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 170 56 57 5 (set (reg/f:SI 0 ax [orig:117 D.5936 ] [117])
        (reg:SI 37 r8 [orig:100 state ] [100])) 90 {*movsi_internal}
     (nil))
(insn 57 170 58 5 (parallel [
            (set (reg/f:SI 0 ax [orig:117 D.5936 ] [117])
                (minus:SI (reg/f:SI 0 ax [orig:117 D.5936 ] [117])
                    (reg:SI 5 di [123])))
            (clobber (reg:CC 17 flags))
        ]) 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 58 57 59 5 (set (reg:SI 2 cx [118])
        (plus:SI (reg/f:SI 0 ax [orig:117 D.5936 ] [117])
            (const_int 120 [0x78]))) 213 {*leasi}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:117 D.5936 ] [117])
        (nil)))
(note 59 58 60 5 NOTE_INSN_DELETED)
(insn 60 59 199 5 (parallel [
            (set (reg:DI 2 cx)
                (zero_extend:DI (lshiftrt:SI (reg:SI 2 cx [118])
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrsi3_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 199 60 62 5 (parallel [
            (set (reg:DI 0 ax [119])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) 83 {*movdi_xor}
     (nil))
(insn 62 199 63 5 (parallel [
            (set (reg:DI 2 cx [125])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [123])
                (plus:DI (ashift:DI (reg:DI 2 cx [125])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [123])))
            (set (mem:BLK (reg/f:DI 5 di [123]) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [119]))
            (use (reg:DI 2 cx [125]))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [119])
        (expr_list:REG_UNUSED (reg/f:DI 5 di [123])
            (expr_list:REG_UNUSED (reg:DI 2 cx [125])
                (nil)))))
(insn 63 62 64 5 (set (reg:V4SI 21 xmm0 [126])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) blake_ref.c:221 1194 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))
(insn 64 63 142 5 (set (mem:V16QI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 120 [0x78])) [2 MEM[(unsigned int *)state_18(D) + 120B]+0 S16 A32])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [126])
            ] UNSPEC_STOREU)) blake_ref.c:221 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [126])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 6, loop depth 0, count 0, freq 205, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              11 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 142 64 143 6 74 "" [1 uses])
(note 143 142 144 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 6 (set (mem:SI (reg/v/f:DI 37 r8 [orig:100 state ] [100]) [2 state_18(D)->hashbitlen+0 S4 A64])
        (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])) blake_ref.c:251 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])
        (nil)))
(insn 145 144 146 6 (set (mem:SI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 4 [0x4])) [2 state_18(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:252 90 {*movsi_internal}
     (nil))
(insn 146 145 147 6 (set (mem:SI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 8 [0x8])) [2 state_18(D)->init+0 S4 A64])
        (const_int 1 [0x1])) blake_ref.c:253 90 {*movsi_internal}
     (nil))
(insn 147 146 196 6 (set (mem:SI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 12 [0xc])) [2 state_18(D)->nullt+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:254 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 37 r8 [orig:100 state ] [100])
        (nil)))
(insn 196 147 148 6 (parallel [
            (set (reg:DI 0 ax [orig:88 D.5935 ] [88])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:256 83 {*movdi_xor}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       8 [67.0%]  (CAN_FALLTHRU)
;;              6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 5 [di] 7 [sp]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 5 [di] 7 [sp]
;; live  kill	
(code_label 148 196 149 7 75 "" [1 uses])
(note 149 148 155 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 155 149 185 7 (use (reg/i:SI 0 ax)) blake_ref.c:257 -1
     (nil))
(note 185 155 186 7 NOTE_INSN_EPILOGUE_BEG)
(insn 186 185 187 7 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:257 677 {blockage}
     (nil))
(insn/f 187 186 188 7 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:257 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(jump_insn 188 187 189 7 (simple_return) blake_ref.c:257 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

(barrier 189 188 67)
;; basic block 8, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(code_label 67 189 68 8 71 "" [1 uses])
(note 68 67 177 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 177 68 70 8 (set (reg:SI 2 cx [orig:127 D.5934 ] [127])
        (plus:SI (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])
            (const_int -384 [0xfffffffffffffe80]))) blake_ref.c:227 213 {*leasi}
     (nil))
(note 70 177 5 8 NOTE_INSN_DELETED)
(insn 5 70 198 8 (set (reg:SI 0 ax [orig:88 D.5935 ] [88])
        (const_int 2 [0x2])) blake_ref.c:249 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 198 5 72 8 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 2 cx [orig:127 D.5934 ] [127])
                        (const_int -129 [0xffffffffffffff7f]))
                    (const_int 0 [0])))
            (set (reg:SI 2 cx [orig:127 D.5934 ] [127])
                (and:SI (reg:SI 2 cx [orig:127 D.5934 ] [127])
                    (const_int -129 [0xffffffffffffff7f])))
        ]) blake_ref.c:227 392 {*andsi_2}
     (nil))
(jump_insn 72 198 73 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) blake_ref.c:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 148)
;;  succ:       9 [33.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              7 [67.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 37 [r8]

;; basic block 9, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [33.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:101 hashbitlen ] [101])
            (const_int 384 [0x180]))) blake_ref.c:230 7 {*cmpsi_1}
     (nil))
(jump_insn 75 74 98 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 202)
            (pc))) blake_ref.c:230 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 202)
;;  succ:       13 [28.0%]  (CAN_FALLTHRU)
;;              10 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 10, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       9 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 2 [cx]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 2 [cx]
;; live  kill	
(note 98 75 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 101 98 102 10 (set (reg:DI 2 cx [orig:141 MEM[(void *)&IV512] ] [141])
        (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(void *)&IV512]+0 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(void *)&IV512]+0 S8 A256])
        (nil)))
(insn 102 101 103 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 136 [0x88])) [0 MEM[(void *)state_18(D) + 136B]+0 S8 A8])
        (reg:DI 2 cx [orig:141 MEM[(void *)&IV512] ] [141])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:141 MEM[(void *)&IV512] ] [141])
        (nil)))
(insn 103 102 104 10 (set (reg:DI 2 cx [orig:142 MEM[(void *)&IV512]+8 ] [142])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV512]+8 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV512]+8 S8 A64])
        (nil)))
(insn 104 103 105 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 144 [0x90])) [0 MEM[(void *)state_18(D) + 136B]+8 S8 A8])
        (reg:DI 2 cx [orig:142 MEM[(void *)&IV512]+8 ] [142])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:142 MEM[(void *)&IV512]+8 ] [142])
        (nil)))
(insn 105 104 106 10 (set (reg:DI 2 cx [orig:143 MEM[(void *)&IV512]+16 ] [143])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV512]+16 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV512]+16 S8 A128])
        (nil)))
(insn 106 105 107 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 152 [0x98])) [0 MEM[(void *)state_18(D) + 136B]+16 S8 A8])
        (reg:DI 2 cx [orig:143 MEM[(void *)&IV512]+16 ] [143])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:143 MEM[(void *)&IV512]+16 ] [143])
        (nil)))
(insn 107 106 108 10 (set (reg:DI 2 cx [orig:144 MEM[(void *)&IV512]+24 ] [144])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV512]+24 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV512]+24 S8 A64])
        (nil)))
(insn 108 107 109 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 160 [0xa0])) [0 MEM[(void *)state_18(D) + 136B]+24 S8 A8])
        (reg:DI 2 cx [orig:144 MEM[(void *)&IV512]+24 ] [144])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:144 MEM[(void *)&IV512]+24 ] [144])
        (nil)))
(insn 109 108 110 10 (set (reg:DI 2 cx [orig:145 MEM[(void *)&IV512]+32 ] [145])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV512]+32 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV512]+32 S8 A256])
        (nil)))
(insn 110 109 111 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 168 [0xa8])) [0 MEM[(void *)state_18(D) + 136B]+32 S8 A8])
        (reg:DI 2 cx [orig:145 MEM[(void *)&IV512]+32 ] [145])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:145 MEM[(void *)&IV512]+32 ] [145])
        (nil)))
(insn 111 110 112 10 (set (reg:DI 2 cx [orig:146 MEM[(void *)&IV512]+40 ] [146])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV512]+40 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV512]+40 S8 A64])
        (nil)))
(insn 112 111 113 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 176 [0xb0])) [0 MEM[(void *)state_18(D) + 136B]+40 S8 A8])
        (reg:DI 2 cx [orig:146 MEM[(void *)&IV512]+40 ] [146])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:146 MEM[(void *)&IV512]+40 ] [146])
        (nil)))
(insn 113 112 114 10 (set (reg:DI 2 cx [orig:147 MEM[(void *)&IV512]+48 ] [147])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV512]+48 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV512]+48 S8 A128])
        (nil)))
(insn 114 113 115 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 184 [0xb8])) [0 MEM[(void *)state_18(D) + 136B]+48 S8 A8])
        (reg:DI 2 cx [orig:147 MEM[(void *)&IV512]+48 ] [147])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:147 MEM[(void *)&IV512]+48 ] [147])
        (nil)))
(insn 115 114 116 10 (set (reg:DI 2 cx [orig:148 MEM[(void *)&IV512]+56 ] [148])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV512]+56 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV512]+56 S8 A64])
        (nil)))
(insn 116 115 117 10 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 192 [0xc0])) [0 MEM[(void *)state_18(D) + 136B]+56 S8 A8])
        (reg:DI 2 cx [orig:148 MEM[(void *)&IV512]+56 ] [148])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:148 MEM[(void *)&IV512]+56 ] [148])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

;; basic block 11, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              13 [100.0%]  (CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 2 [cx] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 2 [cx] 5 [di]
;; live  kill	 17 [flags]
(code_label 117 116 118 11 77 "" [1 uses])
(note 118 117 119 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 200 [0xc8])) [3 state_18(D)->t64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:235 89 {*movdi_internal}
     (nil))
(insn 120 119 121 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 208 [0xd0])) [3 state_18(D)->t64+8 S8 A64])
        (const_int 0 [0])) blake_ref.c:236 89 {*movdi_internal}
     (nil))
(note 121 120 125 11 NOTE_INSN_DELETED)
(insn 125 121 128 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 216 [0xd8])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(note 128 125 129 11 NOTE_INSN_DELETED)
(insn 129 128 174 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 272 [0x110])) [0  S8 A8])
        (const_int 0 [0])) 89 {*movdi_internal}
     (nil))
(insn 174 129 131 11 (set (reg/f:DI 5 di [156])
        (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
            (const_int 224 [0xe0]))) 214 {*leadi}
     (nil))
(insn 131 174 172 11 (parallel [
            (set (reg/f:DI 5 di [156])
                (and:DI (reg/f:DI 5 di [156])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) 380 {*anddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 172 131 132 11 (set (reg/f:SI 0 ax [orig:150 D.5936 ] [150])
        (reg:SI 37 r8 [orig:100 state ] [100])) 90 {*movsi_internal}
     (nil))
(insn 132 172 133 11 (parallel [
            (set (reg/f:SI 0 ax [orig:150 D.5936 ] [150])
                (minus:SI (reg/f:SI 0 ax [orig:150 D.5936 ] [150])
                    (reg:SI 5 di [156])))
            (clobber (reg:CC 17 flags))
        ]) 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 133 132 134 11 (set (reg:SI 2 cx [151])
        (plus:SI (reg/f:SI 0 ax [orig:150 D.5936 ] [150])
            (const_int 280 [0x118]))) 213 {*leasi}
     (expr_list:REG_DEAD (reg/f:SI 0 ax [orig:150 D.5936 ] [150])
        (nil)))
(note 134 133 135 11 NOTE_INSN_DELETED)
(insn 135 134 197 11 (parallel [
            (set (reg:DI 2 cx)
                (zero_extend:DI (lshiftrt:SI (reg:SI 2 cx [151])
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 17 flags))
        ]) 550 {*lshrsi3_1_zext}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 197 135 137 11 (parallel [
            (set (reg:DI 0 ax [152])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) 83 {*movdi_xor}
     (nil))
(insn 137 197 138 11 (parallel [
            (set (reg:DI 2 cx [158])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [156])
                (plus:DI (ashift:DI (reg:DI 2 cx [158])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [156])))
            (set (mem:BLK (reg/f:DI 5 di [156]) [0  A64])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [152]))
            (use (reg:DI 2 cx [158]))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [152])
        (expr_list:REG_UNUSED (reg/f:DI 5 di [156])
            (expr_list:REG_UNUSED (reg:DI 2 cx [158])
                (nil)))))
(insn 138 137 139 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 344 [0x158])) [3 state_18(D)->salt64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:241 89 {*movdi_internal}
     (nil))
(insn 139 138 140 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 352 [0x160])) [3 state_18(D)->salt64+8 S8 A64])
        (const_int 0 [0])) blake_ref.c:242 89 {*movdi_internal}
     (nil))
(insn 140 139 141 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 360 [0x168])) [3 state_18(D)->salt64+16 S8 A64])
        (const_int 0 [0])) blake_ref.c:243 89 {*movdi_internal}
     (nil))
(insn 141 140 203 11 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 368 [0x170])) [3 state_18(D)->salt64+24 S8 A64])
        (const_int 0 [0])) blake_ref.c:244 89 {*movdi_internal}
     (nil))
(jump_insn 203 141 204 11 (set (pc)
        (label_ref 142)) -1
     (nil)
 -> 142)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

(barrier 204 203 201)
;; basic block 12, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [28.0%]  (CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 2 [cx]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 2 [cx]
;; live  kill	
(code_label 201 204 17 12 79 "" [1 uses])
(note 17 201 20 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 20 17 21 12 (set (reg:DI 2 cx [orig:106 MEM[(void *)&IV224] ] [106])
        (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(void *)&IV224]+0 S8 A256])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(void *)&IV224]+0 S8 A256])
        (nil)))
(insn 21 20 22 12 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 16 [0x10])) [0 MEM[(void *)state_18(D) + 16B]+0 S8 A8])
        (reg:DI 2 cx [orig:106 MEM[(void *)&IV224] ] [106])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:106 MEM[(void *)&IV224] ] [106])
        (nil)))
(insn 22 21 23 12 (set (reg:DI 2 cx [orig:107 MEM[(void *)&IV224]+8 ] [107])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV224]+8 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV224]+8 S8 A64])
        (nil)))
(insn 23 22 24 12 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 24 [0x18])) [0 MEM[(void *)state_18(D) + 16B]+8 S8 A8])
        (reg:DI 2 cx [orig:107 MEM[(void *)&IV224]+8 ] [107])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:107 MEM[(void *)&IV224]+8 ] [107])
        (nil)))
(insn 24 23 25 12 (set (reg:DI 2 cx [orig:108 MEM[(void *)&IV224]+16 ] [108])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV224]+16 S8 A128])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV224]+16 S8 A128])
        (nil)))
(insn 25 24 26 12 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 32 [0x20])) [0 MEM[(void *)state_18(D) + 16B]+16 S8 A8])
        (reg:DI 2 cx [orig:108 MEM[(void *)&IV224]+16 ] [108])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:108 MEM[(void *)&IV224]+16 ] [108])
        (nil)))
(insn 26 25 27 12 (set (reg:DI 2 cx [orig:109 MEM[(void *)&IV224]+24 ] [109])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV224]+24 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV224]+24 S8 A64])
        (nil)))
(insn 27 26 205 12 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 40 [0x28])) [0 MEM[(void *)state_18(D) + 16B]+24 S8 A8])
        (reg:DI 2 cx [orig:109 MEM[(void *)&IV224]+24 ] [109])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:109 MEM[(void *)&IV224]+24 ] [109])
        (nil)))
(jump_insn 205 27 206 12 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
;;  succ:       5 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

(barrier 206 205 202)
;; basic block 13, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 12, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [28.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 2 [cx]
;; live  in  	 1 [dx] 7 [sp] 37 [r8]
;; live  gen 	 2 [cx]
;; live  kill	
(code_label 202 206 76 13 80 "" [1 uses])
(note 76 202 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 76 80 13 (set (reg:DI 2 cx [orig:131 MEM[(void *)&IV384] ] [131])
        (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(void *)&IV384]+0 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(void *)&IV384]+0 S8 A256])
        (nil)))
(insn 80 79 81 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 136 [0x88])) [0 MEM[(void *)state_18(D) + 136B]+0 S8 A8])
        (reg:DI 2 cx [orig:131 MEM[(void *)&IV384] ] [131])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:131 MEM[(void *)&IV384] ] [131])
        (nil)))
(insn 81 80 82 13 (set (reg:DI 2 cx [orig:132 MEM[(void *)&IV384]+8 ] [132])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV384]+8 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(void *)&IV384]+8 S8 A64])
        (nil)))
(insn 82 81 83 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 144 [0x90])) [0 MEM[(void *)state_18(D) + 136B]+8 S8 A8])
        (reg:DI 2 cx [orig:132 MEM[(void *)&IV384]+8 ] [132])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:132 MEM[(void *)&IV384]+8 ] [132])
        (nil)))
(insn 83 82 84 13 (set (reg:DI 2 cx [orig:133 MEM[(void *)&IV384]+16 ] [133])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV384]+16 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(void *)&IV384]+16 S8 A128])
        (nil)))
(insn 84 83 85 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 152 [0x98])) [0 MEM[(void *)state_18(D) + 136B]+16 S8 A8])
        (reg:DI 2 cx [orig:133 MEM[(void *)&IV384]+16 ] [133])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:133 MEM[(void *)&IV384]+16 ] [133])
        (nil)))
(insn 85 84 86 13 (set (reg:DI 2 cx [orig:134 MEM[(void *)&IV384]+24 ] [134])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV384]+24 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(void *)&IV384]+24 S8 A64])
        (nil)))
(insn 86 85 87 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 160 [0xa0])) [0 MEM[(void *)state_18(D) + 136B]+24 S8 A8])
        (reg:DI 2 cx [orig:134 MEM[(void *)&IV384]+24 ] [134])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:134 MEM[(void *)&IV384]+24 ] [134])
        (nil)))
(insn 87 86 88 13 (set (reg:DI 2 cx [orig:135 MEM[(void *)&IV384]+32 ] [135])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV384]+32 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(void *)&IV384]+32 S8 A256])
        (nil)))
(insn 88 87 89 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 168 [0xa8])) [0 MEM[(void *)state_18(D) + 136B]+32 S8 A8])
        (reg:DI 2 cx [orig:135 MEM[(void *)&IV384]+32 ] [135])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:135 MEM[(void *)&IV384]+32 ] [135])
        (nil)))
(insn 89 88 90 13 (set (reg:DI 2 cx [orig:136 MEM[(void *)&IV384]+40 ] [136])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV384]+40 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(void *)&IV384]+40 S8 A64])
        (nil)))
(insn 90 89 91 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 176 [0xb0])) [0 MEM[(void *)state_18(D) + 136B]+40 S8 A8])
        (reg:DI 2 cx [orig:136 MEM[(void *)&IV384]+40 ] [136])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:136 MEM[(void *)&IV384]+40 ] [136])
        (nil)))
(insn 91 90 92 13 (set (reg:DI 2 cx [orig:137 MEM[(void *)&IV384]+48 ] [137])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV384]+48 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(void *)&IV384]+48 S8 A128])
        (nil)))
(insn 92 91 93 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 184 [0xb8])) [0 MEM[(void *)state_18(D) + 136B]+48 S8 A8])
        (reg:DI 2 cx [orig:137 MEM[(void *)&IV384]+48 ] [137])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:137 MEM[(void *)&IV384]+48 ] [137])
        (nil)))
(insn 93 92 94 13 (set (reg:DI 2 cx [orig:138 MEM[(void *)&IV384]+56 ] [138])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV384]+56 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(void *)&IV384]+56 S8 A64])
        (nil)))
(insn 94 93 207 13 (set (mem:DI (plus:DI (reg/v/f:DI 37 r8 [orig:100 state ] [100])
                (const_int 192 [0xc0])) [0 MEM[(void *)state_18(D) + 136B]+56 S8 A8])
        (reg:DI 2 cx [orig:138 MEM[(void *)&IV384]+56 ] [138])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:138 MEM[(void *)&IV384]+56 ] [138])
        (nil)))
(jump_insn 207 94 208 13 (set (pc)
        (label_ref 117)) -1
     (nil)
 -> 117)
;;  succ:       11 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 7 [sp] 37 [r8]

(barrier 208 207 169)
(note 169 208 0 NOTE_INSN_DELETED)

;; Function AddSalt (AddSalt, funcdef_no=14, decl_uid=3185, cgraph_uid=14, symbol_order=22)



AddSalt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags]
;;  ref usage 	r0={19d,20u} r1={1d,8u,12e} r2={1d,10u,8e} r7={1d,7u} r17={4d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r37={1d} r38={1d} 
;;    total ref usage 99{32d,47u,20e} in 38{38 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 8 1 60 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 60 8 61 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:261 679 {prologue_use}
     (nil))
(note 61 60 4 2 NOTE_INSN_PROLOGUE_END)
(note 4 61 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 4 10 2 (set (reg:SI 0 ax [orig:87 D.5941 ] [87])
        (const_int 1 [0x1])) blake_ref.c:269 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 10 5 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                    (const_int 8 [0x8])) [2 state_4(D)->init+0 S4 A64])
            (const_int 1 [0x1]))) blake_ref.c:268 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 45 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 74)
            (pc))) blake_ref.c:268 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3782 (nil)))
 -> 74)
;;  succ:       3 [62.2%]  (FALLTHRU,CAN_FALLTHRU)
;;              4 [37.8%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7693, maybe hot
;; Invalid sum of incoming frequencies 6218, should be 7693
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [62.2%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(note 45 11 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 51 45 65 3 (use (reg/i:SI 0 ax)) blake_ref.c:285 -1
     (nil))
(jump_insn 65 51 64 3 (simple_return) blake_ref.c:285 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 64 65 74)
;; basic block 4, loop depth 0, count 0, freq 3782, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [37.8%]  (CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 74 64 12 4 85 "" [1 uses])
(note 12 74 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 2 cx [orig:143 state ] [143]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:271 7 {*cmpsi_1}
     (nil))
(jump_insn 14 13 31 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) blake_ref.c:271 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 75)
;;  succ:       6 [39.0%]  (CAN_FALLTHRU)
;;              5 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 2307, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 31 14 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 0 ax [orig:149 MEM[(const BitSequence *)salt_7(D)] ] [149])
        (mem:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8])
        (nil)))
(insn 33 32 34 5 (set (reg:DI 0 ax [orig:94 D.5944 ] [94])
        (bswap:DI (reg:DI 0 ax [orig:149 MEM[(const BitSequence *)salt_7(D)] ] [149]))) 766 {*bswapdi2}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 344 [0x158])) [3 state_4(D)->salt64+0 S8 A64])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S8 A8]))
            (nil))))
(insn 34 33 35 5 (set (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 344 [0x158])) [3 state_4(D)->salt64+0 S8 A64])
        (reg:DI 0 ax [orig:94 D.5944 ] [94])) blake_ref.c:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:94 D.5944 ] [94])
        (nil)))
(insn 35 34 36 5 (set (reg:DI 0 ax [orig:150 MEM[(const BitSequence *)salt_7(D) + 8B] ] [150])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8])
        (nil)))
(insn 36 35 37 5 (set (reg:DI 0 ax [orig:95 D.5944 ] [95])
        (bswap:DI (reg:DI 0 ax [orig:150 MEM[(const BitSequence *)salt_7(D) + 8B] ] [150]))) 766 {*bswapdi2}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 352 [0x160])) [3 state_4(D)->salt64+8 S8 A64])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S8 A8]))
            (nil))))
(insn 37 36 38 5 (set (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 352 [0x160])) [3 state_4(D)->salt64+8 S8 A64])
        (reg:DI 0 ax [orig:95 D.5944 ] [95])) blake_ref.c:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:95 D.5944 ] [95])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 0 ax [orig:151 MEM[(const BitSequence *)salt_7(D) + 16B] ] [151])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8])
        (nil)))
(insn 39 38 40 5 (set (reg:DI 0 ax [orig:96 D.5944 ] [96])
        (bswap:DI (reg:DI 0 ax [orig:151 MEM[(const BitSequence *)salt_7(D) + 16B] ] [151]))) 766 {*bswapdi2}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 360 [0x168])) [3 state_4(D)->salt64+16 S8 A64])
        (expr_list:REG_EQUAL (bswap:DI (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                        (const_int 16 [0x10])) [0 MEM[(const BitSequence *)salt_7(D) + 16B]+0 S8 A8]))
            (nil))))
(insn 40 39 41 5 (set (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 360 [0x168])) [3 state_4(D)->salt64+16 S8 A64])
        (reg:DI 0 ax [orig:96 D.5944 ] [96])) blake_ref.c:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:96 D.5944 ] [96])
        (nil)))
(insn 41 40 42 5 (set (reg:DI 0 ax [orig:152 MEM[(const BitSequence *)salt_7(D) + 24B] ] [152])
        (mem:DI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 24 [0x18])) [0 MEM[(const BitSequence *)salt_7(D) + 24B]+0 S8 A8])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:144 salt ] [144])
        (nil)))
(insn 42 41 43 5 (set (reg:DI 0 ax [orig:97 D.5944 ] [97])
        (bswap:DI (reg:DI 0 ax [orig:152 MEM[(const BitSequence *)salt_7(D) + 24B] ] [152]))) 766 {*bswapdi2}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 368 [0x170])) [3 state_4(D)->salt64+24 S8 A64])
        (nil)))
(insn 43 42 66 5 (set (mem:DI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 368 [0x170])) [3 state_4(D)->salt64+24 S8 A64])
        (reg:DI 0 ax [orig:97 D.5944 ] [97])) blake_ref.c:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:143 state ] [143])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:97 D.5944 ] [97])
            (nil))))
(insn 66 43 69 5 (parallel [
            (set (reg:DI 0 ax [orig:87 D.5941 ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:284 83 {*movdi_xor}
     (nil))
(insn 69 66 70 5 (use (reg/i:SI 0 ax)) blake_ref.c:285 -1
     (nil))
(jump_insn 70 69 73 5 (simple_return) blake_ref.c:285 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 73 70 75)
;; basic block 6, loop depth 0, count 0, freq 1475, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [39.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 75 73 15 6 86 "" [1 uses])
(note 15 75 16 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 6 (set (reg:SI 0 ax [orig:145 MEM[(const BitSequence *)salt_7(D)] ] [145])
        (mem:SI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8])
        (nil)))
(insn 17 16 18 6 (set (reg:SI 0 ax [orig:90 D.5943 ] [90])
        (bswap:SI (reg:SI 0 ax [orig:145 MEM[(const BitSequence *)salt_7(D)] ] [145]))) 765 {*bswapsi2}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 120 [0x78])) [2 state_4(D)->salt32+0 S4 A64])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (reg/v/f:DI 1 dx [orig:144 salt ] [144]) [0 MEM[(const BitSequence *)salt_7(D)]+0 S4 A8]))
            (nil))))
(insn 18 17 19 6 (set (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 120 [0x78])) [2 state_4(D)->salt32+0 S4 A64])
        (reg:SI 0 ax [orig:90 D.5943 ] [90])) blake_ref.c:272 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:90 D.5943 ] [90])
        (nil)))
(insn 19 18 20 6 (set (reg:SI 0 ax [orig:146 MEM[(const BitSequence *)salt_7(D) + 4B] ] [146])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8])
        (nil)))
(insn 20 19 21 6 (set (reg:SI 0 ax [orig:91 D.5943 ] [91])
        (bswap:SI (reg:SI 0 ax [orig:146 MEM[(const BitSequence *)salt_7(D) + 4B] ] [146]))) 765 {*bswapsi2}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 124 [0x7c])) [2 state_4(D)->salt32+4 S4 A32])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                        (const_int 4 [0x4])) [0 MEM[(const BitSequence *)salt_7(D) + 4B]+0 S4 A8]))
            (nil))))
(insn 21 20 22 6 (set (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 124 [0x7c])) [2 state_4(D)->salt32+4 S4 A32])
        (reg:SI 0 ax [orig:91 D.5943 ] [91])) blake_ref.c:273 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:91 D.5943 ] [91])
        (nil)))
(insn 22 21 23 6 (set (reg:SI 0 ax [orig:147 MEM[(const BitSequence *)salt_7(D) + 8B] ] [147])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8])
        (nil)))
(insn 23 22 24 6 (set (reg:SI 0 ax [orig:92 D.5943 ] [92])
        (bswap:SI (reg:SI 0 ax [orig:147 MEM[(const BitSequence *)salt_7(D) + 8B] ] [147]))) 765 {*bswapsi2}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 128 [0x80])) [2 state_4(D)->salt32+8 S4 A64])
        (expr_list:REG_EQUAL (bswap:SI (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                        (const_int 8 [0x8])) [0 MEM[(const BitSequence *)salt_7(D) + 8B]+0 S4 A8]))
            (nil))))
(insn 24 23 25 6 (set (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 128 [0x80])) [2 state_4(D)->salt32+8 S4 A64])
        (reg:SI 0 ax [orig:92 D.5943 ] [92])) blake_ref.c:274 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:92 D.5943 ] [92])
        (nil)))
(insn 25 24 26 6 (set (reg:SI 0 ax [orig:148 MEM[(const BitSequence *)salt_7(D) + 12B] ] [148])
        (mem:SI (plus:DI (reg/v/f:DI 1 dx [orig:144 salt ] [144])
                (const_int 12 [0xc])) [0 MEM[(const BitSequence *)salt_7(D) + 12B]+0 S4 A8])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:144 salt ] [144])
        (nil)))
(insn 26 25 27 6 (set (reg:SI 0 ax [orig:93 D.5943 ] [93])
        (bswap:SI (reg:SI 0 ax [orig:148 MEM[(const BitSequence *)salt_7(D) + 12B] ] [148]))) 765 {*bswapsi2}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 132 [0x84])) [2 state_4(D)->salt32+12 S4 A32])
        (nil)))
(insn 27 26 67 6 (set (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:143 state ] [143])
                (const_int 132 [0x84])) [2 state_4(D)->salt32+12 S4 A32])
        (reg:SI 0 ax [orig:93 D.5943 ] [93])) blake_ref.c:275 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:143 state ] [143])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:93 D.5943 ] [93])
            (nil))))
(insn 67 27 62 6 (parallel [
            (set (reg:DI 0 ax [orig:87 D.5941 ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:284 83 {*movdi_xor}
     (nil))
(insn 62 67 63 6 (use (reg/i:SI 0 ax)) -1
     (nil))
(jump_insn 63 62 58 6 (simple_return) 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 58 63 59)
(note 59 58 0 NOTE_INSN_DELETED)

;; Function Update (Update, funcdef_no=17, decl_uid=3189, cgraph_uid=17, symbol_order=25)



Update

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={5d,4u} r1={3d,2u} r2={3d,5u} r7={5d,20u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={14d,5u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={2d} r26={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,4u} r38={3d} r39={2d} r40={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 188{148d,40u,0e} in 29{27 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 6 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 49 6 50 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:397 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (nil))))
(insn 50 49 51 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:397 679 {prologue_use}
     (nil))
(note 51 50 5 2 NOTE_INSN_PROLOGUE_END)
(note 5 51 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 2 cx [orig:91 state ] [91]) [2 state_2(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 24)
;;  succ:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]

;; basic block 3, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 37 r8 [orig:93 databitlen ] [93])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2071 (nil)))
 -> 16)
;;  succ:       4 [79.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [20.7%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]

;; basic block 4, loop depth 0, count 0, freq 3964, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [79.3%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:91 state ] [91])
                    (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (nil))
(jump_insn 15 14 37 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 16)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 16)
;;  succ:       5 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [28.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]

;; basic block 5, loop depth 0, count 0, freq 5061, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [62.2%]  (CAN_FALLTHRU)
;;              4 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 7 [sp]
;; live  kill	 17 [flags]
(code_label 37 15 38 5 90 "" [1 uses])
(note 38 37 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 38 44 5 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:403 83 {*movdi_xor}
     (nil))
(insn 44 59 52 5 (use (reg/i:SI 0 ax)) blake_ref.c:403 -1
     (nil))
(note 52 44 53 5 NOTE_INSN_EPILOGUE_BEG)
(insn 53 52 54 5 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:403 677 {blockage}
     (nil))
(insn/f 54 53 55 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:403 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (nil))))
(jump_insn 55 54 56 5 (simple_return) blake_ref.c:403 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 56 55 24)
;; basic block 6, loop depth 0, count 0, freq 5000, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 24 56 25 6 88 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 37 r8 [orig:93 databitlen ] [93])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 31)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 31)
;;  succ:       7 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              8 [29.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]

;; basic block 7, loop depth 0, count 0, freq 3550, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 2 cx [orig:91 state ] [91])
                    (const_int 4 [0x4])) [2 state_2(D)->datalen+0 S4 A32])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (nil))
(jump_insn 30 29 31 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 37)
;;  succ:       5 [62.2%]  (CAN_FALLTHRU)
;;              8 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]

;; basic block 8, loop depth 0, count 0, freq 2793, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              6 [29.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 31 30 32 8 91 "" [1 uses])
(note 32 31 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 36 32 61 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 61 36 62 8 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:403 83 {*movdi_xor}
     (nil))
(insn 62 61 63 8 (use (reg/i:SI 0 ax)) blake_ref.c:403 -1
     (nil))
(note 63 62 64 8 NOTE_INSN_EPILOGUE_BEG)
(insn 64 63 65 8 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:403 677 {blockage}
     (nil))
(insn/f 65 64 66 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:403 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 66 65 69 8 (simple_return) blake_ref.c:403 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 69 66 16)
;; basic block 9, loop depth 0, count 0, freq 2146, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [28.0%]  (CAN_FALLTHRU)
;;              3 [20.7%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 16 69 17 9 89 "" [2 uses])
(note 17 16 21 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 21 17 71 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 71 21 72 9 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:403 83 {*movdi_xor}
     (nil))
(insn 72 71 73 9 (use (reg/i:SI 0 ax)) blake_ref.c:403 -1
     (nil))
(note 73 72 74 9 NOTE_INSN_EPILOGUE_BEG)
(insn 74 73 75 9 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:403 677 {blockage}
     (nil))
(insn/f 75 74 76 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:403 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 76 75 79 9 (simple_return) blake_ref.c:403 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 79 76 48)
(note 48 79 0 NOTE_INSN_DELETED)

;; Function Final (Final, funcdef_no=20, decl_uid=3192, cgraph_uid=20, symbol_order=28)



Final

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 39[r10] 40[r11]
;;  ref usage 	r0={189d,184u,5e} r1={79d,81u} r2={93d,85u,1e} r3={4d,201u,39e} r4={4d,98u} r5={9d,8u} r6={9d,9u,1e} r7={16d,174u} r8={29d} r9={29d} r10={29d} r11={29d} r12={29d} r13={29d} r14={29d} r15={29d} r16={2e} r17={193d,44u} r18={29d} r19={29d} r21={30d} r22={30d} r23={30d} r24={30d} r25={28d} r26={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={97d,89u} r38={49d,24u} r39={34d,7u} r40={41d,15u,4e} r53={29d} r54={29d} r55={29d} r56={29d} r57={29d} r58={29d} r59={29d} r60={29d} r61={29d} r62={29d} r63={29d} r64={29d} r65={29d} r66={29d} r67={29d} r68={29d} r69={29d} r70={29d} r71={29d} r72={29d} r73={29d} r74={29d} r75={29d} r76={29d} r77={29d} r78={29d} r79={29d} r80={29d} 
;;    total ref usage 3390{2319d,1019u,52e} in 712{683 regular + 29 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 4 [si] 7 [sp] 17 [flags] 39 [r10]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 4 [si] 7 [sp] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
(note 5 1 1286 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1286 5 1287 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) blake_ref.c:653 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 1287 1286 1288 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:653 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 1288 1287 1289 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 4 si)) blake_ref.c:653 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si)
        (nil)))
(insn/f 1289 1288 1290 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:653 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 1290 1289 1291 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -72 [0xffffffffffffffb8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:653 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -72 [0xffffffffffffffb8])))
            (nil))))
(insn 1291 1290 1292 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:653 679 {prologue_use}
     (nil))
(note 1292 1291 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 1292 3 2 (set (reg/v/f:DI 3 bx [orig:633 state ] [633])
        (reg:DI 2 cx [ state ])) blake_ref.c:653 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (reg/f:DI 16 argp) [4 state+0 S8 A64])
            (nil))))
(insn 3 2 4 2 (set (reg/v/f:DI 4 si [orig:634 hashval ] [634])
        (reg:DI 1 dx [ hashval ])) blake_ref.c:653 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ hashval ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 16 argp)
                    (const_int 8 [0x8])) [4 hashval+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 11 2 (set (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (mem:SI (reg/f:DI 2 cx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) blake_ref.c:655 90 {*movsi_internal}
     (nil))
(insn 11 7 12 2 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 44 [0x2c])) [0  S1 A32])
        (const_int 0 [0])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 45 [0x2d])) [0  S1 A8])
        (const_int 1 [0x1])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 46 [0x2e])) [0  S1 A16])
        (const_int -128 [0xffffffffffffff80])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 14 13 8 2 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 47 [0x2f])) [0  S1 A8])
        (const_int -127 [0xffffffffffffff81])) blake_ref.c:410 93 {*movqi_internal}
     (nil))
(insn 8 14 9 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 383 [0x17f]))) blake_ref.c:655 7 {*cmpsi_1}
     (nil))
(jump_insn 9 8 406 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1387)
            (pc))) blake_ref.c:655 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 1387)
;;  succ:       25 [39.0%]  (CAN_FALLTHRU)
;;              3 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  kill	 17 [flags]
(note 406 9 411 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 411 406 412 3 (set (reg:DI 0 ax [orig:241 D.6036 ] [241])
        (mem:DI (plus:DI (reg/f:DI 2 cx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) blake_ref.c:539 89 {*movdi_internal}
     (nil))
(insn 412 411 1285 3 (set (reg:DI 2 cx)
        (sign_extend:DI (mem:SI (plus:DI (reg/f:DI 2 cx [orig:633 state ] [633])
                    (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32]))) blake_ref.c:539 142 {*extendsidi2_rex64}
     (nil))
(insn 1285 412 414 3 (set (reg:DI 1 dx)
        (reg:DI 2 cx)) blake_ref.c:539 89 {*movdi_internal}
     (nil))
(note 414 1285 415 3 NOTE_INSN_DELETED)
(insn 415 414 1083 3 (set (reg/v:DI 37 r8 [orig:245 high ] [245])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 208 [0xd0])) [3 state_4(D)->t64+8 S8 A64])) blake_ref.c:540 89 {*movdi_internal}
     (nil))
(insn 1083 415 1084 3 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:DI (reg:DI 2 cx [orig:243 D.6036 ] [243])
                        (reg:DI 0 ax [orig:241 D.6036 ] [241]))
                    (reg:DI 2 cx [orig:243 D.6036 ] [243])))
            (set (reg/v:DI 2 cx [orig:244 low ] [244])
                (plus:DI (reg:DI 2 cx [orig:243 D.6036 ] [243])
                    (reg:DI 0 ax [orig:241 D.6036 ] [241])))
        ]) blake_ref.c:542 303 {*adddi3_cc_overflow}
     (nil))
(insn 1084 1083 1197 3 (parallel [
            (set (reg/v:DI 37 r8 [orig:245 high ] [245])
                (plus:DI (plus:DI (ltu:DI (reg:CCC 17 flags)
                            (const_int 0 [0]))
                        (reg/v:DI 37 r8 [orig:245 high ] [245]))
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:542 285 {adddi3_carry}
     (expr_list:REG_DEAD (reg:CCC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1197 1084 422 3 (set (reg:DI 38 r9 [orig:246 D.6036 ] [246])
        (reg/v:DI 37 r8 [orig:245 high ] [245])) blake_ref.c:543 89 {*movdi_internal}
     (nil))
(insn 422 1197 1199 3 (parallel [
            (set (reg:DI 38 r9 [orig:246 D.6036 ] [246])
                (lshiftrt:DI (reg:DI 38 r9 [orig:246 D.6036 ] [246])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1199 422 424 3 (set (reg:SI 40 r11 [orig:755 D.6032 ] [755])
        (reg:SI 38 r9 [orig:246 D.6036 ] [246])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 424 1199 425 3 (parallel [
            (set (reg:SI 40 r11 [orig:755 D.6032 ] [755])
                (lshiftrt:SI (reg:SI 40 r11 [orig:755 D.6032 ] [755])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 425 424 1201 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 msglen+0 S1 A128])
        (reg:QI 40 r11 [orig:755 D.6032 ] [755])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 40 r11 [orig:755 D.6032 ] [755])
        (nil)))
(insn 1201 425 426 3 (set (reg:SI 40 r11 [orig:756 D.6032 ] [756])
        (reg:SI 38 r9 [orig:246 D.6036 ] [246])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 426 1201 427 3 (parallel [
            (set (reg:SI 40 r11 [orig:756 D.6032 ] [756])
                (lshiftrt:SI (reg:SI 40 r11 [orig:756 D.6032 ] [756])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 427 426 1203 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 49 [0x31])) [0 msglen+1 S1 A8])
        (reg:QI 40 r11 [orig:756 D.6032 ] [756])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 40 r11 [orig:756 D.6032 ] [756])
        (nil)))
(insn 1203 427 428 3 (set (reg:SI 40 r11 [orig:757 D.6032 ] [757])
        (reg:SI 38 r9 [orig:246 D.6036 ] [246])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 428 1203 429 3 (parallel [
            (set (reg:SI 40 r11 [orig:757 D.6032 ] [757])
                (lshiftrt:SI (reg:SI 40 r11 [orig:757 D.6032 ] [757])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 429 428 430 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 50 [0x32])) [0 msglen+2 S1 A16])
        (reg:QI 40 r11 [orig:757 D.6032 ] [757])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 40 r11 [orig:757 D.6032 ] [757])
        (nil)))
(insn 430 429 1205 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 51 [0x33])) [0 msglen+3 S1 A8])
        (reg:QI 38 r9 [orig:246 D.6036 ] [246])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:246 D.6036 ] [246])
        (nil)))
(insn 1205 430 432 3 (set (reg:SI 38 r9 [orig:758 D.6032 ] [758])
        (reg:SI 37 r8 [orig:245 high ] [245])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 432 1205 433 3 (parallel [
            (set (reg:SI 38 r9 [orig:758 D.6032 ] [758])
                (lshiftrt:SI (reg:SI 38 r9 [orig:758 D.6032 ] [758])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 433 432 1207 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 52 [0x34])) [0 msglen+4 S1 A32])
        (reg:QI 38 r9 [orig:758 D.6032 ] [758])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:758 D.6032 ] [758])
        (nil)))
(insn 1207 433 434 3 (set (reg:SI 38 r9 [orig:759 D.6032 ] [759])
        (reg:SI 37 r8 [orig:245 high ] [245])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 434 1207 435 3 (parallel [
            (set (reg:SI 38 r9 [orig:759 D.6032 ] [759])
                (lshiftrt:SI (reg:SI 38 r9 [orig:759 D.6032 ] [759])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 435 434 1209 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 53 [0x35])) [0 msglen+5 S1 A8])
        (reg:QI 38 r9 [orig:759 D.6032 ] [759])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:759 D.6032 ] [759])
        (nil)))
(insn 1209 435 436 3 (set (reg:SI 38 r9 [orig:760 D.6032 ] [760])
        (reg:SI 37 r8 [orig:245 high ] [245])) blake_ref.c:543 90 {*movsi_internal}
     (nil))
(insn 436 1209 437 3 (parallel [
            (set (reg:SI 38 r9 [orig:760 D.6032 ] [760])
                (lshiftrt:SI (reg:SI 38 r9 [orig:760 D.6032 ] [760])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:543 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 437 436 438 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 54 [0x36])) [0 msglen+6 S1 A16])
        (reg:QI 38 r9 [orig:760 D.6032 ] [760])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:760 D.6032 ] [760])
        (nil)))
(insn 438 437 1211 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 55 [0x37])) [0 msglen+7 S1 A8])
        (reg:QI 37 r8 [orig:245 high ] [245])) blake_ref.c:543 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:245 high ] [245])
        (nil)))
(insn 1211 438 439 3 (set (reg:DI 37 r8 [orig:263 D.6036 ] [263])
        (reg/v:DI 2 cx [orig:244 low ] [244])) blake_ref.c:544 89 {*movdi_internal}
     (nil))
(insn 439 1211 1213 3 (parallel [
            (set (reg:DI 37 r8 [orig:263 D.6036 ] [263])
                (lshiftrt:DI (reg:DI 37 r8 [orig:263 D.6036 ] [263])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1213 439 441 3 (set (reg:SI 38 r9 [orig:761 D.6032 ] [761])
        (reg:SI 37 r8 [orig:263 D.6036 ] [263])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 441 1213 442 3 (parallel [
            (set (reg:SI 38 r9 [orig:761 D.6032 ] [761])
                (lshiftrt:SI (reg:SI 38 r9 [orig:761 D.6032 ] [761])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 442 441 1215 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [0 msglen+8 S1 A64])
        (reg:QI 38 r9 [orig:761 D.6032 ] [761])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:761 D.6032 ] [761])
        (nil)))
(insn 1215 442 443 3 (set (reg:SI 38 r9 [orig:762 D.6032 ] [762])
        (reg:SI 37 r8 [orig:263 D.6036 ] [263])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 443 1215 444 3 (parallel [
            (set (reg:SI 38 r9 [orig:762 D.6032 ] [762])
                (lshiftrt:SI (reg:SI 38 r9 [orig:762 D.6032 ] [762])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 444 443 1217 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 57 [0x39])) [0 msglen+9 S1 A8])
        (reg:QI 38 r9 [orig:762 D.6032 ] [762])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:762 D.6032 ] [762])
        (nil)))
(insn 1217 444 445 3 (set (reg:SI 38 r9 [orig:763 D.6032 ] [763])
        (reg:SI 37 r8 [orig:263 D.6036 ] [263])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 445 1217 446 3 (parallel [
            (set (reg:SI 38 r9 [orig:763 D.6032 ] [763])
                (lshiftrt:SI (reg:SI 38 r9 [orig:763 D.6032 ] [763])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 446 445 447 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 58 [0x3a])) [0 msglen+10 S1 A16])
        (reg:QI 38 r9 [orig:763 D.6032 ] [763])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:763 D.6032 ] [763])
        (nil)))
(insn 447 446 1219 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 59 [0x3b])) [0 msglen+11 S1 A8])
        (reg:QI 37 r8 [orig:263 D.6036 ] [263])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:263 D.6036 ] [263])
        (nil)))
(insn 1219 447 449 3 (set (reg:SI 37 r8 [orig:764 D.6032 ] [764])
        (reg:SI 2 cx [orig:244 low ] [244])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 449 1219 450 3 (parallel [
            (set (reg:SI 37 r8 [orig:764 D.6032 ] [764])
                (lshiftrt:SI (reg:SI 37 r8 [orig:764 D.6032 ] [764])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 450 449 1221 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 60 [0x3c])) [0 msglen+12 S1 A32])
        (reg:QI 37 r8 [orig:764 D.6032 ] [764])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:764 D.6032 ] [764])
        (nil)))
(insn 1221 450 451 3 (set (reg:SI 37 r8 [orig:765 D.6032 ] [765])
        (reg:SI 2 cx [orig:244 low ] [244])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 451 1221 452 3 (parallel [
            (set (reg:SI 37 r8 [orig:765 D.6032 ] [765])
                (lshiftrt:SI (reg:SI 37 r8 [orig:765 D.6032 ] [765])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 452 451 1223 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 61 [0x3d])) [0 msglen+13 S1 A8])
        (reg:QI 37 r8 [orig:765 D.6032 ] [765])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:765 D.6032 ] [765])
        (nil)))
(insn 1223 452 453 3 (set (reg:SI 37 r8 [orig:766 D.6032 ] [766])
        (reg:SI 2 cx [orig:244 low ] [244])) blake_ref.c:544 90 {*movsi_internal}
     (nil))
(insn 453 1223 454 3 (parallel [
            (set (reg:SI 37 r8 [orig:766 D.6032 ] [766])
                (lshiftrt:SI (reg:SI 37 r8 [orig:766 D.6032 ] [766])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:544 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 454 453 455 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 62 [0x3e])) [0 msglen+14 S1 A16])
        (reg:QI 37 r8 [orig:766 D.6032 ] [766])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:766 D.6032 ] [766])
        (nil)))
(insn 455 454 457 3 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 63 [0x3f])) [0 msglen+15 S1 A8])
        (reg:QI 2 cx [orig:244 low ] [244])) blake_ref.c:544 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:244 low ] [244])
        (nil)))
(note 457 455 1269 3 NOTE_INSN_DELETED)
(insn 1269 457 459 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 1 dx [orig:242 D.6033 ] [242])
                (const_int 7 [0x7]))
            (const_int 0 [0]))) blake_ref.c:546 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 459 1269 460 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 587)
            (pc))) blake_ref.c:546 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 587)
;;  succ:       4 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              15 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 4, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 460 459 461 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 888 [0x378]))) blake_ref.c:549 7 {*cmpsi_1}
     (nil))
(jump_insn 462 461 488 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1388)
            (pc))) blake_ref.c:549 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1388)
;;  succ:       55 [28.0%]  (CAN_FALLTHRU)
;;              5 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 5, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 488 462 489 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 887 [0x377]))) blake_ref.c:558 7 {*cmpsi_1}
     (nil))
(jump_insn 490 489 499 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1389)
            (pc))) blake_ref.c:558 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1389)
;;  succ:       44 [50.0%]  (CAN_FALLTHRU)
;;              6 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 499 490 500 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 6 (set (reg:SI 37 r8 [772])
        (const_int 1024 [0x400])) blake_ref.c:568 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 1024 [0x400])
        (nil)))
(insn 501 500 502 6 (parallel [
            (set (reg:SI 37 r8 [orig:771 D.6033 ] [771])
                (minus:SI (reg:SI 37 r8 [772])
                    (reg:SI 1 dx [orig:242 D.6033 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:568 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 502 501 503 6 (set (reg:DI 37 r8 [orig:287 D.6036 ] [287])
        (sign_extend:DI (reg:SI 37 r8 [orig:771 D.6033 ] [771]))) blake_ref.c:568 142 {*extendsidi2_rex64}
     (nil))
(insn 503 502 504 6 (parallel [
            (set (reg:DI 0 ax [orig:288 D.6036 ] [288])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 37 r8 [orig:287 D.6036 ] [287])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:568 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 504 503 505 6 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [orig:288 D.6036 ] [288])) blake_ref.c:568 89 {*movdi_internal}
     (nil))
(note 505 504 506 6 NOTE_INSN_DELETED)
(note 506 505 507 6 NOTE_INSN_DELETED)
(insn 507 506 508 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:242 D.6033 ] [242])
        (nil)))
(jump_insn 508 507 1024 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1033)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1033)
;;  succ:       70 [14.0%]  (CAN_FALLTHRU)
;;              7 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 7, loop depth 0, count 0, freq 944, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1024 508 509 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(note 509 1024 510 7 NOTE_INSN_DELETED)
(note 510 509 511 7 NOTE_INSN_DELETED)
(insn 511 510 512 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:287 D.6036 ] [287])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 512 511 520 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1033)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 1033)
;;  succ:       8 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              70 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 8, loop depth 0, count 0, freq 1098, maybe hot
;; Invalid sum of incoming frequencies 1327, should be 1098
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              70 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 520 512 521 8 125 "" [1 uses])
(note 521 520 522 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 8 (parallel [
            (set (reg:DI 0 ax [777])
                (plus:DI (reg:DI 0 ax [orig:288 D.6036 ] [288])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:570 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 523 522 524 8 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [777])) blake_ref.c:570 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [777])
        (nil)))
(insn 524 523 525 8 (set (reg:DI 37 r8)
        (const_int 888 [0x378])) 89 {*movdi_internal}
     (nil))
(insn 525 524 526 8 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 526 525 527 8 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 527 526 528 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 528 527 1011 8 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:572 90 {*movsi_internal}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              46 [100.0%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 1011 528 529 9 145 "" [1 uses])
(note 529 1011 530 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 9 (set (reg:SI 0 ax [orig:290 D.6033 ] [290])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) blake_ref.c:574 90 {*movsi_internal}
     (nil))
(insn 531 530 532 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:290 D.6033 ] [290])
            (const_int 384 [0x180]))) blake_ref.c:574 7 {*cmpsi_1}
     (nil))
(jump_insn 532 531 542 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1390)
            (pc))) blake_ref.c:574 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1390)
;;  succ:       67 [28.0%]  (CAN_FALLTHRU)
;;              10 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1581, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	
(note 542 532 1265 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 1265 542 547 10 (set (reg/f:DI 1 dx [779])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 45 [0x2d]))) 214 {*leadi}
     (nil))
(insn 547 1265 549 10 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 549 547 543 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(insn 543 549 544 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:290 D.6033 ] [290])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:290 D.6033 ] [290])
        (nil)))
(jump_insn 544 543 545 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 553)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 553)
;;  succ:       11 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              57 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 11, loop depth 0, count 0, freq 791, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax]
;; live  kill	
(note 545 544 550 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(call_insn 550 545 560 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 2196, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       57 [100.0%]  (CAN_FALLTHRU)
;;              11 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              67 [100.0%]  (CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 560 550 561 12 128 "" [2 uses])
(note 561 560 562 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(note 562 561 1225 12 NOTE_INSN_DELETED)
(insn 1225 562 563 12 (set (reg:DI 0 ax [1029])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) blake_ref.c:578 89 {*movdi_internal}
     (nil))
(insn 563 1225 564 12 (parallel [
            (set (reg:DI 0 ax [orig:292 D.6036 ] [292])
                (plus:DI (reg:DI 0 ax [1029])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:578 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
;;  succ:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

;; basic block 13, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              56 [100.0%]  (CAN_FALLTHRU)
;;              83 [100.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 564 563 565 13 122 "" [2 uses])
(note 565 564 566 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 566 565 567 13 (parallel [
            (set (reg:DI 0 ax [782])
                (plus:DI (reg:DI 0 ax [orig:292 D.6036 ] [292])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:580 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 567 566 568 13 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [782])) blake_ref.c:580 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [782])
        (nil)))
(insn 568 567 569 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (nil))
(jump_insn 569 568 1391 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 578)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 578)
;;  succ:       14 [50.0%]  (FALLTHRU)
;;              43 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 13, next block 15, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	
;; lr  use 	
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
(note 1391 569 1392 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1392 1391 1393 14 (set (pc)
        (label_ref 760)) -1
     (nil)
 -> 760)
;;  succ:       22 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	
;; live  out 	

(barrier 1393 1392 587)
;; basic block 15, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [50.0%]  (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 37 [r8] 38 [r9] 40 [r11]
;; live  kill	 17 [flags]
(code_label 587 1393 588 15 119 "" [1 uses])
(note 588 587 1258 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 1258 588 591 15 (set (reg:SI 37 r8 [786])
        (plus:SI (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 7 [0x7]))) blake_ref.c:587 213 {*leasi}
     (nil))
(insn 591 1258 592 15 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 0 [0]))) blake_ref.c:587 3 {*cmpsi_ccno_1}
     (nil))
(insn 592 591 593 15 (set (reg:SI 37 r8 [orig:785 D.6033 ] [785])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 37 r8 [786])
            (reg:SI 1 dx [orig:242 D.6033 ] [242]))) blake_ref.c:587 951 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil)))
(insn 593 592 1226 15 (parallel [
            (set (reg:SI 37 r8 [787])
                (ashiftrt:SI (reg:SI 37 r8 [orig:785 D.6033 ] [785])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1226 593 595 15 (set (reg:SI 2 cx [788])
        (reg:SI 1 dx [orig:242 D.6033 ] [242])) blake_ref.c:587 90 {*movsi_internal}
     (nil))
(insn 595 1226 596 15 (parallel [
            (set (reg:SI 2 cx [788])
                (ashiftrt:SI (reg:SI 2 cx [788])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 538 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 596 595 1259 15 (parallel [
            (set (reg:SI 2 cx [789])
                (lshiftrt:SI (reg:SI 2 cx [788])
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1259 596 598 15 (set (reg:SI 40 r11 [790])
        (plus:SI (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (reg:SI 2 cx [789]))) blake_ref.c:587 213 {*leasi}
     (nil))
(insn 598 1259 599 15 (parallel [
            (set (reg:SI 40 r11 [791])
                (and:SI (reg:SI 40 r11 [790])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 599 598 601 15 (parallel [
            (set (reg:SI 40 r11 [792])
                (minus:SI (reg:SI 40 r11 [791])
                    (reg:SI 2 cx [789])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [789])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 601 599 602 15 (set (reg:SI 6 bp [793])
        (const_int 8 [0x8])) blake_ref.c:587 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))
(insn 602 601 603 15 (parallel [
            (set (reg:SI 6 bp [orig:298 D.6033 ] [298])
                (minus:SI (reg:SI 6 bp [793])
                    (reg:SI 40 r11 [792])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:587 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 8 [0x8])
                (reg:SI 40 r11 [792]))
            (nil))))
(insn 603 602 604 15 (set (reg:DI 37 r8 [orig:794 D.6033 ] [794])
        (sign_extend:DI (reg:SI 37 r8 [787]))) blake_ref.c:587 142 {*extendsidi2_rex64}
     (nil))
(insn 604 603 1228 15 (set (reg:SI 5 di [796])
        (const_int 255 [0xff])) blake_ref.c:588 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(insn 1228 604 605 15 (set (reg:QI 2 cx [1031])
        (reg:QI 6 bp [orig:298 D.6033 ] [298])) blake_ref.c:588 93 {*movqi_internal}
     (nil))
(insn 605 1228 606 15 (parallel [
            (set (reg:SI 5 di [orig:795 D.6033 ] [795])
                (ashift:SI (reg:SI 5 di [796])
                    (reg:QI 2 cx [1031])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:QI 2 cx [1031])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (const_int 255 [0xff])
                    (subreg:QI (reg:SI 6 bp [orig:298 D.6033 ] [298]) 0))
                (nil)))))
(insn 606 605 607 15 (parallel [
            (set (reg:QI 5 di [orig:797 D.6037 ] [797])
                (and:QI (reg:QI 5 di [orig:795 D.6033 ] [795])
                    (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                                (reg:DI 37 r8 [orig:794 D.6033 ] [794]))
                            (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 384 {*andqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 607 606 1231 15 (set (reg:SI 38 r9 [799])
        (const_int 128 [0x80])) blake_ref.c:588 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 1231 607 608 15 (set (reg:QI 2 cx [1033])
        (reg:QI 40 r11 [792])) blake_ref.c:588 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 40 r11 [792])
        (nil)))
(insn 608 1231 1230 15 (parallel [
            (set (reg:SI 38 r9 [orig:798 D.6033 ] [798])
                (ashiftrt:SI (reg:SI 38 r9 [orig:798 D.6033 ] [798])
                    (reg:QI 2 cx [1033])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:QI 2 cx [1033])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (const_int 128 [0x80])
                    (subreg:QI (reg:SI 40 r11 [792]) 0))
                (nil)))))
(insn 1230 608 1260 15 (set (reg:SI 2 cx [orig:798 D.6033 ] [798])
        (reg:SI 38 r9 [orig:798 D.6033 ] [798])) blake_ref.c:588 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:798 D.6033 ] [798])
        (nil)))
(insn 1260 1230 611 15 (parallel [
            (set (reg:SI 2 cx [orig:305 D.6034 ] [305])
                (xor:SI (reg:SI 2 cx [orig:798 D.6033 ] [798])
                    (reg:SI 5 di [orig:797 D.6037 ] [797])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:588 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:797 D.6037 ] [797])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 611 1260 1261 15 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (reg:DI 37 r8 [orig:794 D.6033 ] [794]))
                (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])
        (reg:QI 2 cx [orig:305 D.6034 ] [305])) blake_ref.c:588 93 {*movqi_internal}
     (nil))
(insn 1261 611 613 15 (set (reg:SI 38 r9 [orig:801 D.6035 ] [801])
        (plus:SI (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int -889 [0xfffffffffffffc87]))) blake_ref.c:590 213 {*leasi}
     (nil))
(insn 613 1261 614 15 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 38 r9 [orig:801 D.6035 ] [801])
            (const_int 5 [0x5]))) blake_ref.c:590 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 38 r9 [orig:801 D.6035 ] [801])
        (nil)))
(jump_insn 614 613 632 15 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1394)
            (pc))) blake_ref.c:590 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1394)
;;  succ:       40 [50.0%]  (CAN_FALLTHRU)
;;              16 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 39 [r10]

;; basic block 16, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 632 614 633 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 633 632 634 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 887 [0x377]))) blake_ref.c:601 7 {*cmpsi_1}
     (nil))
(jump_insn 634 633 635 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 665)
            (pc))) blake_ref.c:601 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 665)
;;  succ:       17 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              58 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 17, loop depth 0, count 0, freq 762, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 635 634 636 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 1232 17 (set (reg:SI 37 r8 [808])
        (const_int 888 [0x378])) blake_ref.c:603 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 888 [0x378])
        (nil)))
(insn 1232 636 637 17 (set (reg:SI 2 cx [orig:807 D.6033 ] [807])
        (reg:SI 37 r8 [808])) blake_ref.c:603 90 {*movsi_internal}
     (nil))
(insn 637 1232 638 17 (parallel [
            (set (reg:SI 2 cx [orig:807 D.6033 ] [807])
                (minus:SI (reg:SI 2 cx [orig:807 D.6033 ] [807])
                    (reg:SI 1 dx [orig:242 D.6033 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:603 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 638 637 639 17 (set (reg:DI 2 cx [orig:809 D.6036 ] [809])
        (sign_extend:DI (reg:SI 2 cx [orig:807 D.6033 ] [807]))) blake_ref.c:603 142 {*extendsidi2_rex64}
     (nil))
(insn 639 638 640 17 (parallel [
            (set (reg:DI 0 ax [orig:616 D.6039 ] [616])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 2 cx [orig:809 D.6036 ] [809])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:603 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:809 D.6036 ] [809])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 640 639 641 17 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [orig:616 D.6039 ] [616])) blake_ref.c:603 89 {*movdi_internal}
     (nil))
(insn 641 640 642 17 (parallel [
            (set (reg:SI 1 dx [orig:810 D.6035 ] [810])
                (and:SI (reg:SI 1 dx [orig:242 D.6033 ] [242])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:604 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 642 641 643 17 (parallel [
            (set (reg:SI 1 dx [orig:317 D.6033 ] [317])
                (plus:SI (reg:SI 1 dx [orig:810 D.6035 ] [810])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:604 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 643 642 645 17 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 1 dx [orig:317 D.6033 ] [317])) blake_ref.c:604 90 {*movsi_internal}
     (nil))
(insn 645 643 646 17 (parallel [
            (set (reg:SI 37 r8 [orig:811 D.6033 ] [811])
                (minus:SI (reg:SI 37 r8 [808])
                    (reg:SI 1 dx [orig:317 D.6033 ] [317])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:605 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 646 645 647 17 (set (reg:DI 37 r8 [orig:319 D.6036 ] [319])
        (sign_extend:DI (reg:SI 37 r8 [orig:811 D.6033 ] [811]))) blake_ref.c:605 142 {*extendsidi2_rex64}
     (nil))
(note 647 646 648 17 NOTE_INSN_DELETED)
(note 648 647 649 17 NOTE_INSN_DELETED)
(insn 649 648 650 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:319 D.6036 ] [319])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 650 649 1026 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1034)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1034)
;;  succ:       76 [14.0%]  (CAN_FALLTHRU)
;;              18 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]

;; basic block 18, loop depth 0, count 0, freq 655, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       17 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1026 650 651 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(note 651 1026 652 18 NOTE_INSN_DELETED)
(note 652 651 653 18 NOTE_INSN_DELETED)
(insn 653 652 654 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:317 D.6033 ] [317])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:317 D.6033 ] [317])
        (nil)))
(jump_insn 654 653 731 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1034)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 1034)
;;  succ:       19 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              76 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]

;; basic block 19, loop depth 0, count 0, freq 1525, maybe hot
;; Invalid sum of incoming frequencies 3919, should be 1525
;;  prev block 18, next block 20, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       63 [100.0%]  (CAN_FALLTHRU)
;;              18 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              76 [100.0%]  (CAN_FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 731 654 732 19 135 "" [2 uses])
(note 732 731 733 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 19 (parallel [
            (set (reg:DI 0 ax [834])
                (plus:DI (reg:DI 0 ax [orig:616 D.6039 ] [616])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:628 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 734 733 1255 19 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [834])) blake_ref.c:628 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [834])
        (nil)))
(insn 1255 734 735 19 (set (reg/f:DI 1 dx [835])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 44 [0x2c]))) 214 {*leadi}
     (nil))
(insn 735 1255 736 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 384 [0x180]))) blake_ref.c:629 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 736 735 748 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1317)
            (pc))) blake_ref.c:629 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1317)
;;  succ:       20 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 [28.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	
(note 748 736 1254 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 1254 748 1317 20 (set (reg/f:DI 1 dx [836])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 45 [0x2d]))) 214 {*leadi}
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 21, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              19 [28.0%]  (CAN_FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(code_label 1317 1254 1315 21 179 "" [1 uses])
(note 1315 1317 750 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 750 1315 752 21 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 752 750 753 21 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 753 752 754 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 754 753 755 21 (set (reg:DI 0 ax [orig:594 D.6039 ] [594])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 755 754 758 21 (set (reg:SI 1 dx [orig:283 D.6033 ] [283])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 758 755 759 21 (parallel [
            (set (reg:DI 0 ax [837])
                (plus:DI (reg:DI 0 ax [orig:594 D.6039 ] [594])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 759 758 761 21 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [837])) blake_ref.c:634 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [837])
        (nil)))
(insn 761 759 762 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:283 D.6033 ] [283])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:283 D.6033 ] [283])
        (nil)))
(jump_insn 762 761 760 21 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 578)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 578)
;;  succ:       22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              43 (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 22, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [100.0%]  (CAN_FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 760 762 570 22 142 "" [1 uses])
(note 570 760 1263 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 1263 570 572 22 (set (reg/f:DI 1 dx [783])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) 214 {*leadi}
     (nil))
(insn 572 1263 574 22 (set (reg:DI 37 r8)
        (const_int 128 [0x80])) 89 {*movdi_internal}
     (nil))
(insn 574 572 575 22 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 575 574 766 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       23 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 23, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              43 [100.0%]  (CAN_FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 766 575 767 23 131 "" [1 uses])
(note 767 766 768 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(note 768 767 769 23 NOTE_INSN_DELETED)
(note 769 768 770 23 NOTE_INSN_DELETED)
(insn 770 769 771 23 (set (reg:SI 0 ax [orig:840 D.6032 ] [840])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 143 [0x8f])) [3 state_4(D)->h64+7 S1 A8]))) blake_ref.c:638 138 {*zero_extendqisi2}
     (nil))
(insn 771 770 772 23 (set (mem:QI (reg/v/f:DI 4 si [orig:634 hashval ] [634]) [0 *hashval_6(D)+0 S1 A8])
        (reg:QI 0 ax [orig:840 D.6032 ] [840])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:840 D.6032 ] [840])
        (nil)))
(note 772 771 773 23 NOTE_INSN_DELETED)
(note 773 772 774 23 NOTE_INSN_DELETED)
(insn 774 773 775 23 (set (reg:SI 0 ax [orig:843 D.6032 ] [843])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 142 [0x8e])) [3 state_4(D)->h64+6 S2 A16]))) blake_ref.c:638 139 {*zero_extendhisi2}
     (nil))
(insn 775 774 776 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 1 [0x1])) [0 MEM[(BitSequence *)hashval_6(D) + 1B]+0 S1 A8])
        (reg:QI 0 ax [orig:843 D.6032 ] [843])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:843 D.6032 ] [843])
        (nil)))
(note 776 775 777 23 NOTE_INSN_DELETED)
(insn 777 776 778 23 (set (reg:DI 0 ax [orig:844 D.6036 ] [844])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 140 [0x8c])) [3 state_4(D)->h64+4 S4 A32]))) blake_ref.c:638 133 {*zero_extendsidi2}
     (nil))
(insn 778 777 779 23 (parallel [
            (set (reg:SI 0 ax [orig:846 D.6032 ] [846])
                (lshiftrt:SI (reg:SI 0 ax [orig:844 D.6036 ] [844])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 779 778 780 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 2 [0x2])) [0 MEM[(BitSequence *)hashval_6(D) + 2B]+0 S1 A8])
        (reg:QI 0 ax [orig:846 D.6032 ] [846])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:846 D.6032 ] [846])
        (nil)))
(note 780 779 781 23 NOTE_INSN_DELETED)
(insn 781 780 782 23 (set (reg:DI 0 ax [orig:847 D.6036 ] [847])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 140 [0x8c])) [3 state_4(D)->h64+4 S4 A32]))) blake_ref.c:638 133 {*zero_extendsidi2}
     (nil))
(insn 782 781 783 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 3 [0x3])) [0 MEM[(BitSequence *)hashval_6(D) + 3B]+0 S1 A8])
        (reg:QI 0 ax [orig:847 D.6036 ] [847])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:847 D.6036 ] [847])
        (nil)))
(note 783 782 784 23 NOTE_INSN_DELETED)
(insn 784 783 785 23 (set (reg:SI 0 ax [orig:850 D.6032 ] [850])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 139 [0x8b])) [3 state_4(D)->h64+3 S1 A8]))) blake_ref.c:638 138 {*zero_extendqisi2}
     (nil))
(insn 785 784 786 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 4 [0x4])) [0 MEM[(BitSequence *)hashval_6(D) + 4B]+0 S1 A8])
        (reg:QI 0 ax [orig:850 D.6032 ] [850])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:850 D.6032 ] [850])
        (nil)))
(note 786 785 787 23 NOTE_INSN_DELETED)
(insn 787 786 788 23 (set (reg:SI 0 ax [orig:852 D.6032 ] [852])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 138 [0x8a])) [3 state_4(D)->h64+2 S2 A16]))) blake_ref.c:638 139 {*zero_extendhisi2}
     (nil))
(insn 788 787 789 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 5 [0x5])) [0 MEM[(BitSequence *)hashval_6(D) + 5B]+0 S1 A8])
        (reg:QI 0 ax [orig:852 D.6032 ] [852])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:852 D.6032 ] [852])
        (nil)))
(note 789 788 1238 23 NOTE_INSN_DELETED)
(insn 1238 789 790 23 (set (reg:SI 0 ax [orig:854 D.6032 ] [854])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S4 A64])) blake_ref.c:638 90 {*movsi_internal}
     (nil))
(insn 790 1238 791 23 (parallel [
            (set (reg:SI 0 ax [orig:854 D.6032 ] [854])
                (lshiftrt:SI (reg:SI 0 ax [orig:854 D.6032 ] [854])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:638 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 791 790 792 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 6 [0x6])) [0 MEM[(BitSequence *)hashval_6(D) + 6B]+0 S1 A8])
        (reg:QI 0 ax [orig:854 D.6032 ] [854])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:854 D.6032 ] [854])
        (nil)))
(insn 792 791 793 23 (set (reg:DI 0 ax [orig:855 state_4(D)->h64 ] [855])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])) blake_ref.c:638 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 136 [0x88])) [3 state_4(D)->h64+0 S8 A64])
        (nil)))
(insn 793 792 794 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 7 [0x7])) [0 MEM[(BitSequence *)hashval_6(D) + 7B]+0 S1 A8])
        (reg:QI 0 ax [orig:855 state_4(D)->h64 ] [855])) blake_ref.c:638 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:855 state_4(D)->h64 ] [855])
        (nil)))
(note 794 793 795 23 NOTE_INSN_DELETED)
(note 795 794 796 23 NOTE_INSN_DELETED)
(insn 796 795 797 23 (set (reg:SI 0 ax [orig:858 D.6032 ] [858])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 151 [0x97])) [3 state_4(D)->h64+15 S1 A8]))) blake_ref.c:639 138 {*zero_extendqisi2}
     (nil))
(insn 797 796 798 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 8 [0x8])) [0 MEM[(BitSequence *)hashval_6(D) + 8B]+0 S1 A8])
        (reg:QI 0 ax [orig:858 D.6032 ] [858])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:858 D.6032 ] [858])
        (nil)))
(note 798 797 799 23 NOTE_INSN_DELETED)
(note 799 798 800 23 NOTE_INSN_DELETED)
(insn 800 799 801 23 (set (reg:SI 0 ax [orig:861 D.6032 ] [861])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 150 [0x96])) [3 state_4(D)->h64+14 S2 A16]))) blake_ref.c:639 139 {*zero_extendhisi2}
     (nil))
(insn 801 800 802 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 9 [0x9])) [0 MEM[(BitSequence *)hashval_6(D) + 9B]+0 S1 A8])
        (reg:QI 0 ax [orig:861 D.6032 ] [861])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:861 D.6032 ] [861])
        (nil)))
(note 802 801 803 23 NOTE_INSN_DELETED)
(insn 803 802 804 23 (set (reg:DI 0 ax [orig:862 D.6036 ] [862])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 148 [0x94])) [3 state_4(D)->h64+12 S4 A32]))) blake_ref.c:639 133 {*zero_extendsidi2}
     (nil))
(insn 804 803 805 23 (parallel [
            (set (reg:SI 0 ax [orig:864 D.6032 ] [864])
                (lshiftrt:SI (reg:SI 0 ax [orig:862 D.6036 ] [862])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 805 804 806 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 10 [0xa])) [0 MEM[(BitSequence *)hashval_6(D) + 10B]+0 S1 A8])
        (reg:QI 0 ax [orig:864 D.6032 ] [864])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:864 D.6032 ] [864])
        (nil)))
(note 806 805 807 23 NOTE_INSN_DELETED)
(insn 807 806 808 23 (set (reg:DI 0 ax [orig:865 D.6036 ] [865])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 148 [0x94])) [3 state_4(D)->h64+12 S4 A32]))) blake_ref.c:639 133 {*zero_extendsidi2}
     (nil))
(insn 808 807 809 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 11 [0xb])) [0 MEM[(BitSequence *)hashval_6(D) + 11B]+0 S1 A8])
        (reg:QI 0 ax [orig:865 D.6036 ] [865])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:865 D.6036 ] [865])
        (nil)))
(note 809 808 810 23 NOTE_INSN_DELETED)
(insn 810 809 811 23 (set (reg:SI 0 ax [orig:868 D.6032 ] [868])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 147 [0x93])) [3 state_4(D)->h64+11 S1 A8]))) blake_ref.c:639 138 {*zero_extendqisi2}
     (nil))
(insn 811 810 812 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 12 [0xc])) [0 MEM[(BitSequence *)hashval_6(D) + 12B]+0 S1 A8])
        (reg:QI 0 ax [orig:868 D.6032 ] [868])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:868 D.6032 ] [868])
        (nil)))
(note 812 811 813 23 NOTE_INSN_DELETED)
(insn 813 812 814 23 (set (reg:SI 0 ax [orig:870 D.6032 ] [870])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 146 [0x92])) [3 state_4(D)->h64+10 S2 A16]))) blake_ref.c:639 139 {*zero_extendhisi2}
     (nil))
(insn 814 813 815 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 13 [0xd])) [0 MEM[(BitSequence *)hashval_6(D) + 13B]+0 S1 A8])
        (reg:QI 0 ax [orig:870 D.6032 ] [870])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:870 D.6032 ] [870])
        (nil)))
(note 815 814 1240 23 NOTE_INSN_DELETED)
(insn 1240 815 816 23 (set (reg:SI 0 ax [orig:872 D.6032 ] [872])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S4 A64])) blake_ref.c:639 90 {*movsi_internal}
     (nil))
(insn 816 1240 817 23 (parallel [
            (set (reg:SI 0 ax [orig:872 D.6032 ] [872])
                (lshiftrt:SI (reg:SI 0 ax [orig:872 D.6032 ] [872])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:639 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 817 816 818 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 14 [0xe])) [0 MEM[(BitSequence *)hashval_6(D) + 14B]+0 S1 A8])
        (reg:QI 0 ax [orig:872 D.6032 ] [872])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:872 D.6032 ] [872])
        (nil)))
(insn 818 817 819 23 (set (reg:DI 0 ax [orig:873 state_4(D)->h64+8 ] [873])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])) blake_ref.c:639 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 144 [0x90])) [3 state_4(D)->h64+8 S8 A64])
        (nil)))
(insn 819 818 820 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 15 [0xf])) [0 MEM[(BitSequence *)hashval_6(D) + 15B]+0 S1 A8])
        (reg:QI 0 ax [orig:873 state_4(D)->h64+8 ] [873])) blake_ref.c:639 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:873 state_4(D)->h64+8 ] [873])
        (nil)))
(note 820 819 821 23 NOTE_INSN_DELETED)
(note 821 820 822 23 NOTE_INSN_DELETED)
(insn 822 821 823 23 (set (reg:SI 0 ax [orig:876 D.6032 ] [876])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 159 [0x9f])) [3 state_4(D)->h64+23 S1 A8]))) blake_ref.c:640 138 {*zero_extendqisi2}
     (nil))
(insn 823 822 824 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 16 [0x10])) [0 MEM[(BitSequence *)hashval_6(D) + 16B]+0 S1 A8])
        (reg:QI 0 ax [orig:876 D.6032 ] [876])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:876 D.6032 ] [876])
        (nil)))
(note 824 823 825 23 NOTE_INSN_DELETED)
(note 825 824 826 23 NOTE_INSN_DELETED)
(insn 826 825 827 23 (set (reg:SI 0 ax [orig:879 D.6032 ] [879])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 158 [0x9e])) [3 state_4(D)->h64+22 S2 A16]))) blake_ref.c:640 139 {*zero_extendhisi2}
     (nil))
(insn 827 826 828 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 17 [0x11])) [0 MEM[(BitSequence *)hashval_6(D) + 17B]+0 S1 A8])
        (reg:QI 0 ax [orig:879 D.6032 ] [879])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:879 D.6032 ] [879])
        (nil)))
(note 828 827 829 23 NOTE_INSN_DELETED)
(insn 829 828 830 23 (set (reg:DI 0 ax [orig:880 D.6036 ] [880])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 156 [0x9c])) [3 state_4(D)->h64+20 S4 A32]))) blake_ref.c:640 133 {*zero_extendsidi2}
     (nil))
(insn 830 829 831 23 (parallel [
            (set (reg:SI 0 ax [orig:882 D.6032 ] [882])
                (lshiftrt:SI (reg:SI 0 ax [orig:880 D.6036 ] [880])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 831 830 832 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 18 [0x12])) [0 MEM[(BitSequence *)hashval_6(D) + 18B]+0 S1 A8])
        (reg:QI 0 ax [orig:882 D.6032 ] [882])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:882 D.6032 ] [882])
        (nil)))
(note 832 831 833 23 NOTE_INSN_DELETED)
(insn 833 832 834 23 (set (reg:DI 0 ax [orig:883 D.6036 ] [883])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 156 [0x9c])) [3 state_4(D)->h64+20 S4 A32]))) blake_ref.c:640 133 {*zero_extendsidi2}
     (nil))
(insn 834 833 835 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 19 [0x13])) [0 MEM[(BitSequence *)hashval_6(D) + 19B]+0 S1 A8])
        (reg:QI 0 ax [orig:883 D.6036 ] [883])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:883 D.6036 ] [883])
        (nil)))
(note 835 834 836 23 NOTE_INSN_DELETED)
(insn 836 835 837 23 (set (reg:SI 0 ax [orig:886 D.6032 ] [886])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 155 [0x9b])) [3 state_4(D)->h64+19 S1 A8]))) blake_ref.c:640 138 {*zero_extendqisi2}
     (nil))
(insn 837 836 838 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 20 [0x14])) [0 MEM[(BitSequence *)hashval_6(D) + 20B]+0 S1 A8])
        (reg:QI 0 ax [orig:886 D.6032 ] [886])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:886 D.6032 ] [886])
        (nil)))
(note 838 837 839 23 NOTE_INSN_DELETED)
(insn 839 838 840 23 (set (reg:SI 0 ax [orig:888 D.6032 ] [888])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 154 [0x9a])) [3 state_4(D)->h64+18 S2 A16]))) blake_ref.c:640 139 {*zero_extendhisi2}
     (nil))
(insn 840 839 841 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 21 [0x15])) [0 MEM[(BitSequence *)hashval_6(D) + 21B]+0 S1 A8])
        (reg:QI 0 ax [orig:888 D.6032 ] [888])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:888 D.6032 ] [888])
        (nil)))
(note 841 840 1242 23 NOTE_INSN_DELETED)
(insn 1242 841 842 23 (set (reg:SI 0 ax [orig:890 D.6032 ] [890])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S4 A64])) blake_ref.c:640 90 {*movsi_internal}
     (nil))
(insn 842 1242 843 23 (parallel [
            (set (reg:SI 0 ax [orig:890 D.6032 ] [890])
                (lshiftrt:SI (reg:SI 0 ax [orig:890 D.6032 ] [890])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:640 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 843 842 844 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 22 [0x16])) [0 MEM[(BitSequence *)hashval_6(D) + 22B]+0 S1 A8])
        (reg:QI 0 ax [orig:890 D.6032 ] [890])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:890 D.6032 ] [890])
        (nil)))
(insn 844 843 845 23 (set (reg:DI 0 ax [orig:891 state_4(D)->h64+16 ] [891])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])) blake_ref.c:640 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 152 [0x98])) [3 state_4(D)->h64+16 S8 A64])
        (nil)))
(insn 845 844 846 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 23 [0x17])) [0 MEM[(BitSequence *)hashval_6(D) + 23B]+0 S1 A8])
        (reg:QI 0 ax [orig:891 state_4(D)->h64+16 ] [891])) blake_ref.c:640 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:891 state_4(D)->h64+16 ] [891])
        (nil)))
(note 846 845 847 23 NOTE_INSN_DELETED)
(note 847 846 848 23 NOTE_INSN_DELETED)
(insn 848 847 849 23 (set (reg:SI 0 ax [orig:894 D.6032 ] [894])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 167 [0xa7])) [3 state_4(D)->h64+31 S1 A8]))) blake_ref.c:641 138 {*zero_extendqisi2}
     (nil))
(insn 849 848 850 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 24 [0x18])) [0 MEM[(BitSequence *)hashval_6(D) + 24B]+0 S1 A8])
        (reg:QI 0 ax [orig:894 D.6032 ] [894])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:894 D.6032 ] [894])
        (nil)))
(note 850 849 851 23 NOTE_INSN_DELETED)
(note 851 850 852 23 NOTE_INSN_DELETED)
(insn 852 851 853 23 (set (reg:SI 0 ax [orig:897 D.6032 ] [897])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 166 [0xa6])) [3 state_4(D)->h64+30 S2 A16]))) blake_ref.c:641 139 {*zero_extendhisi2}
     (nil))
(insn 853 852 854 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 25 [0x19])) [0 MEM[(BitSequence *)hashval_6(D) + 25B]+0 S1 A8])
        (reg:QI 0 ax [orig:897 D.6032 ] [897])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:897 D.6032 ] [897])
        (nil)))
(note 854 853 855 23 NOTE_INSN_DELETED)
(insn 855 854 856 23 (set (reg:DI 0 ax [orig:898 D.6036 ] [898])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 164 [0xa4])) [3 state_4(D)->h64+28 S4 A32]))) blake_ref.c:641 133 {*zero_extendsidi2}
     (nil))
(insn 856 855 857 23 (parallel [
            (set (reg:SI 0 ax [orig:900 D.6032 ] [900])
                (lshiftrt:SI (reg:SI 0 ax [orig:898 D.6036 ] [898])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 857 856 858 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 26 [0x1a])) [0 MEM[(BitSequence *)hashval_6(D) + 26B]+0 S1 A8])
        (reg:QI 0 ax [orig:900 D.6032 ] [900])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:900 D.6032 ] [900])
        (nil)))
(note 858 857 859 23 NOTE_INSN_DELETED)
(insn 859 858 860 23 (set (reg:DI 0 ax [orig:901 D.6036 ] [901])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 164 [0xa4])) [3 state_4(D)->h64+28 S4 A32]))) blake_ref.c:641 133 {*zero_extendsidi2}
     (nil))
(insn 860 859 861 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 27 [0x1b])) [0 MEM[(BitSequence *)hashval_6(D) + 27B]+0 S1 A8])
        (reg:QI 0 ax [orig:901 D.6036 ] [901])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:901 D.6036 ] [901])
        (nil)))
(note 861 860 862 23 NOTE_INSN_DELETED)
(insn 862 861 863 23 (set (reg:SI 0 ax [orig:904 D.6032 ] [904])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 163 [0xa3])) [3 state_4(D)->h64+27 S1 A8]))) blake_ref.c:641 138 {*zero_extendqisi2}
     (nil))
(insn 863 862 864 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 28 [0x1c])) [0 MEM[(BitSequence *)hashval_6(D) + 28B]+0 S1 A8])
        (reg:QI 0 ax [orig:904 D.6032 ] [904])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:904 D.6032 ] [904])
        (nil)))
(note 864 863 865 23 NOTE_INSN_DELETED)
(insn 865 864 866 23 (set (reg:SI 0 ax [orig:906 D.6032 ] [906])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 162 [0xa2])) [3 state_4(D)->h64+26 S2 A16]))) blake_ref.c:641 139 {*zero_extendhisi2}
     (nil))
(insn 866 865 867 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 29 [0x1d])) [0 MEM[(BitSequence *)hashval_6(D) + 29B]+0 S1 A8])
        (reg:QI 0 ax [orig:906 D.6032 ] [906])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:906 D.6032 ] [906])
        (nil)))
(note 867 866 1244 23 NOTE_INSN_DELETED)
(insn 1244 867 868 23 (set (reg:SI 0 ax [orig:908 D.6032 ] [908])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S4 A64])) blake_ref.c:641 90 {*movsi_internal}
     (nil))
(insn 868 1244 869 23 (parallel [
            (set (reg:SI 0 ax [orig:908 D.6032 ] [908])
                (lshiftrt:SI (reg:SI 0 ax [orig:908 D.6032 ] [908])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:641 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 869 868 870 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 30 [0x1e])) [0 MEM[(BitSequence *)hashval_6(D) + 30B]+0 S1 A8])
        (reg:QI 0 ax [orig:908 D.6032 ] [908])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:908 D.6032 ] [908])
        (nil)))
(insn 870 869 871 23 (set (reg:DI 0 ax [orig:909 state_4(D)->h64+24 ] [909])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])) blake_ref.c:641 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 160 [0xa0])) [3 state_4(D)->h64+24 S8 A64])
        (nil)))
(insn 871 870 872 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 31 [0x1f])) [0 MEM[(BitSequence *)hashval_6(D) + 31B]+0 S1 A8])
        (reg:QI 0 ax [orig:909 state_4(D)->h64+24 ] [909])) blake_ref.c:641 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:909 state_4(D)->h64+24 ] [909])
        (nil)))
(note 872 871 873 23 NOTE_INSN_DELETED)
(note 873 872 874 23 NOTE_INSN_DELETED)
(insn 874 873 875 23 (set (reg:SI 0 ax [orig:912 D.6032 ] [912])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 175 [0xaf])) [3 state_4(D)->h64+39 S1 A8]))) blake_ref.c:642 138 {*zero_extendqisi2}
     (nil))
(insn 875 874 876 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 32 [0x20])) [0 MEM[(BitSequence *)hashval_6(D) + 32B]+0 S1 A8])
        (reg:QI 0 ax [orig:912 D.6032 ] [912])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:912 D.6032 ] [912])
        (nil)))
(note 876 875 877 23 NOTE_INSN_DELETED)
(note 877 876 878 23 NOTE_INSN_DELETED)
(insn 878 877 879 23 (set (reg:SI 0 ax [orig:915 D.6032 ] [915])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 174 [0xae])) [3 state_4(D)->h64+38 S2 A16]))) blake_ref.c:642 139 {*zero_extendhisi2}
     (nil))
(insn 879 878 880 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 33 [0x21])) [0 MEM[(BitSequence *)hashval_6(D) + 33B]+0 S1 A8])
        (reg:QI 0 ax [orig:915 D.6032 ] [915])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:915 D.6032 ] [915])
        (nil)))
(note 880 879 881 23 NOTE_INSN_DELETED)
(insn 881 880 882 23 (set (reg:DI 0 ax [orig:916 D.6036 ] [916])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 172 [0xac])) [3 state_4(D)->h64+36 S4 A32]))) blake_ref.c:642 133 {*zero_extendsidi2}
     (nil))
(insn 882 881 883 23 (parallel [
            (set (reg:SI 0 ax [orig:918 D.6032 ] [918])
                (lshiftrt:SI (reg:SI 0 ax [orig:916 D.6036 ] [916])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 883 882 884 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 34 [0x22])) [0 MEM[(BitSequence *)hashval_6(D) + 34B]+0 S1 A8])
        (reg:QI 0 ax [orig:918 D.6032 ] [918])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:918 D.6032 ] [918])
        (nil)))
(note 884 883 885 23 NOTE_INSN_DELETED)
(insn 885 884 886 23 (set (reg:DI 0 ax [orig:919 D.6036 ] [919])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 172 [0xac])) [3 state_4(D)->h64+36 S4 A32]))) blake_ref.c:642 133 {*zero_extendsidi2}
     (nil))
(insn 886 885 887 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 35 [0x23])) [0 MEM[(BitSequence *)hashval_6(D) + 35B]+0 S1 A8])
        (reg:QI 0 ax [orig:919 D.6036 ] [919])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:919 D.6036 ] [919])
        (nil)))
(note 887 886 888 23 NOTE_INSN_DELETED)
(insn 888 887 889 23 (set (reg:SI 0 ax [orig:922 D.6032 ] [922])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 171 [0xab])) [3 state_4(D)->h64+35 S1 A8]))) blake_ref.c:642 138 {*zero_extendqisi2}
     (nil))
(insn 889 888 890 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 36 [0x24])) [0 MEM[(BitSequence *)hashval_6(D) + 36B]+0 S1 A8])
        (reg:QI 0 ax [orig:922 D.6032 ] [922])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:922 D.6032 ] [922])
        (nil)))
(note 890 889 891 23 NOTE_INSN_DELETED)
(insn 891 890 892 23 (set (reg:SI 0 ax [orig:924 D.6032 ] [924])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 170 [0xaa])) [3 state_4(D)->h64+34 S2 A16]))) blake_ref.c:642 139 {*zero_extendhisi2}
     (nil))
(insn 892 891 893 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 37 [0x25])) [0 MEM[(BitSequence *)hashval_6(D) + 37B]+0 S1 A8])
        (reg:QI 0 ax [orig:924 D.6032 ] [924])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:924 D.6032 ] [924])
        (nil)))
(note 893 892 1246 23 NOTE_INSN_DELETED)
(insn 1246 893 894 23 (set (reg:SI 0 ax [orig:926 D.6032 ] [926])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S4 A64])) blake_ref.c:642 90 {*movsi_internal}
     (nil))
(insn 894 1246 895 23 (parallel [
            (set (reg:SI 0 ax [orig:926 D.6032 ] [926])
                (lshiftrt:SI (reg:SI 0 ax [orig:926 D.6032 ] [926])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:642 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 895 894 896 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 38 [0x26])) [0 MEM[(BitSequence *)hashval_6(D) + 38B]+0 S1 A8])
        (reg:QI 0 ax [orig:926 D.6032 ] [926])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:926 D.6032 ] [926])
        (nil)))
(insn 896 895 897 23 (set (reg:DI 0 ax [orig:927 state_4(D)->h64+32 ] [927])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])) blake_ref.c:642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 168 [0xa8])) [3 state_4(D)->h64+32 S8 A64])
        (nil)))
(insn 897 896 898 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 39 [0x27])) [0 MEM[(BitSequence *)hashval_6(D) + 39B]+0 S1 A8])
        (reg:QI 0 ax [orig:927 state_4(D)->h64+32 ] [927])) blake_ref.c:642 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:927 state_4(D)->h64+32 ] [927])
        (nil)))
(note 898 897 899 23 NOTE_INSN_DELETED)
(note 899 898 900 23 NOTE_INSN_DELETED)
(insn 900 899 901 23 (set (reg:SI 0 ax [orig:930 D.6032 ] [930])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 183 [0xb7])) [3 state_4(D)->h64+47 S1 A8]))) blake_ref.c:643 138 {*zero_extendqisi2}
     (nil))
(insn 901 900 902 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 40 [0x28])) [0 MEM[(BitSequence *)hashval_6(D) + 40B]+0 S1 A8])
        (reg:QI 0 ax [orig:930 D.6032 ] [930])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:930 D.6032 ] [930])
        (nil)))
(note 902 901 903 23 NOTE_INSN_DELETED)
(note 903 902 904 23 NOTE_INSN_DELETED)
(insn 904 903 905 23 (set (reg:SI 0 ax [orig:933 D.6032 ] [933])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 182 [0xb6])) [3 state_4(D)->h64+46 S2 A16]))) blake_ref.c:643 139 {*zero_extendhisi2}
     (nil))
(insn 905 904 906 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 41 [0x29])) [0 MEM[(BitSequence *)hashval_6(D) + 41B]+0 S1 A8])
        (reg:QI 0 ax [orig:933 D.6032 ] [933])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:933 D.6032 ] [933])
        (nil)))
(note 906 905 907 23 NOTE_INSN_DELETED)
(insn 907 906 908 23 (set (reg:DI 0 ax [orig:934 D.6036 ] [934])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 180 [0xb4])) [3 state_4(D)->h64+44 S4 A32]))) blake_ref.c:643 133 {*zero_extendsidi2}
     (nil))
(insn 908 907 909 23 (parallel [
            (set (reg:SI 0 ax [orig:936 D.6032 ] [936])
                (lshiftrt:SI (reg:SI 0 ax [orig:934 D.6036 ] [934])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 909 908 910 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 42 [0x2a])) [0 MEM[(BitSequence *)hashval_6(D) + 42B]+0 S1 A8])
        (reg:QI 0 ax [orig:936 D.6032 ] [936])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:936 D.6032 ] [936])
        (nil)))
(note 910 909 911 23 NOTE_INSN_DELETED)
(insn 911 910 912 23 (set (reg:DI 0 ax [orig:937 D.6036 ] [937])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 180 [0xb4])) [3 state_4(D)->h64+44 S4 A32]))) blake_ref.c:643 133 {*zero_extendsidi2}
     (nil))
(insn 912 911 913 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 43 [0x2b])) [0 MEM[(BitSequence *)hashval_6(D) + 43B]+0 S1 A8])
        (reg:QI 0 ax [orig:937 D.6036 ] [937])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:937 D.6036 ] [937])
        (nil)))
(note 913 912 914 23 NOTE_INSN_DELETED)
(insn 914 913 915 23 (set (reg:SI 0 ax [orig:940 D.6032 ] [940])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 179 [0xb3])) [3 state_4(D)->h64+43 S1 A8]))) blake_ref.c:643 138 {*zero_extendqisi2}
     (nil))
(insn 915 914 916 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 44 [0x2c])) [0 MEM[(BitSequence *)hashval_6(D) + 44B]+0 S1 A8])
        (reg:QI 0 ax [orig:940 D.6032 ] [940])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:940 D.6032 ] [940])
        (nil)))
(note 916 915 917 23 NOTE_INSN_DELETED)
(insn 917 916 918 23 (set (reg:SI 0 ax [orig:942 D.6032 ] [942])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 178 [0xb2])) [3 state_4(D)->h64+42 S2 A16]))) blake_ref.c:643 139 {*zero_extendhisi2}
     (nil))
(insn 918 917 919 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 45 [0x2d])) [0 MEM[(BitSequence *)hashval_6(D) + 45B]+0 S1 A8])
        (reg:QI 0 ax [orig:942 D.6032 ] [942])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:942 D.6032 ] [942])
        (nil)))
(note 919 918 1248 23 NOTE_INSN_DELETED)
(insn 1248 919 920 23 (set (reg:SI 0 ax [orig:944 D.6032 ] [944])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S4 A64])) blake_ref.c:643 90 {*movsi_internal}
     (nil))
(insn 920 1248 921 23 (parallel [
            (set (reg:SI 0 ax [orig:944 D.6032 ] [944])
                (lshiftrt:SI (reg:SI 0 ax [orig:944 D.6032 ] [944])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:643 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 921 920 922 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 46 [0x2e])) [0 MEM[(BitSequence *)hashval_6(D) + 46B]+0 S1 A8])
        (reg:QI 0 ax [orig:944 D.6032 ] [944])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:944 D.6032 ] [944])
        (nil)))
(insn 922 921 923 23 (set (reg:DI 0 ax [orig:945 state_4(D)->h64+40 ] [945])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])) blake_ref.c:643 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 176 [0xb0])) [3 state_4(D)->h64+40 S8 A64])
        (nil)))
(insn 923 922 924 23 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 47 [0x2f])) [0 MEM[(BitSequence *)hashval_6(D) + 47B]+0 S1 A8])
        (reg:QI 0 ax [orig:945 state_4(D)->h64+40 ] [945])) blake_ref.c:643 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:945 state_4(D)->h64+40 ] [945])
        (nil)))
(insn 924 923 925 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 512 [0x200]))) blake_ref.c:645 7 {*cmpsi_1}
     (nil))
(jump_insn 925 924 926 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1058)
            (pc))) blake_ref.c:645 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 1058)
;;  succ:       24 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              32 [62.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 24, loop depth 0, count 0, freq 2307, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 926 925 927 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(note 927 926 928 24 NOTE_INSN_DELETED)
(note 928 927 929 24 NOTE_INSN_DELETED)
(insn 929 928 930 24 (set (reg:SI 0 ax [orig:948 D.6032 ] [948])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 191 [0xbf])) [3 state_4(D)->h64+55 S1 A8]))) blake_ref.c:646 138 {*zero_extendqisi2}
     (nil))
(insn 930 929 931 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 48 [0x30])) [0 MEM[(BitSequence *)hashval_6(D) + 48B]+0 S1 A8])
        (reg:QI 0 ax [orig:948 D.6032 ] [948])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:948 D.6032 ] [948])
        (nil)))
(note 931 930 932 24 NOTE_INSN_DELETED)
(note 932 931 933 24 NOTE_INSN_DELETED)
(insn 933 932 934 24 (set (reg:SI 0 ax [orig:951 D.6032 ] [951])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 190 [0xbe])) [3 state_4(D)->h64+54 S2 A16]))) blake_ref.c:646 139 {*zero_extendhisi2}
     (nil))
(insn 934 933 935 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 49 [0x31])) [0 MEM[(BitSequence *)hashval_6(D) + 49B]+0 S1 A8])
        (reg:QI 0 ax [orig:951 D.6032 ] [951])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:951 D.6032 ] [951])
        (nil)))
(note 935 934 936 24 NOTE_INSN_DELETED)
(insn 936 935 937 24 (set (reg:DI 0 ax [orig:952 D.6036 ] [952])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 188 [0xbc])) [3 state_4(D)->h64+52 S4 A32]))) blake_ref.c:646 133 {*zero_extendsidi2}
     (nil))
(insn 937 936 938 24 (parallel [
            (set (reg:SI 0 ax [orig:954 D.6032 ] [954])
                (lshiftrt:SI (reg:SI 0 ax [orig:952 D.6036 ] [952])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 938 937 939 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 50 [0x32])) [0 MEM[(BitSequence *)hashval_6(D) + 50B]+0 S1 A8])
        (reg:QI 0 ax [orig:954 D.6032 ] [954])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:954 D.6032 ] [954])
        (nil)))
(note 939 938 940 24 NOTE_INSN_DELETED)
(insn 940 939 941 24 (set (reg:DI 0 ax [orig:955 D.6036 ] [955])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 188 [0xbc])) [3 state_4(D)->h64+52 S4 A32]))) blake_ref.c:646 133 {*zero_extendsidi2}
     (nil))
(insn 941 940 942 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 51 [0x33])) [0 MEM[(BitSequence *)hashval_6(D) + 51B]+0 S1 A8])
        (reg:QI 0 ax [orig:955 D.6036 ] [955])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:955 D.6036 ] [955])
        (nil)))
(note 942 941 943 24 NOTE_INSN_DELETED)
(insn 943 942 944 24 (set (reg:SI 0 ax [orig:958 D.6032 ] [958])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 187 [0xbb])) [3 state_4(D)->h64+51 S1 A8]))) blake_ref.c:646 138 {*zero_extendqisi2}
     (nil))
(insn 944 943 945 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 52 [0x34])) [0 MEM[(BitSequence *)hashval_6(D) + 52B]+0 S1 A8])
        (reg:QI 0 ax [orig:958 D.6032 ] [958])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:958 D.6032 ] [958])
        (nil)))
(note 945 944 946 24 NOTE_INSN_DELETED)
(insn 946 945 947 24 (set (reg:SI 0 ax [orig:960 D.6032 ] [960])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 186 [0xba])) [3 state_4(D)->h64+50 S2 A16]))) blake_ref.c:646 139 {*zero_extendhisi2}
     (nil))
(insn 947 946 948 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 53 [0x35])) [0 MEM[(BitSequence *)hashval_6(D) + 53B]+0 S1 A8])
        (reg:QI 0 ax [orig:960 D.6032 ] [960])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:960 D.6032 ] [960])
        (nil)))
(note 948 947 1250 24 NOTE_INSN_DELETED)
(insn 1250 948 949 24 (set (reg:SI 0 ax [orig:962 D.6032 ] [962])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S4 A64])) blake_ref.c:646 90 {*movsi_internal}
     (nil))
(insn 949 1250 950 24 (parallel [
            (set (reg:SI 0 ax [orig:962 D.6032 ] [962])
                (lshiftrt:SI (reg:SI 0 ax [orig:962 D.6032 ] [962])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:646 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 950 949 951 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 54 [0x36])) [0 MEM[(BitSequence *)hashval_6(D) + 54B]+0 S1 A8])
        (reg:QI 0 ax [orig:962 D.6032 ] [962])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:962 D.6032 ] [962])
        (nil)))
(insn 951 950 952 24 (set (reg:DI 0 ax [orig:963 state_4(D)->h64+48 ] [963])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])) blake_ref.c:646 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 184 [0xb8])) [3 state_4(D)->h64+48 S8 A64])
        (nil)))
(insn 952 951 953 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 55 [0x37])) [0 MEM[(BitSequence *)hashval_6(D) + 55B]+0 S1 A8])
        (reg:QI 0 ax [orig:963 state_4(D)->h64+48 ] [963])) blake_ref.c:646 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:963 state_4(D)->h64+48 ] [963])
        (nil)))
(note 953 952 954 24 NOTE_INSN_DELETED)
(note 954 953 955 24 NOTE_INSN_DELETED)
(insn 955 954 956 24 (set (reg:SI 0 ax [orig:966 D.6032 ] [966])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 199 [0xc7])) [3 state_4(D)->h64+63 S1 A8]))) blake_ref.c:647 138 {*zero_extendqisi2}
     (nil))
(insn 956 955 957 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 56 [0x38])) [0 MEM[(BitSequence *)hashval_6(D) + 56B]+0 S1 A8])
        (reg:QI 0 ax [orig:966 D.6032 ] [966])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:966 D.6032 ] [966])
        (nil)))
(note 957 956 958 24 NOTE_INSN_DELETED)
(note 958 957 959 24 NOTE_INSN_DELETED)
(insn 959 958 960 24 (set (reg:SI 0 ax [orig:969 D.6032 ] [969])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 198 [0xc6])) [3 state_4(D)->h64+62 S2 A16]))) blake_ref.c:647 139 {*zero_extendhisi2}
     (nil))
(insn 960 959 961 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 57 [0x39])) [0 MEM[(BitSequence *)hashval_6(D) + 57B]+0 S1 A8])
        (reg:QI 0 ax [orig:969 D.6032 ] [969])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:969 D.6032 ] [969])
        (nil)))
(note 961 960 962 24 NOTE_INSN_DELETED)
(insn 962 961 963 24 (set (reg:DI 0 ax [orig:970 D.6036 ] [970])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 196 [0xc4])) [3 state_4(D)->h64+60 S4 A32]))) blake_ref.c:647 133 {*zero_extendsidi2}
     (nil))
(insn 963 962 964 24 (parallel [
            (set (reg:SI 0 ax [orig:972 D.6032 ] [972])
                (lshiftrt:SI (reg:SI 0 ax [orig:970 D.6036 ] [970])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 964 963 965 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 58 [0x3a])) [0 MEM[(BitSequence *)hashval_6(D) + 58B]+0 S1 A8])
        (reg:QI 0 ax [orig:972 D.6032 ] [972])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:972 D.6032 ] [972])
        (nil)))
(note 965 964 966 24 NOTE_INSN_DELETED)
(insn 966 965 967 24 (set (reg:DI 0 ax [orig:973 D.6036 ] [973])
        (zero_extend:DI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 196 [0xc4])) [3 state_4(D)->h64+60 S4 A32]))) blake_ref.c:647 133 {*zero_extendsidi2}
     (nil))
(insn 967 966 968 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 59 [0x3b])) [0 MEM[(BitSequence *)hashval_6(D) + 59B]+0 S1 A8])
        (reg:QI 0 ax [orig:973 D.6036 ] [973])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:973 D.6036 ] [973])
        (nil)))
(note 968 967 969 24 NOTE_INSN_DELETED)
(insn 969 968 970 24 (set (reg:SI 0 ax [orig:976 D.6032 ] [976])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 195 [0xc3])) [3 state_4(D)->h64+59 S1 A8]))) blake_ref.c:647 138 {*zero_extendqisi2}
     (nil))
(insn 970 969 971 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 60 [0x3c])) [0 MEM[(BitSequence *)hashval_6(D) + 60B]+0 S1 A8])
        (reg:QI 0 ax [orig:976 D.6032 ] [976])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:976 D.6032 ] [976])
        (nil)))
(note 971 970 972 24 NOTE_INSN_DELETED)
(insn 972 971 973 24 (set (reg:SI 0 ax [orig:978 D.6032 ] [978])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 194 [0xc2])) [3 state_4(D)->h64+58 S2 A16]))) blake_ref.c:647 139 {*zero_extendhisi2}
     (nil))
(insn 973 972 974 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 61 [0x3d])) [0 MEM[(BitSequence *)hashval_6(D) + 61B]+0 S1 A8])
        (reg:QI 0 ax [orig:978 D.6032 ] [978])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:978 D.6032 ] [978])
        (nil)))
(note 974 973 1252 24 NOTE_INSN_DELETED)
(insn 1252 974 975 24 (set (reg:SI 0 ax [orig:980 D.6032 ] [980])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S4 A64])) blake_ref.c:647 90 {*movsi_internal}
     (nil))
(insn 975 1252 976 24 (parallel [
            (set (reg:SI 0 ax [orig:980 D.6032 ] [980])
                (lshiftrt:SI (reg:SI 0 ax [orig:980 D.6032 ] [980])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:647 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 976 975 977 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 62 [0x3e])) [0 MEM[(BitSequence *)hashval_6(D) + 62B]+0 S1 A8])
        (reg:QI 0 ax [orig:980 D.6032 ] [980])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:980 D.6032 ] [980])
        (nil)))
(insn 977 976 978 24 (set (reg:DI 0 ax [orig:981 state_4(D)->h64+56 ] [981])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 192 [0xc0])) [3 state_4(D)->h64+56 S8 A64])) blake_ref.c:647 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:633 state ] [633])
        (nil)))
(insn 978 977 1374 24 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 63 [0x3f])) [0 MEM[(BitSequence *)hashval_6(D) + 63B]+0 S1 A8])
        (reg:QI 0 ax [orig:981 state_4(D)->h64+56 ] [981])) blake_ref.c:647 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:634 hashval ] [634])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:981 state_4(D)->h64+56 ] [981])
            (nil))))
(insn 1374 978 1375 24 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:659 83 {*movdi_xor}
     (nil))
(insn 1375 1374 1376 24 (use (reg/i:SI 0 ax)) blake_ref.c:659 -1
     (nil))
(note 1376 1375 1377 24 NOTE_INSN_EPILOGUE_BEG)
(insn 1377 1376 1378 24 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:659 677 {blockage}
     (nil))
(insn/f 1378 1377 1379 24 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:659 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])))
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn/f 1379 1378 1380 24 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 1380 1379 1381 24 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 1381 1380 1382 24 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 1382 1381 1383 24 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(jump_insn 1383 1382 1386 24 (simple_return) blake_ref.c:659 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1386 1383 1387)
;; basic block 25, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [39.0%]  (CAN_FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 38 [r9]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8] 38 [r9]
;; live  kill	 17 [flags]
(code_label 1387 1386 10 25 180 "" [1 uses])
(note 10 1387 15 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 15 10 16 25 (set (reg:SI 38 r9 [orig:88 D.6032 ] [88])
        (mem:SI (plus:DI (reg/f:DI 2 cx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) blake_ref.c:416 90 {*movsi_internal}
     (nil))
(insn 16 15 18 25 (set (reg:SI 0 ax [orig:89 D.6033 ] [89])
        (mem:SI (plus:DI (reg/f:DI 2 cx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])) blake_ref.c:416 90 {*movsi_internal}
     (nil))
(note 18 16 19 25 NOTE_INSN_DELETED)
(insn 19 18 1161 25 (set (reg/v:SI 2 cx [orig:92 high ] [92])
        (mem:SI (plus:DI (reg/f:DI 2 cx [orig:633 state ] [633])
                (const_int 52 [0x34])) [2 state_4(D)->t32+4 S4 A32])) blake_ref.c:417 90 {*movsi_internal}
     (nil))
(insn 1161 19 1081 25 (set (reg/v:SI 1 dx [orig:91 low ] [91])
        (reg:SI 38 r9 [orig:88 D.6032 ] [88])) blake_ref.c:419 90 {*movsi_internal}
     (nil))
(insn 1081 1161 1082 25 (parallel [
            (set (reg:CCC 17 flags)
                (compare:CCC (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                        (reg:SI 0 ax [orig:89 D.6033 ] [89]))
                    (reg/v:SI 1 dx [orig:91 low ] [91])))
            (set (reg/v:SI 1 dx [orig:91 low ] [91])
                (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                    (reg:SI 0 ax [orig:89 D.6033 ] [89])))
        ]) blake_ref.c:419 302 {*addsi3_cc_overflow}
     (nil))
(insn 1082 1081 1163 25 (parallel [
            (set (reg/v:SI 2 cx [orig:92 high ] [92])
                (plus:SI (plus:SI (ltu:SI (reg:CCC 17 flags)
                            (const_int 0 [0]))
                        (reg/v:SI 2 cx [orig:92 high ] [92]))
                    (const_int 0 [0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:419 284 {addsi3_carry}
     (expr_list:REG_DEAD (reg:CCC 17 flags)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1163 1082 26 25 (set (reg:SI 37 r8 [orig:635 D.6032 ] [635])
        (reg/v:SI 2 cx [orig:92 high ] [92])) blake_ref.c:420 90 {*movsi_internal}
     (nil))
(insn 26 1163 27 25 (parallel [
            (set (reg:SI 37 r8 [orig:635 D.6032 ] [635])
                (lshiftrt:SI (reg:SI 37 r8 [orig:635 D.6032 ] [635])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 1165 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [0 msglen+0 S1 A128])
        (reg:QI 37 r8 [orig:635 D.6032 ] [635])) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:635 D.6032 ] [635])
        (nil)))
(insn 1165 27 28 25 (set (reg:SI 37 r8 [orig:636 D.6032 ] [636])
        (reg/v:SI 2 cx [orig:92 high ] [92])) blake_ref.c:420 90 {*movsi_internal}
     (nil))
(insn 28 1165 29 25 (parallel [
            (set (reg:SI 37 r8 [orig:636 D.6032 ] [636])
                (lshiftrt:SI (reg:SI 37 r8 [orig:636 D.6032 ] [636])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 1167 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 49 [0x31])) [0 msglen+1 S1 A8])
        (reg:QI 37 r8 [orig:636 D.6032 ] [636])) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:636 D.6032 ] [636])
        (nil)))
(insn 1167 29 30 25 (set (reg:SI 37 r8 [orig:637 D.6032 ] [637])
        (reg/v:SI 2 cx [orig:92 high ] [92])) blake_ref.c:420 90 {*movsi_internal}
     (nil))
(insn 30 1167 31 25 (parallel [
            (set (reg:SI 37 r8 [orig:637 D.6032 ] [637])
                (lshiftrt:SI (reg:SI 37 r8 [orig:637 D.6032 ] [637])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:420 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 31 30 32 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 50 [0x32])) [0 msglen+2 S1 A16])
        (reg:QI 37 r8 [orig:637 D.6032 ] [637])) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:637 D.6032 ] [637])
        (nil)))
(insn 32 31 1169 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 51 [0x33])) [0 msglen+3 S1 A8])
        (reg:QI 2 cx [orig:92 high ] [92])) blake_ref.c:420 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:92 high ] [92])
        (nil)))
(insn 1169 32 33 25 (set (reg:SI 2 cx [orig:638 D.6032 ] [638])
        (reg/v:SI 1 dx [orig:91 low ] [91])) blake_ref.c:421 90 {*movsi_internal}
     (nil))
(insn 33 1169 34 25 (parallel [
            (set (reg:SI 2 cx [orig:638 D.6032 ] [638])
                (lshiftrt:SI (reg:SI 2 cx [orig:638 D.6032 ] [638])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 34 33 1171 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 52 [0x34])) [0 msglen+4 S1 A32])
        (reg:QI 2 cx [orig:638 D.6032 ] [638])) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:638 D.6032 ] [638])
        (nil)))
(insn 1171 34 35 25 (set (reg:SI 2 cx [orig:639 D.6032 ] [639])
        (reg/v:SI 1 dx [orig:91 low ] [91])) blake_ref.c:421 90 {*movsi_internal}
     (nil))
(insn 35 1171 36 25 (parallel [
            (set (reg:SI 2 cx [orig:639 D.6032 ] [639])
                (lshiftrt:SI (reg:SI 2 cx [orig:639 D.6032 ] [639])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 36 35 1173 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 53 [0x35])) [0 msglen+5 S1 A8])
        (reg:QI 2 cx [orig:639 D.6032 ] [639])) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:639 D.6032 ] [639])
        (nil)))
(insn 1173 36 37 25 (set (reg:SI 2 cx [orig:640 D.6032 ] [640])
        (reg/v:SI 1 dx [orig:91 low ] [91])) blake_ref.c:421 90 {*movsi_internal}
     (nil))
(insn 37 1173 38 25 (parallel [
            (set (reg:SI 2 cx [orig:640 D.6032 ] [640])
                (lshiftrt:SI (reg:SI 2 cx [orig:640 D.6032 ] [640])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:421 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 54 [0x36])) [0 msglen+6 S1 A16])
        (reg:QI 2 cx [orig:640 D.6032 ] [640])) blake_ref.c:421 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:640 D.6032 ] [640])
        (nil)))
(insn 39 38 40 25 (set (mem/j/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 55 [0x37])) [0 msglen+7 S1 A8])
        (reg:QI 1 dx [orig:91 low ] [91])) blake_ref.c:421 93 {*movqi_internal}
     (nil))
(note 40 39 1283 25 NOTE_INSN_DELETED)
(insn 1283 40 42 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (reg:QI 0 ax [orig:89 D.6033 ] [89])
                (const_int 7 [0x7]))
            (const_int 0 [0]))) blake_ref.c:423 359 {*testqi_1_maybe_si}
     (nil))
(jump_insn 42 1283 146 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1395)
            (pc))) blake_ref.c:423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1395)
;;  succ:       33 [50.0%]  (CAN_FALLTHRU)
;;              26 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]

;; basic block 26, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 37 [r8] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; live  gen 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 37 [r8] 40 [r11]
;; live  kill	 17 [flags]
(note 146 42 1274 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 1274 146 149 26 (set (reg:SI 37 r8 [658])
        (plus:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 7 [0x7]))) blake_ref.c:464 213 {*leasi}
     (nil))
(insn 149 1274 150 26 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 0 [0]))) blake_ref.c:464 3 {*cmpsi_ccno_1}
     (nil))
(insn 150 149 151 26 (set (reg:SI 37 r8 [orig:657 D.6033 ] [657])
        (if_then_else:SI (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:SI 37 r8 [658])
            (reg:SI 0 ax [orig:89 D.6033 ] [89]))) blake_ref.c:464 951 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil)))
(insn 151 150 1176 26 (parallel [
            (set (reg:SI 37 r8 [659])
                (ashiftrt:SI (reg:SI 37 r8 [orig:657 D.6033 ] [657])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (div:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
                (const_int 8 [0x8]))
            (nil))))
(insn 1176 151 153 26 (set (reg:SI 2 cx [660])
        (reg:SI 0 ax [orig:89 D.6033 ] [89])) blake_ref.c:464 90 {*movsi_internal}
     (nil))
(insn 153 1176 154 26 (parallel [
            (set (reg:SI 2 cx [660])
                (ashiftrt:SI (reg:SI 2 cx [660])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 538 {ashrsi3_cvt}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 154 153 1275 26 (parallel [
            (set (reg:SI 2 cx [661])
                (lshiftrt:SI (reg:SI 2 cx [660])
                    (const_int 29 [0x1d])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1275 154 156 26 (set (reg:SI 40 r11 [662])
        (plus:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (reg:SI 2 cx [661]))) blake_ref.c:464 213 {*leasi}
     (nil))
(insn 156 1275 157 26 (parallel [
            (set (reg:SI 40 r11 [663])
                (and:SI (reg:SI 40 r11 [662])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 157 156 159 26 (parallel [
            (set (reg:SI 40 r11 [664])
                (minus:SI (reg:SI 40 r11 [663])
                    (reg:SI 2 cx [661])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:464 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 2 cx [661])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 159 157 160 26 (set (reg:SI 2 cx [666])
        (const_int 8 [0x8])) blake_ref.c:465 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))
(insn 160 159 161 26 (parallel [
            (set (reg:SI 2 cx [orig:665 D.6033 ] [665])
                (minus:SI (reg:SI 2 cx [666])
                    (reg:SI 40 r11 [664])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 8 [0x8])
                (reg:SI 40 r11 [664]))
            (nil))))
(insn 161 160 162 26 (set (reg:SI 6 bp [668])
        (const_int 255 [0xff])) blake_ref.c:465 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 255 [0xff])
        (nil)))
(insn 162 161 163 26 (parallel [
            (set (reg:SI 6 bp [orig:667 D.6033 ] [667])
                (ashift:SI (reg:SI 6 bp [668])
                    (reg:QI 2 cx [orig:665 D.6033 ] [665])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:665 D.6033 ] [665])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:SI (const_int 255 [0xff])
                    (subreg:QI (reg:SI 2 cx [orig:665 D.6033 ] [665]) 0))
                (nil)))))
(insn 163 162 164 26 (set (reg:DI 37 r8 [orig:669 D.6033 ] [669])
        (sign_extend:DI (reg:SI 37 r8 [659]))) blake_ref.c:464 142 {*extendsidi2_rex64}
     (nil))
(insn 164 163 165 26 (parallel [
            (set (reg:QI 6 bp [orig:670 D.6037 ] [670])
                (and:QI (reg:QI 6 bp [orig:667 D.6033 ] [667])
                    (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                                (reg:DI 37 r8 [orig:669 D.6033 ] [669]))
                            (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 384 {*andqi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 165 164 1180 26 (set (reg:SI 5 di [672])
        (const_int 128 [0x80])) blake_ref.c:465 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 128 [0x80])
        (nil)))
(insn 1180 165 166 26 (set (reg:QI 2 cx [1006])
        (reg:QI 40 r11 [664])) blake_ref.c:465 93 {*movqi_internal}
     (nil))
(insn 166 1180 1179 26 (parallel [
            (set (reg:SI 5 di [orig:671 D.6033 ] [671])
                (ashiftrt:SI (reg:SI 5 di [orig:671 D.6033 ] [671])
                    (reg:QI 2 cx [1006])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:QI 2 cx [1006])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashiftrt:SI (const_int 128 [0x80])
                    (subreg:QI (reg:SI 40 r11 [664]) 0))
                (nil)))))
(insn 1179 166 1276 26 (set (reg:SI 2 cx [orig:671 D.6033 ] [671])
        (reg:SI 5 di [orig:671 D.6033 ] [671])) blake_ref.c:465 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:671 D.6033 ] [671])
        (nil)))
(insn 1276 1179 169 26 (parallel [
            (set (reg:SI 2 cx [orig:128 D.6034 ] [128])
                (xor:SI (reg:SI 2 cx [orig:671 D.6033 ] [671])
                    (reg:SI 6 bp [orig:670 D.6037 ] [670])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:465 400 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:670 D.6037 ] [670])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 1276 1277 26 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (reg:DI 37 r8 [orig:669 D.6033 ] [669]))
                (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])
        (reg:QI 2 cx [orig:128 D.6034 ] [128])) blake_ref.c:465 93 {*movqi_internal}
     (nil))
(insn 1277 169 171 26 (set (reg:SI 5 di [orig:674 D.6035 ] [674])
        (plus:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int -441 [0xfffffffffffffe47]))) blake_ref.c:467 213 {*leasi}
     (nil))
(insn 171 1277 172 26 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 5 di [orig:674 D.6035 ] [674])
            (const_int 5 [0x5]))) blake_ref.c:467 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:674 D.6035 ] [674])
        (nil)))
(jump_insn 172 171 173 26 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 187)
            (pc))) blake_ref.c:467 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 187)
;;  succ:       27 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              47 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 27, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       26 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 17 [flags]
;; live  kill	
(note 173 172 174 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 224 [0xe0]))) blake_ref.c:469 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 175 174 176 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 180)
            (pc))) blake_ref.c:469 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 180)
;;  succ:       29 [28.0%]  (CAN_FALLTHRU)
;;              28 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 40 [r11]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 40 [r11]

;; basic block 28, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       27 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 40 [r11]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 40 [r11]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
(note 176 175 1273 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 1273 176 179 28 (parallel [
            (set (reg:SI 2 cx [676])
                (xor:SI (reg:SI 2 cx [orig:128 D.6034 ] [128])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:472 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 179 1273 180 28 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (reg:DI 37 r8 [orig:669 D.6033 ] [669]))
                (const_int 56 [0x38])) [0 state_4(D)->data32 S1 A8])
        (reg:QI 2 cx [676])) blake_ref.c:472 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:669 D.6033 ] [669])
        (expr_list:REG_DEAD (reg:QI 2 cx [676])
            (nil))))
;;  succ:       29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp] 38 [r9] 40 [r11]
;; live  out 	 3 [bx] 4 [si] 7 [sp] 38 [r9] 40 [r11]

;; basic block 29, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       27 [28.0%]  (CAN_FALLTHRU)
;;              28 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 38 [r9] 40 [r11]
;; lr  use 	 3 [bx] 7 [sp] 38 [r9] 40 [r11]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 38 [r9] 40 [r11]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 180 179 181 29 107 "" [1 uses])
(note 181 180 182 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(note 182 181 183 29 NOTE_INSN_DELETED)
(insn 183 182 184 29 (set (reg:SI 0 ax [orig:87 D.6031 ] [87])
        (plus:SI (plus:SI (reg:SI 38 r9 [orig:88 D.6032 ] [88])
                (reg:SI 40 r11 [664]))
            (const_int -8 [0xfffffffffffffff8]))) blake_ref.c:473 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 40 r11 [664])
        (expr_list:REG_DEAD (reg:SI 38 r9 [orig:88 D.6032 ] [88])
            (nil))))
(insn 184 183 299 29 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 448 [0x1c0])) blake_ref.c:475 90 {*movsi_internal}
     (nil))
;;  succ:       30 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

;; basic block 30, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       39 [100.0%]  (CAN_FALLTHRU)
;;              73 [100.0%]  (CAN_FALLTHRU)
;;              29 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              54 [100.0%]  (CAN_FALLTHRU)
;;              69 [100.0%]  (CAN_FALLTHRU)
;;              81 [100.0%]  (CAN_FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(code_label 299 184 300 30 108 "" [5 uses])
(note 300 299 301 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 301 300 302 30 (parallel [
            (set (reg:SI 0 ax [697])
                (plus:SI (reg:SI 0 ax [orig:87 D.6031 ] [87])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:511 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 302 301 1270 30 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 0 ax [697])) blake_ref.c:511 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [697])
        (nil)))
(insn 1270 302 304 30 (set (reg/f:DI 1 dx [698])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) 214 {*leadi}
     (nil))
(insn 304 1270 306 30 (set (reg:DI 37 r8)
        (const_int 64 [0x40])) 89 {*movdi_internal}
     (nil))
(insn 306 304 307 30 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 307 306 310 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(note 310 307 311 30 NOTE_INSN_DELETED)
(insn 311 310 312 30 (set (reg:SI 0 ax [orig:699 D.6032 ] [699])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 19 [0x13])) [2 state_4(D)->h32+3 S1 A8]))) blake_ref.c:515 138 {*zero_extendqisi2}
     (nil))
(insn 312 311 313 30 (set (mem:QI (reg/v/f:DI 4 si [orig:634 hashval ] [634]) [0 *hashval_6(D)+0 S1 A8])
        (reg:QI 0 ax [orig:699 D.6032 ] [699])) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:699 D.6032 ] [699])
        (nil)))
(note 313 312 314 30 NOTE_INSN_DELETED)
(insn 314 313 315 30 (set (reg:SI 0 ax [orig:701 D.6032 ] [701])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 18 [0x12])) [2 state_4(D)->h32+2 S2 A16]))) blake_ref.c:515 139 {*zero_extendhisi2}
     (nil))
(insn 315 314 316 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 1 [0x1])) [0 MEM[(BitSequence *)hashval_6(D) + 1B]+0 S1 A8])
        (reg:QI 0 ax [orig:701 D.6032 ] [701])) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:701 D.6032 ] [701])
        (nil)))
(note 316 315 1181 30 NOTE_INSN_DELETED)
(insn 1181 316 317 30 (set (reg:SI 0 ax [orig:703 D.6032 ] [703])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (nil))
(insn 317 1181 318 30 (parallel [
            (set (reg:SI 0 ax [orig:703 D.6032 ] [703])
                (lshiftrt:SI (reg:SI 0 ax [orig:703 D.6032 ] [703])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:515 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 318 317 319 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 2 [0x2])) [0 MEM[(BitSequence *)hashval_6(D) + 2B]+0 S1 A8])
        (reg:QI 0 ax [orig:703 D.6032 ] [703])) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:703 D.6032 ] [703])
        (nil)))
(insn 319 318 320 30 (set (reg:SI 0 ax [orig:705 state_4(D)->h32 ] [705])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])) blake_ref.c:515 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 16 [0x10])) [2 state_4(D)->h32+0 S4 A64])
        (nil)))
(insn 320 319 321 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 3 [0x3])) [0 MEM[(BitSequence *)hashval_6(D) + 3B]+0 S1 A8])
        (reg:QI 0 ax [orig:705 state_4(D)->h32 ] [705])) blake_ref.c:515 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:705 state_4(D)->h32 ] [705])
        (nil)))
(note 321 320 322 30 NOTE_INSN_DELETED)
(insn 322 321 323 30 (set (reg:SI 0 ax [orig:706 D.6032 ] [706])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 23 [0x17])) [2 state_4(D)->h32+7 S1 A8]))) blake_ref.c:516 138 {*zero_extendqisi2}
     (nil))
(insn 323 322 324 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 4 [0x4])) [0 MEM[(BitSequence *)hashval_6(D) + 4B]+0 S1 A8])
        (reg:QI 0 ax [orig:706 D.6032 ] [706])) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:706 D.6032 ] [706])
        (nil)))
(note 324 323 325 30 NOTE_INSN_DELETED)
(insn 325 324 326 30 (set (reg:SI 0 ax [orig:708 D.6032 ] [708])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 22 [0x16])) [2 state_4(D)->h32+6 S2 A16]))) blake_ref.c:516 139 {*zero_extendhisi2}
     (nil))
(insn 326 325 327 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 5 [0x5])) [0 MEM[(BitSequence *)hashval_6(D) + 5B]+0 S1 A8])
        (reg:QI 0 ax [orig:708 D.6032 ] [708])) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:708 D.6032 ] [708])
        (nil)))
(note 327 326 1183 30 NOTE_INSN_DELETED)
(insn 1183 327 328 30 (set (reg:SI 0 ax [orig:710 D.6032 ] [710])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (nil))
(insn 328 1183 329 30 (parallel [
            (set (reg:SI 0 ax [orig:710 D.6032 ] [710])
                (lshiftrt:SI (reg:SI 0 ax [orig:710 D.6032 ] [710])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:516 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
                (const_int 8 [0x8]))
            (nil))))
(insn 329 328 330 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 6 [0x6])) [0 MEM[(BitSequence *)hashval_6(D) + 6B]+0 S1 A8])
        (reg:QI 0 ax [orig:710 D.6032 ] [710])) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:710 D.6032 ] [710])
        (nil)))
(insn 330 329 331 30 (set (reg:SI 0 ax [orig:712 state_4(D)->h32+4 ] [712])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])) blake_ref.c:516 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 20 [0x14])) [2 state_4(D)->h32+4 S4 A32])
        (nil)))
(insn 331 330 332 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 7 [0x7])) [0 MEM[(BitSequence *)hashval_6(D) + 7B]+0 S1 A8])
        (reg:QI 0 ax [orig:712 state_4(D)->h32+4 ] [712])) blake_ref.c:516 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:712 state_4(D)->h32+4 ] [712])
        (nil)))
(note 332 331 333 30 NOTE_INSN_DELETED)
(insn 333 332 334 30 (set (reg:SI 0 ax [orig:713 D.6032 ] [713])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 27 [0x1b])) [2 state_4(D)->h32+11 S1 A8]))) blake_ref.c:517 138 {*zero_extendqisi2}
     (nil))
(insn 334 333 335 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 8 [0x8])) [0 MEM[(BitSequence *)hashval_6(D) + 8B]+0 S1 A8])
        (reg:QI 0 ax [orig:713 D.6032 ] [713])) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:713 D.6032 ] [713])
        (nil)))
(note 335 334 336 30 NOTE_INSN_DELETED)
(insn 336 335 337 30 (set (reg:SI 0 ax [orig:715 D.6032 ] [715])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 26 [0x1a])) [2 state_4(D)->h32+10 S2 A16]))) blake_ref.c:517 139 {*zero_extendhisi2}
     (nil))
(insn 337 336 338 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 9 [0x9])) [0 MEM[(BitSequence *)hashval_6(D) + 9B]+0 S1 A8])
        (reg:QI 0 ax [orig:715 D.6032 ] [715])) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:715 D.6032 ] [715])
        (nil)))
(note 338 337 1185 30 NOTE_INSN_DELETED)
(insn 1185 338 339 30 (set (reg:SI 0 ax [orig:717 D.6032 ] [717])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (nil))
(insn 339 1185 340 30 (parallel [
            (set (reg:SI 0 ax [orig:717 D.6032 ] [717])
                (lshiftrt:SI (reg:SI 0 ax [orig:717 D.6032 ] [717])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:517 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 340 339 341 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 10 [0xa])) [0 MEM[(BitSequence *)hashval_6(D) + 10B]+0 S1 A8])
        (reg:QI 0 ax [orig:717 D.6032 ] [717])) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:717 D.6032 ] [717])
        (nil)))
(insn 341 340 342 30 (set (reg:SI 0 ax [orig:719 state_4(D)->h32+8 ] [719])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])) blake_ref.c:517 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 24 [0x18])) [2 state_4(D)->h32+8 S4 A64])
        (nil)))
(insn 342 341 343 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 11 [0xb])) [0 MEM[(BitSequence *)hashval_6(D) + 11B]+0 S1 A8])
        (reg:QI 0 ax [orig:719 state_4(D)->h32+8 ] [719])) blake_ref.c:517 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:719 state_4(D)->h32+8 ] [719])
        (nil)))
(note 343 342 344 30 NOTE_INSN_DELETED)
(insn 344 343 345 30 (set (reg:SI 0 ax [orig:720 D.6032 ] [720])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 31 [0x1f])) [2 state_4(D)->h32+15 S1 A8]))) blake_ref.c:518 138 {*zero_extendqisi2}
     (nil))
(insn 345 344 346 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 12 [0xc])) [0 MEM[(BitSequence *)hashval_6(D) + 12B]+0 S1 A8])
        (reg:QI 0 ax [orig:720 D.6032 ] [720])) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:720 D.6032 ] [720])
        (nil)))
(note 346 345 347 30 NOTE_INSN_DELETED)
(insn 347 346 348 30 (set (reg:SI 0 ax [orig:722 D.6032 ] [722])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 30 [0x1e])) [2 state_4(D)->h32+14 S2 A16]))) blake_ref.c:518 139 {*zero_extendhisi2}
     (nil))
(insn 348 347 349 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 13 [0xd])) [0 MEM[(BitSequence *)hashval_6(D) + 13B]+0 S1 A8])
        (reg:QI 0 ax [orig:722 D.6032 ] [722])) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:722 D.6032 ] [722])
        (nil)))
(note 349 348 1187 30 NOTE_INSN_DELETED)
(insn 1187 349 350 30 (set (reg:SI 0 ax [orig:724 D.6032 ] [724])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (nil))
(insn 350 1187 351 30 (parallel [
            (set (reg:SI 0 ax [orig:724 D.6032 ] [724])
                (lshiftrt:SI (reg:SI 0 ax [orig:724 D.6032 ] [724])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:518 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
                (const_int 8 [0x8]))
            (nil))))
(insn 351 350 352 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 14 [0xe])) [0 MEM[(BitSequence *)hashval_6(D) + 14B]+0 S1 A8])
        (reg:QI 0 ax [orig:724 D.6032 ] [724])) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:724 D.6032 ] [724])
        (nil)))
(insn 352 351 353 30 (set (reg:SI 0 ax [orig:726 state_4(D)->h32+12 ] [726])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])) blake_ref.c:518 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 28 [0x1c])) [2 state_4(D)->h32+12 S4 A32])
        (nil)))
(insn 353 352 354 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 15 [0xf])) [0 MEM[(BitSequence *)hashval_6(D) + 15B]+0 S1 A8])
        (reg:QI 0 ax [orig:726 state_4(D)->h32+12 ] [726])) blake_ref.c:518 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:726 state_4(D)->h32+12 ] [726])
        (nil)))
(note 354 353 355 30 NOTE_INSN_DELETED)
(insn 355 354 356 30 (set (reg:SI 0 ax [orig:727 D.6032 ] [727])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 35 [0x23])) [2 state_4(D)->h32+19 S1 A8]))) blake_ref.c:519 138 {*zero_extendqisi2}
     (nil))
(insn 356 355 357 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 16 [0x10])) [0 MEM[(BitSequence *)hashval_6(D) + 16B]+0 S1 A8])
        (reg:QI 0 ax [orig:727 D.6032 ] [727])) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:727 D.6032 ] [727])
        (nil)))
(note 357 356 358 30 NOTE_INSN_DELETED)
(insn 358 357 359 30 (set (reg:SI 0 ax [orig:729 D.6032 ] [729])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 34 [0x22])) [2 state_4(D)->h32+18 S2 A16]))) blake_ref.c:519 139 {*zero_extendhisi2}
     (nil))
(insn 359 358 360 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 17 [0x11])) [0 MEM[(BitSequence *)hashval_6(D) + 17B]+0 S1 A8])
        (reg:QI 0 ax [orig:729 D.6032 ] [729])) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:729 D.6032 ] [729])
        (nil)))
(note 360 359 1189 30 NOTE_INSN_DELETED)
(insn 1189 360 361 30 (set (reg:SI 0 ax [orig:731 D.6032 ] [731])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (nil))
(insn 361 1189 362 30 (parallel [
            (set (reg:SI 0 ax [orig:731 D.6032 ] [731])
                (lshiftrt:SI (reg:SI 0 ax [orig:731 D.6032 ] [731])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:519 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 362 361 363 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 18 [0x12])) [0 MEM[(BitSequence *)hashval_6(D) + 18B]+0 S1 A8])
        (reg:QI 0 ax [orig:731 D.6032 ] [731])) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:731 D.6032 ] [731])
        (nil)))
(insn 363 362 364 30 (set (reg:SI 0 ax [orig:733 state_4(D)->h32+16 ] [733])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])) blake_ref.c:519 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 32 [0x20])) [2 state_4(D)->h32+16 S4 A64])
        (nil)))
(insn 364 363 365 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 19 [0x13])) [0 MEM[(BitSequence *)hashval_6(D) + 19B]+0 S1 A8])
        (reg:QI 0 ax [orig:733 state_4(D)->h32+16 ] [733])) blake_ref.c:519 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:733 state_4(D)->h32+16 ] [733])
        (nil)))
(note 365 364 366 30 NOTE_INSN_DELETED)
(insn 366 365 367 30 (set (reg:SI 0 ax [orig:734 D.6032 ] [734])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 39 [0x27])) [2 state_4(D)->h32+23 S1 A8]))) blake_ref.c:520 138 {*zero_extendqisi2}
     (nil))
(insn 367 366 368 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 20 [0x14])) [0 MEM[(BitSequence *)hashval_6(D) + 20B]+0 S1 A8])
        (reg:QI 0 ax [orig:734 D.6032 ] [734])) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:734 D.6032 ] [734])
        (nil)))
(note 368 367 369 30 NOTE_INSN_DELETED)
(insn 369 368 370 30 (set (reg:SI 0 ax [orig:736 D.6032 ] [736])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 38 [0x26])) [2 state_4(D)->h32+22 S2 A16]))) blake_ref.c:520 139 {*zero_extendhisi2}
     (nil))
(insn 370 369 371 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 21 [0x15])) [0 MEM[(BitSequence *)hashval_6(D) + 21B]+0 S1 A8])
        (reg:QI 0 ax [orig:736 D.6032 ] [736])) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:736 D.6032 ] [736])
        (nil)))
(note 371 370 1191 30 NOTE_INSN_DELETED)
(insn 1191 371 372 30 (set (reg:SI 0 ax [orig:738 D.6032 ] [738])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (nil))
(insn 372 1191 373 30 (parallel [
            (set (reg:SI 0 ax [orig:738 D.6032 ] [738])
                (lshiftrt:SI (reg:SI 0 ax [orig:738 D.6032 ] [738])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:520 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
                (const_int 8 [0x8]))
            (nil))))
(insn 373 372 374 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 22 [0x16])) [0 MEM[(BitSequence *)hashval_6(D) + 22B]+0 S1 A8])
        (reg:QI 0 ax [orig:738 D.6032 ] [738])) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:738 D.6032 ] [738])
        (nil)))
(insn 374 373 375 30 (set (reg:SI 0 ax [orig:740 state_4(D)->h32+20 ] [740])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])) blake_ref.c:520 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 36 [0x24])) [2 state_4(D)->h32+20 S4 A32])
        (nil)))
(insn 375 374 376 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 23 [0x17])) [0 MEM[(BitSequence *)hashval_6(D) + 23B]+0 S1 A8])
        (reg:QI 0 ax [orig:740 state_4(D)->h32+20 ] [740])) blake_ref.c:520 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:740 state_4(D)->h32+20 ] [740])
        (nil)))
(note 376 375 377 30 NOTE_INSN_DELETED)
(insn 377 376 378 30 (set (reg:SI 0 ax [orig:741 D.6032 ] [741])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 43 [0x2b])) [2 state_4(D)->h32+27 S1 A8]))) blake_ref.c:521 138 {*zero_extendqisi2}
     (nil))
(insn 378 377 379 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 24 [0x18])) [0 MEM[(BitSequence *)hashval_6(D) + 24B]+0 S1 A8])
        (reg:QI 0 ax [orig:741 D.6032 ] [741])) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:741 D.6032 ] [741])
        (nil)))
(note 379 378 380 30 NOTE_INSN_DELETED)
(insn 380 379 381 30 (set (reg:SI 0 ax [orig:743 D.6032 ] [743])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 42 [0x2a])) [2 state_4(D)->h32+26 S2 A16]))) blake_ref.c:521 139 {*zero_extendhisi2}
     (nil))
(insn 381 380 382 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 25 [0x19])) [0 MEM[(BitSequence *)hashval_6(D) + 25B]+0 S1 A8])
        (reg:QI 0 ax [orig:743 D.6032 ] [743])) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:743 D.6032 ] [743])
        (nil)))
(note 382 381 1193 30 NOTE_INSN_DELETED)
(insn 1193 382 383 30 (set (reg:SI 0 ax [orig:745 D.6032 ] [745])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (nil))
(insn 383 1193 384 30 (parallel [
            (set (reg:SI 0 ax [orig:745 D.6032 ] [745])
                (lshiftrt:SI (reg:SI 0 ax [orig:745 D.6032 ] [745])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:521 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
                (const_int 8 [0x8]))
            (nil))))
(insn 384 383 385 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 26 [0x1a])) [0 MEM[(BitSequence *)hashval_6(D) + 26B]+0 S1 A8])
        (reg:QI 0 ax [orig:745 D.6032 ] [745])) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:745 D.6032 ] [745])
        (nil)))
(insn 385 384 386 30 (set (reg:SI 0 ax [orig:747 state_4(D)->h32+24 ] [747])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])) blake_ref.c:521 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 40 [0x28])) [2 state_4(D)->h32+24 S4 A64])
        (nil)))
(insn 386 385 387 30 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 27 [0x1b])) [0 MEM[(BitSequence *)hashval_6(D) + 27B]+0 S1 A8])
        (reg:QI 0 ax [orig:747 state_4(D)->h32+24 ] [747])) blake_ref.c:521 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:747 state_4(D)->h32+24 ] [747])
        (nil)))
(insn 387 386 388 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 256 [0x100]))) blake_ref.c:523 7 {*cmpsi_1}
     (nil))
(jump_insn 388 387 389 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1058)
            (pc))) blake_ref.c:523 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6218 (nil)))
 -> 1058)
;;  succ:       31 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;;              32 [62.2%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 31, loop depth 0, count 0, freq 1475, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       30 [37.8%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 389 388 390 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(note 390 389 391 31 NOTE_INSN_DELETED)
(insn 391 390 392 31 (set (reg:SI 0 ax [orig:748 D.6032 ] [748])
        (zero_extend:SI (mem:QI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 47 [0x2f])) [2 state_4(D)->h32+31 S1 A8]))) blake_ref.c:524 138 {*zero_extendqisi2}
     (nil))
(insn 392 391 393 31 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 28 [0x1c])) [0 MEM[(BitSequence *)hashval_6(D) + 28B]+0 S1 A8])
        (reg:QI 0 ax [orig:748 D.6032 ] [748])) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:748 D.6032 ] [748])
        (nil)))
(note 393 392 394 31 NOTE_INSN_DELETED)
(insn 394 393 395 31 (set (reg:SI 0 ax [orig:750 D.6032 ] [750])
        (zero_extend:SI (mem:HI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 46 [0x2e])) [2 state_4(D)->h32+30 S2 A16]))) blake_ref.c:524 139 {*zero_extendhisi2}
     (nil))
(insn 395 394 396 31 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 29 [0x1d])) [0 MEM[(BitSequence *)hashval_6(D) + 29B]+0 S1 A8])
        (reg:QI 0 ax [orig:750 D.6032 ] [750])) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:750 D.6032 ] [750])
        (nil)))
(note 396 395 1195 31 NOTE_INSN_DELETED)
(insn 1195 396 397 31 (set (reg:SI 0 ax [orig:752 D.6032 ] [752])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (nil))
(insn 397 1195 398 31 (parallel [
            (set (reg:SI 0 ax [orig:752 D.6032 ] [752])
                (lshiftrt:SI (reg:SI 0 ax [orig:752 D.6032 ] [752])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:524 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (lshiftrt:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])
                (const_int 8 [0x8]))
            (nil))))
(insn 398 397 399 31 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 30 [0x1e])) [0 MEM[(BitSequence *)hashval_6(D) + 30B]+0 S1 A8])
        (reg:QI 0 ax [orig:752 D.6032 ] [752])) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:752 D.6032 ] [752])
        (nil)))
(insn 399 398 400 31 (set (reg:SI 0 ax [orig:754 state_4(D)->h32+28 ] [754])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 44 [0x2c])) [2 state_4(D)->h32+28 S4 A32])) blake_ref.c:524 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:633 state ] [633])
        (nil)))
(insn 400 399 1058 31 (set (mem:QI (plus:DI (reg/v/f:DI 4 si [orig:634 hashval ] [634])
                (const_int 31 [0x1f])) [0 MEM[(BitSequence *)hashval_6(D) + 31B]+0 S1 A8])
        (reg:QI 0 ax [orig:754 state_4(D)->h32+28 ] [754])) blake_ref.c:524 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:634 hashval ] [634])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:754 state_4(D)->h32+28 ] [754])
            (nil))))
;;  succ:       32 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 32, loop depth 0, count 0, freq 7693, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              30 [62.2%]  (CAN_FALLTHRU)
;;              23 [62.2%]  (CAN_FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 1058 400 1017 32 160 "" [2 uses])
(note 1017 1058 1371 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 1371 1017 1016 32 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:659 83 {*movdi_xor}
     (nil))
(insn 1016 1371 1293 32 (use (reg/i:SI 0 ax)) blake_ref.c:659 -1
     (nil))
(note 1293 1016 1294 32 NOTE_INSN_EPILOGUE_BEG)
(insn 1294 1293 1295 32 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:659 677 {blockage}
     (nil))
(insn/f 1295 1294 1296 32 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:659 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 72 [0x48])))
            (nil))))
(insn/f 1296 1295 1297 32 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 1297 1296 1298 32 (set (reg:DI 4 si)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 4 si)
            (nil))))
(insn/f 1298 1297 1299 32 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(insn/f 1299 1298 1300 32 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:659 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(jump_insn 1300 1299 1301 32 (simple_return) blake_ref.c:659 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp]

(barrier 1301 1300 1395)
;; basic block 33, loop depth 0, count 0, freq 1950, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       25 [50.0%]  (CAN_FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1395 1301 43 33 185 "" [1 uses])
(note 43 1395 44 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 440 [0x1b8]))) blake_ref.c:426 7 {*cmpsi_1}
     (nil))
(jump_insn 45 44 71 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1396)
            (pc))) blake_ref.c:426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1396)
;;  succ:       68 [28.0%]  (CAN_FALLTHRU)
;;              34 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]

;; basic block 34, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       33 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 71 45 72 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 439 [0x1b7]))) blake_ref.c:435 7 {*cmpsi_1}
     (nil))
(jump_insn 73 72 74 34 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) blake_ref.c:435 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 81)
;;  succ:       35 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              64 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 35, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       34 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 74 73 75 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 0 [0]))) blake_ref.c:437 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 76 75 986 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1397)
            (pc))) blake_ref.c:437 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1397)
;;  succ:       71 [50.0%]  (CAN_FALLTHRU)
;;              36 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 36, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       35 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              71 [100.0%]  (CAN_FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 986 76 987 36 100 "" [1 uses])
(note 987 986 988 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 988 987 989 36 (parallel [
            (set (reg:SI 1 dx [983])
                (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:440 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 989 988 990 36 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [983])) blake_ref.c:440 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [983])
        (nil)))
(insn 990 989 991 36 (set (reg:SI 37 r8 [985])
        (const_int 440 [0x1b8])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 440 [0x1b8])
        (nil)))
(insn 991 990 992 36 (parallel [
            (set (reg:SI 37 r8 [orig:984 D.6033 ] [984])
                (minus:SI (reg:SI 37 r8 [985])
                    (reg:SI 0 ax [orig:89 D.6033 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 D.6033 ] [89])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (const_int 440 [0x1b8])
                    (reg:SI 0 ax [orig:89 D.6033 ] [89]))
                (nil)))))
(note 992 991 993 36 NOTE_INSN_DELETED)
(insn 993 992 994 36 (set (reg:DI 37 r8)
        (sign_extend:DI (reg:SI 37 r8 [orig:984 D.6033 ] [984]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 994 993 995 36 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 995 994 996 36 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 996 995 997 36 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       37 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 37, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       36 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              66 [100.0%]  (CAN_FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 997 996 112 37 144 "" [1 uses])
(note 112 997 113 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])
            (const_int 224 [0xe0]))) blake_ref.c:451 7 {*cmpsi_1}
     (nil))
(jump_insn 114 113 124 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1398)
            (pc))) blake_ref.c:451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1398)
;;  succ:       75 [28.0%]  (CAN_FALLTHRU)
;;              38 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 38, loop depth 0, count 0, freq 1011, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       37 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 124 114 1279 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 1279 124 126 38 (set (reg/f:DI 1 dx [653])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 45 [0x2d]))) 214 {*leadi}
     (nil))
(insn 126 1279 128 38 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 128 126 129 38 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 129 128 130 38 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
;;  succ:       39 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 39, loop depth 0, count 0, freq 1404, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       38 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              75 [100.0%]  (CAN_FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 130 129 131 39 104 "" [1 uses])
(note 131 130 132 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(note 132 131 1175 39 NOTE_INSN_DELETED)
(insn 1175 132 133 39 (set (reg:SI 0 ax [1003])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) blake_ref.c:455 90 {*movsi_internal}
     (nil))
(insn 133 1175 1399 39 (parallel [
            (set (reg:SI 0 ax [orig:115 D.6032 ] [115])
                (plus:SI (reg:SI 0 ax [1003])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:455 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(jump_insn 1399 133 1400 39 (set (pc)
        (label_ref 299)) -1
     (nil)
 -> 299)
;;  succ:       30 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1400 1399 1394)
;; basic block 40, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [50.0%]  (CAN_FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 39 [r10]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1394 1400 615 40 184 "" [1 uses])
(note 615 1394 616 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 616 615 617 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 384 [0x180]))) blake_ref.c:592 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 617 616 618 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 622)
            (pc))) blake_ref.c:592 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 622)
;;  succ:       42 [28.0%]  (CAN_FALLTHRU)
;;              41 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8]

;; basic block 41, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       40 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8]
;; live  gen 	 2 [cx]
;; live  kill	 17 [flags]
(note 618 617 1257 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 1257 618 621 41 (parallel [
            (set (reg:SI 2 cx [803])
                (xor:SI (reg:SI 2 cx [orig:305 D.6034 ] [305])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:595 400 {*xorsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 621 1257 622 41 (set (mem/j:QI (plus:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (reg:DI 37 r8 [orig:794 D.6033 ] [794]))
                (const_int 216 [0xd8])) [0 state_4(D)->data64 S1 A8])
        (reg:QI 2 cx [803])) blake_ref.c:595 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [orig:794 D.6033 ] [794])
        (expr_list:REG_DEAD (reg:QI 2 cx [803])
            (nil))))
;;  succ:       42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]

;; basic block 42, loop depth 0, count 0, freq 1525, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       40 [28.0%]  (CAN_FALLTHRU)
;;              41 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 6 [bp]
;; live  kill	 17 [flags]
(code_label 622 621 623 42 133 "" [1 uses])
(note 623 622 624 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 42 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 896 [0x380])) blake_ref.c:598 90 {*movsi_internal}
     (nil))
(insn 625 624 626 42 (set (reg:DI 6 bp [orig:804 D.6036 ] [804])
        (sign_extend:DI (reg:SI 6 bp [orig:298 D.6033 ] [298]))) blake_ref.c:634 142 {*extendsidi2_rex64}
     (nil))
(insn 626 625 627 42 (parallel [
            (set (reg:DI 0 ax [orig:805 D.6036 ] [805])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 6 bp [orig:804 D.6036 ] [804])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:804 D.6036 ] [804])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 627 626 628 42 (parallel [
            (set (reg:DI 0 ax [806])
                (plus:DI (reg:DI 0 ax [orig:805 D.6036 ] [805])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:634 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 628 627 578 42 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [806])) blake_ref.c:634 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [806])
        (nil)))
;;  succ:       43 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 43, loop depth 0, count 0, freq 3050, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (CAN_FALLTHRU)
;;              42 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              21 (CAN_FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 578 628 579 43 130 "" [2 uses])
(note 579 578 1262 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 1262 579 581 43 (set (reg/f:DI 1 dx [784])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) 214 {*leadi}
     (nil))
(insn 581 1262 583 43 (set (reg:DI 37 r8)
        (const_int 128 [0x80])) 89 {*movdi_internal}
     (nil))
(insn 583 581 584 43 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 584 583 1401 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(jump_insn 1401 584 1402 43 (set (pc)
        (label_ref 766)) -1
     (nil)
 -> 766)
;;  succ:       23 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1402 1401 1389)
;; basic block 44, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (CAN_FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1389 1402 491 44 182 "" [1 uses])
(note 491 1389 492 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 0 [0]))) blake_ref.c:560 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 493 492 494 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) blake_ref.c:560 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1000)
;;  succ:       45 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              46 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 45, loop depth 0, count 0, freq 549, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       44 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	
;; live  kill	
(note 494 493 495 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 1000 45 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:561 90 {*movsi_internal}
     (nil))
;;  succ:       46 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 46, loop depth 0, count 0, freq 1098, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       44 [50.0%]  (CAN_FALLTHRU)
;;              45 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 1000 495 1001 46 124 "" [1 uses])
(note 1001 1000 1002 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 1002 1001 1003 46 (set (reg:SI 37 r8 [988])
        (const_int 888 [0x378])) blake_ref.c:563 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 888 [0x378])
        (nil)))
(insn 1003 1002 1004 46 (parallel [
            (set (reg:SI 37 r8 [orig:987 D.6033 ] [987])
                (minus:SI (reg:SI 37 r8 [988])
                    (reg:SI 1 dx [orig:242 D.6033 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:563 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:242 D.6033 ] [242])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1004 1003 1005 46 (set (reg:DI 37 r8 [orig:603 D.6036 ] [603])
        (sign_extend:DI (reg:SI 37 r8 [orig:987 D.6033 ] [987]))) blake_ref.c:563 142 {*extendsidi2_rex64}
     (nil))
(insn 1005 1004 1006 46 (parallel [
            (set (reg:DI 0 ax [989])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 37 r8 [orig:603 D.6036 ] [603])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:563 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 1006 1005 1008 46 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [989])) blake_ref.c:563 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [989])
        (nil)))
(insn 1008 1006 1009 46 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 46 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 1010 1009 1403 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(jump_insn 1403 1010 1404 46 (set (pc)
        (label_ref 1011)) -1
     (nil)
 -> 1011)
;;  succ:       9 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1404 1403 187)
;; basic block 47, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       26 [50.0%]  (CAN_FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 187 1404 188 47 106 "" [1 uses])
(note 188 187 189 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 439 [0x1b7]))) blake_ref.c:478 7 {*cmpsi_1}
     (nil))
(jump_insn 190 189 219 47 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1405)
            (pc))) blake_ref.c:478 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 1405)
;;  succ:       78 [29.0%]  (CAN_FALLTHRU)
;;              48 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 48, loop depth 0, count 0, freq 692, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       47 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(note 219 190 223 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 223 219 224 48 (parallel [
            (set (reg:SI 1 dx [685])
                (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:487 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 224 223 220 48 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [685])) blake_ref.c:487 90 {*movsi_internal}
     (nil))
(insn 220 224 221 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 504 [0x1f8]))) blake_ref.c:485 7 {*cmpsi_1}
     (nil))
(jump_insn 221 220 241 48 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1406)
            (pc))) blake_ref.c:485 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 1406)
;;  succ:       72 [29.0%]  (CAN_FALLTHRU)
;;              49 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 49, loop depth 0, count 0, freq 491, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 241 221 244 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 244 241 245 49 (parallel [
            (set (reg:SI 0 ax [orig:686 D.6035 ] [686])
                (and:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:498 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 245 244 246 49 (parallel [
            (set (reg:SI 0 ax [orig:146 D.6033 ] [146])
                (plus:SI (reg:SI 0 ax [orig:686 D.6035 ] [686])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:498 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 246 245 247 49 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 0 ax [orig:146 D.6033 ] [146])) blake_ref.c:498 90 {*movsi_internal}
     (nil))
(insn 247 246 248 49 (set (reg:SI 37 r8 [688])
        (const_int 512 [0x200])) blake_ref.c:499 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 512 [0x200])
        (nil)))
(insn 248 247 249 49 (parallel [
            (set (reg:SI 37 r8 [orig:687 D.6033 ] [687])
                (minus:SI (reg:SI 37 r8 [688])
                    (reg:SI 0 ax [orig:146 D.6033 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:499 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 512 [0x200])
                (reg:SI 0 ax [orig:146 D.6033 ] [146]))
            (nil))))
(insn 249 248 250 49 (set (reg:DI 37 r8 [orig:148 D.6036 ] [148])
        (sign_extend:DI (reg:SI 37 r8 [orig:687 D.6033 ] [687]))) blake_ref.c:499 142 {*extendsidi2_rex64}
     (nil))
(note 250 249 251 49 NOTE_INSN_DELETED)
(note 251 250 252 49 NOTE_INSN_DELETED)
(insn 252 251 253 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:146 D.6033 ] [146])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:146 D.6033 ] [146])
        (nil)))
(jump_insn 253 252 1022 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1032)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1032)
;;  succ:       82 [14.0%]  (CAN_FALLTHRU)
;;              50 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 50, loop depth 0, count 0, freq 422, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       49 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1022 253 254 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(note 254 1022 255 50 NOTE_INSN_DELETED)
(note 255 254 256 50 NOTE_INSN_DELETED)
(insn 256 255 257 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:148 D.6036 ] [148])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 257 256 265 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1032)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 1032)
;;  succ:       51 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              82 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 51, loop depth 0, count 0, freq 491, maybe hot
;; Invalid sum of incoming frequencies 593, should be 491
;;  prev block 50, next block 52, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       50 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              82 [100.0%]  (CAN_FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx]
;; live  kill	 17 [flags]
(code_label 265 257 266 51 113 "" [1 uses])
(note 266 265 267 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 51 (parallel [
            (set (reg:SI 1 dx [693])
                (plus:SI (reg:SI 1 dx [orig:143 D.6032 ] [143])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:500 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 268 267 1304 51 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [693])) blake_ref.c:500 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [693])
        (nil)))
;;  succ:       52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 52, loop depth 0, count 0, freq 692, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       51 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              72 [100.0%]  (CAN_FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 39 [r10]
;; live  kill	
(code_label 1304 268 1302 52 177 "" [1 uses])
(note 1302 1304 269 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 269 1302 270 52 (set (reg:DI 37 r8)
        (const_int 440 [0x1b8])) 89 {*movdi_internal}
     (nil))
(insn 270 269 271 52 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 271 270 272 52 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 272 271 273 52 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 273 272 274 52 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:502 90 {*movsi_internal}
     (nil))
(insn 274 273 275 52 (set (reg:SI 1 dx [orig:609 D.6031 ] [609])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 275 274 276 52 (set (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
;;  succ:       53 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

;; basic block 53, loop depth 0, count 0, freq 975, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       79 [83.7%]  (CAN_FALLTHRU)
;;              52 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              80 [100.0%]  (CAN_FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 39 [r10]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 276 275 277 53 110 "" [2 uses])
(note 277 276 278 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 53 (parallel [
            (set (reg:SI 1 dx [694])
                (plus:SI (reg:SI 1 dx [orig:609 D.6031 ] [609])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:505 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 279 278 280 53 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [694])) blake_ref.c:505 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [694])
        (nil)))
(insn 280 279 281 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 224 [0xe0]))) blake_ref.c:506 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 281 280 292 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1407)
            (pc))) blake_ref.c:506 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1407)
;;  succ:       81 [28.0%]  (CAN_FALLTHRU)
;;              54 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 54, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 292 281 1271 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 1271 292 294 54 (set (reg/f:DI 1 dx [696])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 45 [0x2d]))) 214 {*leadi}
     (nil))
(insn 294 1271 296 54 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 296 294 297 54 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 297 296 298 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 298 297 1408 54 (set (reg:SI 0 ax [orig:87 D.6031 ] [87])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1408 298 1409 54 (set (pc)
        (label_ref 299)) -1
     (nil)
 -> 299)
;;  succ:       30 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1409 1408 1388)
;; basic block 55, loop depth 0, count 0, freq 854, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [28.0%]  (CAN_FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 39 [r10]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1388 1409 463 55 181 "" [1 uses])
(note 463 1388 464 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 55 (parallel [
            (set (reg:DI 0 ax [768])
                (plus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:551 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 465 464 466 55 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [768])) blake_ref.c:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [768])
        (nil)))
(insn 466 465 467 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 384 [0x180]))) blake_ref.c:552 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 467 466 478 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1410)
            (pc))) blake_ref.c:552 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1410)
;;  succ:       83 [28.0%]  (CAN_FALLTHRU)
;;              56 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 56, loop depth 0, count 0, freq 615, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       55 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 478 467 1267 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1267 478 480 56 (set (reg/f:DI 1 dx [770])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 47 [0x2f]))) 214 {*leadi}
     (nil))
(insn 480 1267 482 56 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 482 480 483 56 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 483 482 484 56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 484 483 1411 56 (set (reg:DI 0 ax [orig:292 D.6036 ] [292])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 1411 484 1412 56 (set (pc)
        (label_ref 564)) -1
     (nil)
 -> 564)
;;  succ:       13 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1412 1411 553)
;; basic block 57, loop depth 0, count 0, freq 791, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (CAN_FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 553 1412 554 57 129 "" [1 uses])
(note 554 553 559 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(call_insn 559 554 1413 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(jump_insn 1413 559 1414 57 (set (pc)
        (label_ref 560)) -1
     (nil)
 -> 560)
;;  succ:       12 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1414 1413 665)
;; basic block 58, loop depth 0, count 0, freq 762, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [50.0%]  (CAN_FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 665 1414 666 58 134 "" [1 uses])
(note 666 665 667 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 667 666 668 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:242 D.6033 ] [242])
            (const_int 1016 [0x3f8]))) blake_ref.c:608 7 {*cmpsi_1}
     (nil))
(jump_insn 668 667 693 58 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1415)
            (pc))) blake_ref.c:608 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 2900 (nil)))
 -> 1415)
;;  succ:       62 [29.0%]  (CAN_FALLTHRU)
;;              59 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 59, loop depth 0, count 0, freq 541, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       58 [71.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 693 668 694 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 1236 59 (set (reg:SI 37 r8 [824])
        (const_int 1024 [0x400])) blake_ref.c:619 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 1024 [0x400])
        (nil)))
(insn 1236 694 695 59 (set (reg:SI 2 cx [orig:823 D.6033 ] [823])
        (reg:SI 37 r8 [824])) blake_ref.c:619 90 {*movsi_internal}
     (nil))
(insn 695 1236 696 59 (parallel [
            (set (reg:SI 2 cx [orig:823 D.6033 ] [823])
                (minus:SI (reg:SI 2 cx [orig:823 D.6033 ] [823])
                    (reg:SI 1 dx [orig:242 D.6033 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:619 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 696 695 697 59 (set (reg:DI 2 cx [orig:825 D.6036 ] [825])
        (sign_extend:DI (reg:SI 2 cx [orig:823 D.6033 ] [823]))) blake_ref.c:619 142 {*extendsidi2_rex64}
     (nil))
(insn 697 696 698 59 (parallel [
            (set (reg:DI 0 ax [orig:327 D.6036 ] [327])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 2 cx [orig:825 D.6036 ] [825])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:619 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:825 D.6036 ] [825])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 698 697 699 59 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [orig:327 D.6036 ] [327])) blake_ref.c:619 89 {*movdi_internal}
     (nil))
(insn 699 698 700 59 (parallel [
            (set (reg:SI 1 dx [orig:826 D.6035 ] [826])
                (and:SI (reg:SI 1 dx [orig:242 D.6033 ] [242])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:621 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 700 699 701 59 (parallel [
            (set (reg:SI 1 dx [orig:330 D.6033 ] [330])
                (plus:SI (reg:SI 1 dx [orig:826 D.6035 ] [826])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:621 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 701 700 703 59 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 1 dx [orig:330 D.6033 ] [330])) blake_ref.c:621 90 {*movsi_internal}
     (nil))
(insn 703 701 704 59 (parallel [
            (set (reg:SI 37 r8 [orig:827 D.6033 ] [827])
                (minus:SI (reg:SI 37 r8 [824])
                    (reg:SI 1 dx [orig:330 D.6033 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:622 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 704 703 705 59 (set (reg:DI 37 r8 [orig:332 D.6036 ] [332])
        (sign_extend:DI (reg:SI 37 r8 [orig:827 D.6033 ] [827]))) blake_ref.c:622 142 {*extendsidi2_rex64}
     (nil))
(note 705 704 706 59 NOTE_INSN_DELETED)
(note 706 705 707 59 NOTE_INSN_DELETED)
(insn 707 706 708 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:332 D.6036 ] [332])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 708 707 1028 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1035)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1035)
;;  succ:       74 [14.0%]  (CAN_FALLTHRU)
;;              60 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 60, loop depth 0, count 0, freq 465, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       59 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1028 708 709 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(note 709 1028 710 60 NOTE_INSN_DELETED)
(note 710 709 711 60 NOTE_INSN_DELETED)
(insn 711 710 712 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:330 D.6033 ] [330])
            (const_int 1024 [0x400]))) blake_ref.c:351 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:330 D.6033 ] [330])
        (nil)))
(jump_insn 712 711 720 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1035)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 1035)
;;  succ:       61 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              74 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 61, loop depth 0, count 0, freq 541, maybe hot
;; Invalid sum of incoming frequencies 654, should be 541
;;  prev block 60, next block 62, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       60 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              74 [100.0%]  (CAN_FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(code_label 720 712 721 61 138 "" [1 uses])
(note 721 720 722 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 61 (parallel [
            (set (reg:DI 0 ax [833])
                (plus:DI (reg:DI 0 ax [orig:327 D.6036 ] [327])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:623 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 723 722 1416 61 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [833])) blake_ref.c:623 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [833])
        (nil)))
(jump_insn 1416 723 1417 61 (set (pc)
        (label_ref 1312)) -1
     (nil)
 -> 1312)
;;  succ:       63 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1417 1416 1415)
;; basic block 62, loop depth 0, count 0, freq 2457, maybe hot
;; Invalid sum of incoming frequencies 221, should be 2457
;;  prev block 61, next block 63, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       58 [29.0%]  (CAN_FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
(code_label 1415 1417 669 62 193 "" [1 uses])
(note 669 1415 670 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 62 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 1024 [0x400])) blake_ref.c:611 90 {*movsi_internal}
     (nil))
(insn 671 670 672 62 (set (reg:SI 2 cx [818])
        (const_int 1024 [0x400])) blake_ref.c:362 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 1024 [0x400])
        (nil)))
(insn 672 671 1235 62 (parallel [
            (set (reg:SI 2 cx [orig:817 D.6033 ] [817])
                (minus:SI (reg:SI 2 cx [orig:817 D.6033 ] [817])
                    (reg:SI 1 dx [orig:242 D.6033 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 260 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:242 D.6033 ] [242])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1235 672 674 62 (set (reg:DI 1 dx)
        (sign_extend:DI (reg:SI 2 cx [orig:817 D.6033 ] [817]))) blake_ref.c:362 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:817 D.6033 ] [817])
        (nil)))
(insn 674 1235 675 62 (parallel [
            (set (reg:DI 0 ax [orig:820 D.6036 ] [820])
                (minus:DI (reg:DI 0 ax [orig:241 D.6036 ] [241])
                    (reg:DI 1 dx [orig:819 D.6036 ] [819])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:819 D.6036 ] [819])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 675 674 676 62 (parallel [
            (set (reg:DI 0 ax [821])
                (plus:DI (reg:DI 0 ax [orig:820 D.6036 ] [820])
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:362 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
            (nil))))
(insn 676 675 1256 62 (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
        (reg:DI 0 ax [821])) blake_ref.c:362 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [821])
        (nil)))
(insn 1256 676 679 62 (set (reg/f:DI 1 dx [orig:822 D.6040 ] [822])
        (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
            (const_int 216 [0xd8]))) blake_ref.c:359 214 {*leadi}
     (nil))
(insn 679 1256 680 62 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) blake_ref.c:364 89 {*movdi_internal}
     (nil))
(call_insn 680 679 681 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>) [0 compress64 S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("compress64") [flags 0x3]  <function_decl 0x6ffffd815f0 compress64>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(insn 681 680 682 62 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:391 90 {*movsi_internal}
     (nil))
(insn 682 681 1312 62 (parallel [
            (set (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                (plus:DI (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                            (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])
                    (const_int -888 [0xfffffffffffffc88])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:613 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       63 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 63, loop depth 0, count 0, freq 2998, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       62 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              61 [100.0%]  (CAN_FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8] 39 [r10]
;; live  kill	
(code_label 1312 682 1310 63 178 "" [1 uses])
(note 1310 1312 724 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 724 1310 725 63 (set (reg:DI 37 r8)
        (const_int 888 [0x378])) 89 {*movdi_internal}
     (nil))
(insn 725 724 726 63 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 726 725 727 63 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 727 726 728 63 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 728 727 729 63 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:625 90 {*movsi_internal}
     (nil))
(insn 729 728 730 63 (set (reg:DI 0 ax [orig:616 D.6039 ] [616])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 730 729 1418 63 (set (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1418 730 1419 63 (set (pc)
        (label_ref 731)) -1
     (nil)
 -> 731)
;;  succ:       19 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]

(barrier 1419 1418 81)
;; basic block 64, loop depth 0, count 0, freq 702, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       34 [50.0%]  (CAN_FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 1 [dx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(code_label 81 1419 82 64 99 "" [1 uses])
(note 82 81 83 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 64 (parallel [
            (set (reg:SI 1 dx [orig:109 D.6032 ] [109])
                (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                    (const_int -512 [0xfffffffffffffe00])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:445 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 64 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [orig:109 D.6032 ] [109])) blake_ref.c:445 90 {*movsi_internal}
     (nil))
(insn 85 84 86 64 (set (reg:SI 37 r8 [646])
        (const_int 512 [0x200])) blake_ref.c:446 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 512 [0x200])
        (nil)))
(insn 86 85 87 64 (parallel [
            (set (reg:SI 37 r8 [orig:645 D.6033 ] [645])
                (minus:SI (reg:SI 37 r8 [646])
                    (reg:SI 0 ax [orig:89 D.6033 ] [89])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:446 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 512 [0x200])
                (reg:SI 0 ax [orig:89 D.6033 ] [89]))
            (nil))))
(insn 87 86 88 64 (set (reg:DI 37 r8 [orig:111 D.6036 ] [111])
        (sign_extend:DI (reg:SI 37 r8 [orig:645 D.6033 ] [645]))) blake_ref.c:446 142 {*extendsidi2_rex64}
     (nil))
(note 88 87 89 64 NOTE_INSN_DELETED)
(note 89 88 90 64 NOTE_INSN_DELETED)
(insn 90 89 91 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:111 D.6036 ] [111])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 91 90 1018 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1030)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1030)
;;  succ:       77 [14.0%]  (CAN_FALLTHRU)
;;              65 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 65, loop depth 0, count 0, freq 604, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       64 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1018 91 92 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(note 92 1018 93 65 NOTE_INSN_DELETED)
(note 93 92 94 65 NOTE_INSN_DELETED)
(insn 94 93 95 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:89 D.6033 ] [89])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:89 D.6033 ] [89])
        (nil)))
(jump_insn 95 94 103 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1030)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1628 (nil)))
 -> 1030)
;;  succ:       66 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              77 [16.3%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 66, loop depth 0, count 0, freq 702, maybe hot
;; Invalid sum of incoming frequencies 849, should be 702
;;  prev block 65, next block 67, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       65 [83.7%]  (FALLTHRU,CAN_FALLTHRU)
;;              77 [100.0%]  (CAN_FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 103 95 104 66 101 "" [1 uses])
(note 104 103 105 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 66 (parallel [
            (set (reg:SI 1 dx [651])
                (plus:SI (reg:SI 1 dx [orig:109 D.6032 ] [109])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:447 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 106 105 107 66 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [651])) blake_ref.c:447 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [651])
        (nil)))
(insn 107 106 108 66 (set (reg:DI 37 r8)
        (const_int 440 [0x1b8])) 89 {*movdi_internal}
     (nil))
(insn 108 107 109 66 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 109 108 110 66 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 110 109 111 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 111 110 1420 66 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:449 90 {*movsi_internal}
     (nil))
(jump_insn 1420 111 1421 66 (set (pc)
        (label_ref 997)) -1
     (nil)
 -> 997)
;;  succ:       37 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1421 1420 1390)
;; basic block 67, loop depth 0, count 0, freq 615, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [28.0%]  (CAN_FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 1390 1421 533 67 183 "" [1 uses])
(note 533 1390 1266 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1266 533 535 67 (set (reg/f:DI 1 dx [778])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 44 [0x2c]))) 214 {*leadi}
     (nil))
(insn 535 1266 537 67 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 537 535 538 67 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 538 537 1422 67 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(jump_insn 1422 538 1423 67 (set (pc)
        (label_ref 560)) -1
     (nil)
 -> 560)
;;  succ:       12 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1423 1422 1396)
;; basic block 68, loop depth 0, count 0, freq 546, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       33 [28.0%]  (CAN_FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; lr  use 	 3 [bx] 7 [sp] 38 [r9] 39 [r10]
;; lr  def 	 17 [flags] 38 [r9]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags] 38 [r9]
;; live  kill	 17 [flags]
(code_label 1396 1423 46 68 186 "" [1 uses])
(note 46 1396 47 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 68 (parallel [
            (set (reg:SI 38 r9 [642])
                (plus:SI (reg:SI 38 r9 [orig:88 D.6032 ] [88])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:428 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                    (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
            (nil))))
(insn 48 47 49 68 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 38 r9 [642])) blake_ref.c:428 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 38 r9 [642])
        (nil)))
(insn 49 48 50 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:612 D.6033 ] [612])
            (const_int 224 [0xe0]))) blake_ref.c:429 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (nil)))
(jump_insn 50 49 61 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1424)
            (pc))) blake_ref.c:429 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 1424)
;;  succ:       73 [28.0%]  (CAN_FALLTHRU)
;;              69 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 69, loop depth 0, count 0, freq 393, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       68 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(note 61 50 1281 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1281 61 63 69 (set (reg/f:DI 1 dx [644])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 47 [0x2f]))) 214 {*leadi}
     (nil))
(insn 63 1281 65 69 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 65 63 66 69 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 66 65 67 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 67 66 1425 69 (set (reg:SI 0 ax [orig:115 D.6032 ] [115])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1425 67 1426 69 (set (pc)
        (label_ref 299)) -1
     (nil)
 -> 299)
;;  succ:       30 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1426 1425 1033)
;; basic block 70, loop depth 0, count 0, freq 537, maybe hot
;; Invalid sum of incoming frequencies 308, should be 537
;;  prev block 69, next block 71, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [16.3%]  (CAN_FALLTHRU)
;;              6 [14.0%]  (CAN_FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1033 1426 514 70 149 "" [2 uses])
(note 514 1033 516 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 516 514 517 70 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 517 516 518 70 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 518 517 519 70 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 519 518 1427 70 (set (reg:DI 0 ax [orig:288 D.6036 ] [288])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 1427 519 1428 70 (set (pc)
        (label_ref 520)) -1
     (nil)
 -> 520)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1428 1427 1397)
;; basic block 71, loop depth 0, count 0, freq 351, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       35 [50.0%]  (CAN_FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 1397 1428 77 71 187 "" [1 uses])
(note 77 1397 78 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 1429 71 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 12 [0xc])) [2 state_4(D)->nullt+0 S4 A32])
        (const_int 1 [0x1])) blake_ref.c:438 90 {*movsi_internal}
     (nil))
(jump_insn 1429 78 1430 71 (set (pc)
        (label_ref 986)) -1
     (nil)
 -> 986)
;;  succ:       36 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

(barrier 1430 1429 1406)
;; basic block 72, loop depth 0, count 0, freq 201, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 [29.0%]  (CAN_FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	 17 [flags]
(code_label 1406 1430 222 72 190 "" [1 uses])
(note 222 1406 225 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 225 222 1372 72 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (const_int 512 [0x200])) blake_ref.c:488 90 {*movsi_internal}
     (nil))
(insn 1372 225 227 72 (parallel [
            (set (reg:DI 37 r8)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) 83 {*movdi_xor}
     (nil))
(insn 227 1372 228 72 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 228 227 229 72 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 229 228 230 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 230 229 1431 72 (parallel [
            (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                        (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                (plus:SI (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                            (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:490 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 1431 230 1432 72 (set (pc)
        (label_ref 1304)) -1
     (nil)
 -> 1304)
;;  succ:       52 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1432 1431 1424)
;; basic block 73, loop depth 0, count 0, freq 153, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       68 [28.0%]  (CAN_FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 1424 1432 51 73 194 "" [1 uses])
(note 51 1424 1282 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1282 51 53 73 (set (reg/f:DI 1 dx [643])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 46 [0x2e]))) 214 {*leadi}
     (nil))
(insn 53 1282 55 73 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 55 53 56 73 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 56 55 57 73 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 57 56 1433 73 (set (reg:SI 0 ax [orig:115 D.6032 ] [115])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1433 57 1434 73 (set (pc)
        (label_ref 299)) -1
     (nil)
 -> 299)
;;  succ:       30 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1434 1433 1035)
;; basic block 74, loop depth 0, count 0, freq 265, maybe hot
;; Invalid sum of incoming frequencies 152, should be 265
;;  prev block 73, next block 75, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       60 [16.3%]  (CAN_FALLTHRU)
;;              59 [14.0%]  (CAN_FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1035 1434 714 74 151 "" [2 uses])
(note 714 1035 716 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 716 714 717 74 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 717 716 718 74 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 718 717 719 74 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 719 718 1435 74 (set (reg:DI 0 ax [orig:327 D.6036 ] [327])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 1435 719 1436 74 (set (pc)
        (label_ref 720)) -1
     (nil)
 -> 720)
;;  succ:       61 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1436 1435 1398)
;; basic block 75, loop depth 0, count 0, freq 393, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       37 [28.0%]  (CAN_FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 1398 1436 115 75 188 "" [1 uses])
(note 115 1398 1280 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1280 115 117 75 (set (reg/f:DI 1 dx [652])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 44 [0x2c]))) 214 {*leadi}
     (nil))
(insn 117 1280 119 75 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 119 117 120 75 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 120 119 1437 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(jump_insn 1437 120 1438 75 (set (pc)
        (label_ref 130)) -1
     (nil)
 -> 130)
;;  succ:       39 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1438 1437 1034)
;; basic block 76, loop depth 0, count 0, freq 373, maybe hot
;; Invalid sum of incoming frequencies 214, should be 373
;;  prev block 75, next block 77, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       18 [16.3%]  (CAN_FALLTHRU)
;;              17 [14.0%]  (CAN_FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 39 [r10]
;; live  kill	
(code_label 1034 1438 656 76 150 "" [2 uses])
(note 656 1034 658 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 658 656 659 76 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 659 658 660 76 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 660 659 661 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 661 660 662 76 (set (reg:DI 0 ax [orig:616 D.6039 ] [616])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 662 661 1439 76 (set (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1439 662 1440 76 (set (pc)
        (label_ref 731)) -1
     (nil)
 -> 731)
;;  succ:       19 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 39 [r10]

(barrier 1440 1439 1030)
;; basic block 77, loop depth 0, count 0, freq 343, maybe hot
;; Invalid sum of incoming frequencies 196, should be 343
;;  prev block 76, next block 78, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       65 [16.3%]  (CAN_FALLTHRU)
;;              64 [14.0%]  (CAN_FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1030 1440 97 77 146 "" [2 uses])
(note 97 1030 99 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 99 97 100 77 (set (reg:DI 1 dx)
        (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)) 89 {*movdi_internal}
     (nil))
(insn 100 99 101 77 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 101 100 102 77 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 102 101 1441 77 (set (reg:SI 1 dx [orig:109 D.6032 ] [109])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1441 102 1442 77 (set (pc)
        (label_ref 103)) -1
     (nil)
 -> 103)
;;  succ:       66 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

(barrier 1442 1441 1405)
;; basic block 78, loop depth 0, count 0, freq 283, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       47 [29.0%]  (CAN_FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(code_label 1405 1442 191 78 189 "" [1 uses])
(note 191 1405 192 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 78 (parallel [
            (set (reg:SI 1 dx [orig:609 D.6031 ] [609])
                (plus:SI (reg/v:SI 1 dx [orig:91 low ] [91])
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:480 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 193 192 194 78 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])
        (reg:SI 1 dx [orig:609 D.6031 ] [609])) blake_ref.c:480 90 {*movsi_internal}
     (nil))
(insn 194 193 195 78 (parallel [
            (set (reg:SI 0 ax [orig:678 D.6035 ] [678])
                (and:SI (reg:SI 0 ax [orig:89 D.6033 ] [89])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:481 381 {*andsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 195 194 196 78 (parallel [
            (set (reg:SI 0 ax [orig:137 D.6033 ] [137])
                (plus:SI (reg:SI 0 ax [orig:678 D.6035 ] [678])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:481 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 196 195 197 78 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 4 [0x4])) [2 state_4(D)->datalen+0 S4 A32])
        (reg:SI 0 ax [orig:137 D.6033 ] [137])) blake_ref.c:481 90 {*movsi_internal}
     (nil))
(insn 197 196 198 78 (set (reg:SI 37 r8 [680])
        (const_int 440 [0x1b8])) blake_ref.c:482 90 {*movsi_internal}
     (expr_list:REG_EQUIV (const_int 440 [0x1b8])
        (nil)))
(insn 198 197 199 78 (parallel [
            (set (reg:SI 37 r8 [orig:679 D.6033 ] [679])
                (minus:SI (reg:SI 37 r8 [680])
                    (reg:SI 0 ax [orig:137 D.6033 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) blake_ref.c:482 260 {*subsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (minus:SI (const_int 440 [0x1b8])
                (reg:SI 0 ax [orig:137 D.6033 ] [137]))
            (nil))))
(insn 199 198 200 78 (set (reg:DI 37 r8 [orig:139 D.6036 ] [139])
        (sign_extend:DI (reg:SI 37 r8 [orig:679 D.6033 ] [679]))) blake_ref.c:482 142 {*extendsidi2_rex64}
     (nil))
(note 200 199 201 78 NOTE_INSN_DELETED)
(note 201 200 202 78 NOTE_INSN_DELETED)
(insn 202 201 203 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 37 r8 [orig:139 D.6036 ] [139])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 203 202 1020 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1031)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1400 (nil)))
 -> 1031)
;;  succ:       80 [14.0%]  (CAN_FALLTHRU)
;;              79 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]

;; basic block 79, loop depth 0, count 0, freq 243, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       78 [86.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1020 203 204 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(note 204 1020 205 79 NOTE_INSN_DELETED)
(note 205 204 206 79 NOTE_INSN_DELETED)
(insn 206 205 207 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:137 D.6033 ] [137])
            (const_int 512 [0x200]))) blake_ref.c:295 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:137 D.6033 ] [137])
        (nil)))
(jump_insn 207 206 1031 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 276)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8372 (nil)))
 -> 276)
;;  succ:       53 [83.7%]  (CAN_FALLTHRU)
;;              80 [16.3%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 39 [r10]

;; basic block 80, loop depth 0, count 0, freq 61, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       79 [16.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              78 [14.0%]  (CAN_FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 39 [r10]
;; live  kill	
(code_label 1031 207 209 80 147 "" [1 uses])
(note 209 1031 211 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 211 209 212 80 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 212 211 213 80 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 213 212 214 80 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 214 213 215 80 (set (reg:SI 1 dx [orig:609 D.6031 ] [609])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(insn 215 214 1443 80 (set (reg:SI 39 r10 [orig:612 D.6033 ] [612])
        (mem:SI (reg/v/f:DI 3 bx [orig:633 state ] [633]) [2 state_4(D)->hashbitlen+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1443 215 1444 80 (set (pc)
        (label_ref 276)) -1
     (nil)
 -> 276)
;;  succ:       53 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp] 39 [r10]

(barrier 1444 1443 1407)
;; basic block 81, loop depth 0, count 0, freq 273, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [28.0%]  (CAN_FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 1407 1444 282 81 191 "" [1 uses])
(note 282 1407 1272 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1272 282 284 81 (set (reg/f:DI 1 dx [695])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 44 [0x2c]))) 214 {*leadi}
     (nil))
(insn 284 1272 286 81 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 286 284 287 81 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 287 286 288 81 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 288 287 1445 81 (set (reg:SI 0 ax [orig:87 D.6031 ] [87])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1445 288 1446 81 (set (pc)
        (label_ref 299)) -1
     (nil)
 -> 299)
;;  succ:       30 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1446 1445 1032)
;; basic block 82, loop depth 0, count 0, freq 240, maybe hot
;; Invalid sum of incoming frequencies 138, should be 240
;;  prev block 81, next block 83, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       50 [16.3%]  (CAN_FALLTHRU)
;;              49 [14.0%]  (CAN_FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 3 [bx] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1032 1446 259 82 148 "" [2 uses])
(note 259 1032 261 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 261 259 262 82 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("padding") [flags 0x2]  <var_decl 0x6ffffe13cc0 padding>)
                (const_int 1 [0x1])))) 89 {*movdi_internal}
     (nil))
(insn 262 261 263 82 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 263 262 264 82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 264 263 1447 82 (set (reg:SI 1 dx [orig:143 D.6032 ] [143])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 48 [0x30])) [2 state_4(D)->t32+0 S4 A64])) 90 {*movsi_internal}
     (nil))
(jump_insn 1447 264 1448 82 (set (pc)
        (label_ref 265)) -1
     (nil)
 -> 265)
;;  succ:       51 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 7 [sp]

(barrier 1448 1447 1410)
;; basic block 83, loop depth 0, count 0, freq 239, maybe hot
;;  prev block 82, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       55 [28.0%]  (CAN_FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 37 [r8]
;; live  kill	
(code_label 1410 1448 468 83 192 "" [1 uses])
(note 468 1410 1268 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1268 468 470 83 (set (reg/f:DI 1 dx [769])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 46 [0x2e]))) 214 {*leadi}
     (nil))
(insn 470 1268 472 83 (set (reg:DI 37 r8)
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (nil))
(insn 472 470 473 83 (set (reg:DI 2 cx)
        (reg/v/f:DI 3 bx [orig:633 state ] [633])) 89 {*movdi_internal}
     (nil))
(call_insn 473 472 474 83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 474 473 1449 83 (set (reg:DI 0 ax [orig:292 D.6036 ] [292])
        (mem:DI (plus:DI (reg/v/f:DI 3 bx [orig:633 state ] [633])
                (const_int 200 [0xc8])) [3 state_4(D)->t64+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 1449 474 1450 83 (set (pc)
        (label_ref 564)) -1
     (nil)
 -> 564)
;;  succ:       13 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 7 [sp]

(barrier 1450 1449 1160)
(note 1160 1450 0 NOTE_INSN_DELETED)

;; Function Hash (Hash, funcdef_no=21, decl_uid=3197, cgraph_uid=21, symbol_order=29)



Hash

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 5[di] 7[sp] 17[flags] 21[xmm0] 37[r8] 38[r9] 39[r10] 40[r11]
;;  ref usage 	r0={33d,30u} r1={7d,4u} r2={15d,14u} r3={4d,8u} r5={6d,6u} r7={7d,74u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1e} r17={15d,7u} r18={4d} r19={4d} r20={4e} r21={6d,1u} r22={5d} r23={5d} r24={5d} r25={4d} r26={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,4u} r38={7d,4u} r39={5d,3u} r40={6d,2u} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 485{323d,157u,5e} in 121{117 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags] 39 [r10]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
(note 9 1 209 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 209 9 210 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 5 di)) blake_ref.c:662 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil)))
(insn/f 210 209 211 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) blake_ref.c:662 65 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 211 210 212 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -440 [0xfffffffffffffe48])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:662 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -440 [0xfffffffffffffe48])))
            (nil))))
(insn 212 211 213 2 (unspec_volatile [
            (reg/f:DI 7 sp)
        ] UNSPECV_PROLOGUE_USE) blake_ref.c:662 679 {prologue_use}
     (nil))
(note 213 212 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 213 6 2 (set (reg/v:SI 39 r10 [orig:95 hashbitlen ] [95])
        (reg:SI 2 cx [ hashbitlen ])) blake_ref.c:662 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ hashbitlen ])
        (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [2 hashbitlen+0 S4 A64])
            (nil))))
(note 6 2 208 2 NOTE_INSN_FUNCTION_BEG)
(insn 208 6 13 2 (set (reg:SI 0 ax [orig:99 D.6062 ] [99])
        (plus:SI (reg:SI 2 cx [orig:95 hashbitlen ] [95])
            (const_int -224 [0xffffffffffffff20]))) blake_ref.c:207 213 {*leasi}
     (nil))
(note 13 208 232 2 NOTE_INSN_DELETED)
(insn 232 13 15 2 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 0 ax [orig:99 D.6062 ] [99])
                        (const_int -33 [0xffffffffffffffdf]))
                    (const_int 0 [0])))
            (set (reg:SI 0 ax [orig:99 D.6062 ] [99])
                (and:SI (reg:SI 0 ax [orig:99 D.6062 ] [99])
                    (const_int -33 [0xffffffffffffffdf])))
        ]) blake_ref.c:207 392 {*andsi_2}
     (nil))
(jump_insn 15 232 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) blake_ref.c:207 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 57)
;;  succ:       3 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              10 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 3, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:95 hashbitlen ] [95])
            (const_int 224 [0xe0]))) blake_ref.c:210 7 {*cmpsi_1}
     (nil))
(jump_insn 18 17 32 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 238)
            (pc))) blake_ref.c:210 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 238)
;;  succ:       14 [28.0%]  (CAN_FALLTHRU)
;;              4 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 4, loop depth 0, count 0, freq 111, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax]
;; live  kill	
(note 32 18 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 32 35 4 (set (reg:DI 0 ax [orig:107 MEM[(char * {ref-all})&IV256] ] [107])
        (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(char * {ref-all})&IV256]+0 S8 A256])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>) [0 MEM[(char * {ref-all})&IV256]+0 S8 A256])
        (nil)))
(insn 35 34 36 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 MEM[(char * {ref-all})&state + 16B]+0 S8 A128])
        (reg:DI 0 ax [orig:107 MEM[(char * {ref-all})&IV256] ] [107])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:107 MEM[(char * {ref-all})&IV256] ] [107])
        (nil)))
(insn 36 35 37 4 (set (reg:DI 0 ax [orig:108 MEM[(char * {ref-all})&IV256]+8 ] [108])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV256]+8 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV256]+8 S8 A64])
        (nil)))
(insn 37 36 38 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [0 MEM[(char * {ref-all})&state + 16B]+8 S8 A64])
        (reg:DI 0 ax [orig:108 MEM[(char * {ref-all})&IV256]+8 ] [108])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:108 MEM[(char * {ref-all})&IV256]+8 ] [108])
        (nil)))
(insn 38 37 39 4 (set (reg:DI 0 ax [orig:109 MEM[(char * {ref-all})&IV256]+16 ] [109])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV256]+16 S8 A128])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV256]+16 S8 A128])
        (nil)))
(insn 39 38 40 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 MEM[(char * {ref-all})&state + 16B]+16 S8 A128])
        (reg:DI 0 ax [orig:109 MEM[(char * {ref-all})&IV256]+16 ] [109])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:109 MEM[(char * {ref-all})&IV256]+16 ] [109])
        (nil)))
(insn 40 39 41 4 (set (reg:DI 0 ax [orig:110 MEM[(char * {ref-all})&IV256]+24 ] [110])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV256]+24 S8 A64])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV256") [flags 0x2]  <var_decl 0x6ffffe13de0 IV256>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV256]+24 S8 A64])
        (nil)))
(insn 41 40 42 4 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [0 MEM[(char * {ref-all})&state + 16B]+24 S8 A64])
        (reg:DI 0 ax [orig:110 MEM[(char * {ref-all})&IV256]+24 ] [110])) blake_ref.c:213 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:110 MEM[(char * {ref-all})&IV256]+24 ] [110])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 5, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              14 [100.0%]  (CAN_FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags] 21 [xmm0] 40 [r11]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 21 [xmm0] 40 [r11]
;; live  kill	 17 [flags]
(code_label 42 41 43 5 198 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [2 state.t32+0 S4 A128])
        (const_int 0 [0])) blake_ref.c:215 90 {*movsi_internal}
     (nil))
(insn 45 44 206 5 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 100 [0x64])) [2 state.t32+4 S4 A32])
        (const_int 0 [0])) blake_ref.c:216 90 {*movsi_internal}
     (nil))
(insn 206 45 207 5 (set (reg/f:DI 3 bx [148])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) 214 {*leadi}
     (nil))
(insn 207 206 51 5 (set (reg/f:DI 40 r11 [112])
        (plus:DI (reg/f:DI 3 bx [148])
            (const_int 56 [0x38]))) 214 {*leadi}
     (nil))
(insn 51 207 231 5 (set (reg:DI 2 cx [116])
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 231 51 197 5 (parallel [
            (set (reg:DI 0 ax [115])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) 83 {*movdi_xor}
     (nil))
(insn 197 231 52 5 (set (reg/f:DI 5 di [orig:114 D.6063 ] [114])
        (reg/f:DI 40 r11 [112])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [112])
        (nil)))
(insn 52 197 53 5 (parallel [
            (set (reg:DI 2 cx [116])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [orig:114 D.6063 ] [114])
                (plus:DI (ashift:DI (reg:DI 2 cx [116])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [orig:114 D.6063 ] [114])))
            (set (mem/c:BLK (reg/f:DI 5 di [orig:114 D.6063 ] [114]) [0 MEM[(void *)&state + 56B]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [115]))
            (use (reg:DI 2 cx [116]))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [115])
        (expr_list:REG_UNUSED (reg/f:DI 5 di [orig:114 D.6063 ] [114])
            (expr_list:REG_UNUSED (reg:DI 2 cx [116])
                (nil)))))
(insn 53 52 54 5 (set (reg:V4SI 21 xmm0 [117])
        (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])) blake_ref.c:221 1194 {*movv4si_internal}
     (expr_list:REG_EQUIV (const_vector:V4SI [
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
                (const_int 0 [0])
            ])
        (nil)))
(insn 54 53 120 5 (set (mem/c:V16QI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [2 MEM[(unsigned int *)&state + 120B]+0 S16 A64])
        (unspec:V16QI [
                (reg:V16QI 21 xmm0 [117])
            ] UNSPEC_STOREU)) blake_ref.c:221 1312 {sse2_storedquv16qi}
     (expr_list:REG_DEAD (reg:V16QI 21 xmm0 [117])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 6, loop depth 0, count 0, freq 205, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              13 [100.0%]  (CAN_FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 120 54 121 6 199 "" [1 uses])
(note 121 120 122 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [2 state.hashbitlen+0 S4 A128])
        (reg/v:SI 39 r10 [orig:95 hashbitlen ] [95])) blake_ref.c:251 90 {*movsi_internal}
     (nil))
(insn 123 122 124 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 52 [0x34])) [2 state.datalen+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:252 90 {*movsi_internal}
     (nil))
(insn 124 123 125 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 56 [0x38])) [2 state.init+0 S4 A64])
        (const_int 1 [0x1])) blake_ref.c:253 90 {*movsi_internal}
     (nil))
(insn 125 124 126 6 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 60 [0x3c])) [2 state.nullt+0 S4 A32])
        (const_int 0 [0])) blake_ref.c:254 90 {*movsi_internal}
     (nil))
(insn 126 125 127 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 39 r10 [orig:95 hashbitlen ] [95])
            (const_int 383 [0x17f]))) blake_ref.c:399 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 39 r10 [orig:95 hashbitlen ] [95])
        (nil)))
(jump_insn 127 126 128 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) blake_ref.c:399 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 139)
;;  succ:       7 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [50.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]

;; basic block 7, loop depth 0, count 0, freq 60, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [50.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags]
;; live  kill	
(note 128 127 129 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 37 r8 [orig:97 databitlen ] [97])
            (const_int 0 [0]))) blake_ref.c:295 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 130 129 149 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 239)
            (pc))) blake_ref.c:295 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2071 (nil)))
 -> 239)
;;  succ:       8 [79.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              15 [20.7%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]

;; basic block 8, loop depth 0, count 0, freq 86, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [79.3%]  (FALLTHRU,CAN_FALLTHRU)
;;              16 [71.0%]  (CAN_FALLTHRU)
;;              15 [100.0%]  (CAN_FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 38 [r9]
;; lr  use 	 3 [bx] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 149 130 150 8 204 "" [2 uses])
(note 150 149 152 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 152 150 153 8 (set (reg:DI 1 dx)
        (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (nil)))
(insn 153 152 154 8 (set (reg:DI 2 cx)
        (reg/f:DI 3 bx [148])) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [148])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -384 [0xfffffffffffffe80]))
            (nil))))
(call_insn 154 153 156 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>) [0 Final S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:673 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:DI 1 dx)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
;;  succ:       9 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       10 [67.0%]  (CAN_FALLTHRU)
;;              8 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              17 [100.0%]  (CAN_FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(code_label 156 154 157 9 200 "" [2 uses])
(note 157 156 163 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 163 157 214 9 (use (reg/i:SI 0 ax)) blake_ref.c:677 -1
     (nil))
(note 214 163 215 9 NOTE_INSN_EPILOGUE_BEG)
(insn 215 214 216 9 (unspec_volatile [
            (const_int 0 [0])
        ] UNSPECV_BLOCKAGE) blake_ref.c:677 677 {blockage}
     (nil))
(insn/f 216 215 217 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 440 [0x1b8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) blake_ref.c:677 968 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 440 [0x1b8])))
            (nil))))
(insn/f 217 216 218 9 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:677 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 218 217 219 9 (set (reg:DI 5 di)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) blake_ref.c:677 75 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 5 di)
            (nil))))
(jump_insn 219 218 220 9 (simple_return) blake_ref.c:677 680 {simple_return_internal}
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]

(barrier 220 219 57)
;; basic block 10, loop depth 0, count 0, freq 154, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (CAN_FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(code_label 57 220 58 10 196 "" [1 uses])
(note 58 57 205 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 205 58 60 10 (set (reg:SI 2 cx [orig:118 D.6062 ] [118])
        (plus:SI (reg:SI 2 cx [orig:95 hashbitlen ] [95])
            (const_int -384 [0xfffffffffffffe80]))) blake_ref.c:227 213 {*leasi}
     (nil))
(note 60 205 7 10 NOTE_INSN_DELETED)
(insn 7 60 230 10 (set (reg:SI 0 ax [orig:87 D.6061 ] [87])
        (const_int 2 [0x2])) blake_ref.c:249 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))
(insn 230 7 62 10 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (and:SI (reg:SI 2 cx [orig:118 D.6062 ] [118])
                        (const_int -129 [0xffffffffffffff7f]))
                    (const_int 0 [0])))
            (set (reg:SI 2 cx [orig:118 D.6062 ] [118])
                (and:SI (reg:SI 2 cx [orig:118 D.6062 ] [118])
                    (const_int -129 [0xffffffffffffff7f])))
        ]) blake_ref.c:227 392 {*andsi_2}
     (nil))
(jump_insn 62 230 63 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 156)
            (pc))) blake_ref.c:227 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6700 (nil)))
 -> 156)
;;  succ:       11 [33.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              9 [67.0%]  (CAN_FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 11, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [33.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 17 [flags]
;; live  kill	
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 39 r10 [orig:95 hashbitlen ] [95])
            (const_int 384 [0x180]))) blake_ref.c:230 7 {*cmpsi_1}
     (nil))
(jump_insn 65 64 87 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 240)
            (pc))) blake_ref.c:230 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 240)
;;  succ:       18 [28.0%]  (CAN_FALLTHRU)
;;              12 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 12, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       11 [72.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax]
;; live  kill	
(note 87 65 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 87 90 12 (set (reg:DI 0 ax [orig:130 MEM[(char * {ref-all})&IV512] ] [130])
        (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(char * {ref-all})&IV512]+0 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>) [0 MEM[(char * {ref-all})&IV512]+0 S8 A256])
        (nil)))
(insn 90 89 91 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [0 MEM[(char * {ref-all})&state + 136B]+0 S8 A64])
        (reg:DI 0 ax [orig:130 MEM[(char * {ref-all})&IV512] ] [130])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:130 MEM[(char * {ref-all})&IV512] ] [130])
        (nil)))
(insn 91 90 92 12 (set (reg:DI 0 ax [orig:131 MEM[(char * {ref-all})&IV512]+8 ] [131])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV512]+8 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV512]+8 S8 A64])
        (nil)))
(insn 92 91 93 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 MEM[(char * {ref-all})&state + 136B]+8 S8 A64])
        (reg:DI 0 ax [orig:131 MEM[(char * {ref-all})&IV512]+8 ] [131])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:131 MEM[(char * {ref-all})&IV512]+8 ] [131])
        (nil)))
(insn 93 92 94 12 (set (reg:DI 0 ax [orig:132 MEM[(char * {ref-all})&IV512]+16 ] [132])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV512]+16 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV512]+16 S8 A128])
        (nil)))
(insn 94 93 95 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [0 MEM[(char * {ref-all})&state + 136B]+16 S8 A64])
        (reg:DI 0 ax [orig:132 MEM[(char * {ref-all})&IV512]+16 ] [132])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:132 MEM[(char * {ref-all})&IV512]+16 ] [132])
        (nil)))
(insn 95 94 96 12 (set (reg:DI 0 ax [orig:133 MEM[(char * {ref-all})&IV512]+24 ] [133])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV512]+24 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV512]+24 S8 A64])
        (nil)))
(insn 96 95 97 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [0 MEM[(char * {ref-all})&state + 136B]+24 S8 A64])
        (reg:DI 0 ax [orig:133 MEM[(char * {ref-all})&IV512]+24 ] [133])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:133 MEM[(char * {ref-all})&IV512]+24 ] [133])
        (nil)))
(insn 97 96 98 12 (set (reg:DI 0 ax [orig:134 MEM[(char * {ref-all})&IV512]+32 ] [134])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV512]+32 S8 A256])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV512]+32 S8 A256])
        (nil)))
(insn 98 97 99 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [0 MEM[(char * {ref-all})&state + 136B]+32 S8 A64])
        (reg:DI 0 ax [orig:134 MEM[(char * {ref-all})&IV512]+32 ] [134])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:134 MEM[(char * {ref-all})&IV512]+32 ] [134])
        (nil)))
(insn 99 98 100 12 (set (reg:DI 0 ax [orig:135 MEM[(char * {ref-all})&IV512]+40 ] [135])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV512]+40 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV512]+40 S8 A64])
        (nil)))
(insn 100 99 101 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 MEM[(char * {ref-all})&state + 136B]+40 S8 A64])
        (reg:DI 0 ax [orig:135 MEM[(char * {ref-all})&IV512]+40 ] [135])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:135 MEM[(char * {ref-all})&IV512]+40 ] [135])
        (nil)))
(insn 101 100 102 12 (set (reg:DI 0 ax [orig:136 MEM[(char * {ref-all})&IV512]+48 ] [136])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV512]+48 S8 A128])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV512]+48 S8 A128])
        (nil)))
(insn 102 101 103 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [0 MEM[(char * {ref-all})&state + 136B]+48 S8 A64])
        (reg:DI 0 ax [orig:136 MEM[(char * {ref-all})&IV512]+48 ] [136])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:136 MEM[(char * {ref-all})&IV512]+48 ] [136])
        (nil)))
(insn 103 102 104 12 (set (reg:DI 0 ax [orig:137 MEM[(char * {ref-all})&IV512]+56 ] [137])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV512]+56 S8 A64])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV512") [flags 0x2]  <var_decl 0x6ffffe14140 IV512>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV512]+56 S8 A64])
        (nil)))
(insn 104 103 105 12 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [0 MEM[(char * {ref-all})&state + 136B]+56 S8 A64])
        (reg:DI 0 ax [orig:137 MEM[(char * {ref-all})&IV512]+56 ] [137])) blake_ref.c:233 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:137 MEM[(char * {ref-all})&IV512]+56 ] [137])
        (nil)))
;;  succ:       13 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 13, loop depth 0, count 0, freq 51, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU,CAN_FALLTHRU)
;;              18 [100.0%]  (CAN_FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 17 [flags] 40 [r11]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 40 [r11]
;; live  kill	 17 [flags]
(code_label 105 104 106 13 202 "" [1 uses])
(note 106 105 107 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 248 [0xf8])) [3 state.t64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:235 89 {*movdi_internal}
     (nil))
(insn 108 107 203 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 256 [0x100])) [3 state.t64+8 S8 A128])
        (const_int 0 [0])) blake_ref.c:236 89 {*movdi_internal}
     (nil))
(insn 203 108 204 13 (set (reg/f:DI 3 bx [148])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) 214 {*leadi}
     (nil))
(insn 204 203 114 13 (set (reg/f:DI 40 r11 [139])
        (plus:DI (reg/f:DI 3 bx [148])
            (const_int 216 [0xd8]))) 214 {*leadi}
     (nil))
(insn 114 204 229 13 (set (reg:DI 2 cx [143])
        (const_int 8 [0x8])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 229 114 198 13 (parallel [
            (set (reg:DI 0 ax [142])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) 83 {*movdi_xor}
     (nil))
(insn 198 229 115 13 (set (reg/f:DI 5 di [orig:141 D.6064 ] [141])
        (reg/f:DI 40 r11 [139])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 40 r11 [139])
        (nil)))
(insn 115 198 116 13 (parallel [
            (set (reg:DI 2 cx [143])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [orig:141 D.6064 ] [141])
                (plus:DI (ashift:DI (reg:DI 2 cx [143])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [orig:141 D.6064 ] [141])))
            (set (mem/c:BLK (reg/f:DI 5 di [orig:141 D.6064 ] [141]) [0 MEM[(void *)&state + 216B]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [142]))
            (use (reg:DI 2 cx [143]))
        ]) 933 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [142])
        (expr_list:REG_UNUSED (reg/f:DI 5 di [orig:141 D.6064 ] [141])
            (expr_list:REG_UNUSED (reg:DI 2 cx [143])
                (nil)))))
(insn 116 115 117 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 392 [0x188])) [3 state.salt64+0 S8 A64])
        (const_int 0 [0])) blake_ref.c:241 89 {*movdi_internal}
     (nil))
(insn 117 116 118 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 400 [0x190])) [3 state.salt64+8 S8 A128])
        (const_int 0 [0])) blake_ref.c:242 89 {*movdi_internal}
     (nil))
(insn 118 117 119 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 408 [0x198])) [3 state.salt64+16 S8 A64])
        (const_int 0 [0])) blake_ref.c:243 89 {*movdi_internal}
     (nil))
(insn 119 118 241 13 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 416 [0x1a0])) [3 state.salt64+24 S8 A128])
        (const_int 0 [0])) blake_ref.c:244 89 {*movdi_internal}
     (nil))
(jump_insn 241 119 242 13 (set (pc)
        (label_ref 120)) -1
     (nil)
 -> 120)
;;  succ:       6 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

(barrier 242 241 238)
;; basic block 14, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [28.0%]  (CAN_FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 238 242 19 14 212 "" [1 uses])
(note 19 238 21 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 21 19 22 14 (set (reg:DI 0 ax [orig:102 MEM[(char * {ref-all})&IV224] ] [102])
        (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(char * {ref-all})&IV224]+0 S8 A256])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>) [0 MEM[(char * {ref-all})&IV224]+0 S8 A256])
        (nil)))
(insn 22 21 23 14 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [0 MEM[(char * {ref-all})&state + 16B]+0 S8 A128])
        (reg:DI 0 ax [orig:102 MEM[(char * {ref-all})&IV224] ] [102])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:102 MEM[(char * {ref-all})&IV224] ] [102])
        (nil)))
(insn 23 22 24 14 (set (reg:DI 0 ax [orig:103 MEM[(char * {ref-all})&IV224]+8 ] [103])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV224]+8 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV224]+8 S8 A64])
        (nil)))
(insn 24 23 25 14 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 72 [0x48])) [0 MEM[(char * {ref-all})&state + 16B]+8 S8 A64])
        (reg:DI 0 ax [orig:103 MEM[(char * {ref-all})&IV224]+8 ] [103])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:103 MEM[(char * {ref-all})&IV224]+8 ] [103])
        (nil)))
(insn 25 24 26 14 (set (reg:DI 0 ax [orig:104 MEM[(char * {ref-all})&IV224]+16 ] [104])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV224]+16 S8 A128])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV224]+16 S8 A128])
        (nil)))
(insn 26 25 27 14 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [0 MEM[(char * {ref-all})&state + 16B]+16 S8 A128])
        (reg:DI 0 ax [orig:104 MEM[(char * {ref-all})&IV224]+16 ] [104])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:104 MEM[(char * {ref-all})&IV224]+16 ] [104])
        (nil)))
(insn 27 26 28 14 (set (reg:DI 0 ax [orig:105 MEM[(char * {ref-all})&IV224]+24 ] [105])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV224]+24 S8 A64])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV224") [flags 0x2]  <var_decl 0x6ffffe13f00 IV224>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV224]+24 S8 A64])
        (nil)))
(insn 28 27 243 14 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 88 [0x58])) [0 MEM[(char * {ref-all})&state + 16B]+24 S8 A64])
        (reg:DI 0 ax [orig:105 MEM[(char * {ref-all})&IV224]+24 ] [105])) blake_ref.c:211 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:105 MEM[(char * {ref-all})&IV224]+24 ] [105])
        (nil)))
(jump_insn 243 28 244 14 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
;;  succ:       5 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

(barrier 244 243 239)
;; basic block 15, loop depth 0, count 0, freq 26, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [20.7%]  (CAN_FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 2 [cx] 38 [r9]
;; live  kill	
(code_label 239 244 131 15 213 "" [1 uses])
(note 131 239 199 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 199 131 135 15 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-392 S8 A64])
        (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (nil)))
(insn 135 199 136 15 (set (reg:DI 2 cx)
        (reg/f:DI 3 bx [148])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -384 [0xfffffffffffffe80]))
        (nil)))
(call_insn 136 135 200 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>) [0 Update32.part.0 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update32.part.0") [flags 0x3]  <function_decl 0x6ffffd85898 Update32.part.0>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 200 136 245 15 (set (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-392 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 245 200 246 15 (set (pc)
        (label_ref 149)) -1
     (nil)
 -> 149)
;;  succ:       8 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 38 [r9]
;; live  out 	 3 [bx] 7 [sp] 38 [r9]

(barrier 246 245 139)
;; basic block 16, loop depth 0, count 0, freq 60, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [50.0%]  (CAN_FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 139 246 140 16 203 "" [1 uses])
(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 37 r8 [orig:97 databitlen ] [97])
            (const_int 0 [0]))) blake_ref.c:351 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 142 141 143 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 149)
            (pc))) blake_ref.c:351 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 149)
;;  succ:       8 [71.0%]  (CAN_FALLTHRU)
;;              17 [29.0%]  (FALLTHRU,CAN_FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]

;; basic block 17, loop depth 0, count 0, freq 34, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [29.0%]  (FALLTHRU,CAN_FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 2 [cx] 38 [r9]
;; live  kill	
(note 143 142 201 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 201 143 147 17 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-392 S8 A64])
        (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (nil)))
(insn 147 201 148 17 (set (reg:DI 2 cx)
        (reg/f:DI 3 bx [148])) 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -384 [0xfffffffffffffe80]))
        (nil)))
(call_insn 148 147 202 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>) [0 Update64.part.1 S1 A8])
            (const_int 32 [0x20]))) 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 2 cx)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("Update64.part.1") [flags 0x3]  <function_decl 0x6ffffd84cc8 Update64.part.1>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (expr_list:DI (use (reg:DI 37 r8))
                (nil)))))
(insn 202 148 234 17 (set (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [6 %sfp+-392 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 234 202 235 17 (set (reg:DI 1 dx)
        (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 38 r9 [orig:98 hashval ] [98])
        (nil)))
(insn 235 234 236 17 (set (reg:DI 2 cx)
        (reg/f:DI 3 bx [148])) blake_ref.c:673 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -384 [0xfffffffffffffe80]))
        (expr_list:REG_DEAD (reg/f:DI 3 bx [148])
            (nil))))
(call_insn 236 235 247 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>) [0 Final S1 A8])
            (const_int 32 [0x20]))) blake_ref.c:673 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("Final") [flags 0x3]  <function_decl 0x6ffffd81440 Final>)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (nil)))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:DI (use (reg:DI 1 dx))
            (nil))))
(jump_insn 247 236 248 17 (set (pc)
        (label_ref 156)) -1
     (nil)
 -> 156)
;;  succ:       9 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 38 [r9]
;; live  out 	 3 [bx] 7 [sp] 38 [r9]

(barrier 248 247 240)
;; basic block 18, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 17, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [28.0%]  (CAN_FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 240 248 66 18 214 "" [1 uses])
(note 66 240 68 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 68 66 69 18 (set (reg:DI 0 ax [orig:121 MEM[(char * {ref-all})&IV384] ] [121])
        (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(char * {ref-all})&IV384]+0 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>) [0 MEM[(char * {ref-all})&IV384]+0 S8 A256])
        (nil)))
(insn 69 68 70 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 184 [0xb8])) [0 MEM[(char * {ref-all})&state + 136B]+0 S8 A64])
        (reg:DI 0 ax [orig:121 MEM[(char * {ref-all})&IV384] ] [121])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:121 MEM[(char * {ref-all})&IV384] ] [121])
        (nil)))
(insn 70 69 71 18 (set (reg:DI 0 ax [orig:122 MEM[(char * {ref-all})&IV384]+8 ] [122])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV384]+8 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 8 [0x8]))) [0 MEM[(char * {ref-all})&IV384]+8 S8 A64])
        (nil)))
(insn 71 70 72 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 192 [0xc0])) [0 MEM[(char * {ref-all})&state + 136B]+8 S8 A64])
        (reg:DI 0 ax [orig:122 MEM[(char * {ref-all})&IV384]+8 ] [122])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:122 MEM[(char * {ref-all})&IV384]+8 ] [122])
        (nil)))
(insn 72 71 73 18 (set (reg:DI 0 ax [orig:123 MEM[(char * {ref-all})&IV384]+16 ] [123])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV384]+16 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 16 [0x10]))) [0 MEM[(char * {ref-all})&IV384]+16 S8 A128])
        (nil)))
(insn 73 72 74 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 200 [0xc8])) [0 MEM[(char * {ref-all})&state + 136B]+16 S8 A64])
        (reg:DI 0 ax [orig:123 MEM[(char * {ref-all})&IV384]+16 ] [123])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:123 MEM[(char * {ref-all})&IV384]+16 ] [123])
        (nil)))
(insn 74 73 75 18 (set (reg:DI 0 ax [orig:124 MEM[(char * {ref-all})&IV384]+24 ] [124])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV384]+24 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 24 [0x18]))) [0 MEM[(char * {ref-all})&IV384]+24 S8 A64])
        (nil)))
(insn 75 74 76 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 208 [0xd0])) [0 MEM[(char * {ref-all})&state + 136B]+24 S8 A64])
        (reg:DI 0 ax [orig:124 MEM[(char * {ref-all})&IV384]+24 ] [124])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:124 MEM[(char * {ref-all})&IV384]+24 ] [124])
        (nil)))
(insn 76 75 77 18 (set (reg:DI 0 ax [orig:125 MEM[(char * {ref-all})&IV384]+32 ] [125])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV384]+32 S8 A256])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 32 [0x20]))) [0 MEM[(char * {ref-all})&IV384]+32 S8 A256])
        (nil)))
(insn 77 76 78 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 216 [0xd8])) [0 MEM[(char * {ref-all})&state + 136B]+32 S8 A64])
        (reg:DI 0 ax [orig:125 MEM[(char * {ref-all})&IV384]+32 ] [125])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:125 MEM[(char * {ref-all})&IV384]+32 ] [125])
        (nil)))
(insn 78 77 79 18 (set (reg:DI 0 ax [orig:126 MEM[(char * {ref-all})&IV384]+40 ] [126])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV384]+40 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 40 [0x28]))) [0 MEM[(char * {ref-all})&IV384]+40 S8 A64])
        (nil)))
(insn 79 78 80 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 224 [0xe0])) [0 MEM[(char * {ref-all})&state + 136B]+40 S8 A64])
        (reg:DI 0 ax [orig:126 MEM[(char * {ref-all})&IV384]+40 ] [126])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:126 MEM[(char * {ref-all})&IV384]+40 ] [126])
        (nil)))
(insn 80 79 81 18 (set (reg:DI 0 ax [orig:127 MEM[(char * {ref-all})&IV384]+48 ] [127])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV384]+48 S8 A128])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 48 [0x30]))) [0 MEM[(char * {ref-all})&IV384]+48 S8 A128])
        (nil)))
(insn 81 80 82 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 232 [0xe8])) [0 MEM[(char * {ref-all})&state + 136B]+48 S8 A64])
        (reg:DI 0 ax [orig:127 MEM[(char * {ref-all})&IV384]+48 ] [127])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:127 MEM[(char * {ref-all})&IV384]+48 ] [127])
        (nil)))
(insn 82 81 83 18 (set (reg:DI 0 ax [orig:128 MEM[(char * {ref-all})&IV384]+56 ] [128])
        (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV384]+56 S8 A64])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (plus:DI (symbol_ref:DI ("IV384") [flags 0x2]  <var_decl 0x6ffffe14020 IV384>)
                    (const_int 56 [0x38]))) [0 MEM[(char * {ref-all})&IV384]+56 S8 A64])
        (nil)))
(insn 83 82 249 18 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 240 [0xf0])) [0 MEM[(char * {ref-all})&state + 136B]+56 S8 A64])
        (reg:DI 0 ax [orig:128 MEM[(char * {ref-all})&IV384]+56 ] [128])) blake_ref.c:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:128 MEM[(char * {ref-all})&IV384]+56 ] [128])
        (nil)))
(jump_insn 249 83 250 18 (set (pc)
        (label_ref 105)) -1
     (nil)
 -> 105)
;;  succ:       13 [100.0%]  (CAN_FALLTHRU)
;; lr  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 1 [dx] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

(barrier 250 249 196)
(note 196 250 0 NOTE_INSN_DELETED)
